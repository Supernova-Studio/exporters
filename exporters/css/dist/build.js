(()=>{var e={"./node_modules/@supernovaio/export-helpers/build/helpers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supernovaio/export-helpers/build/helpers.js ***!
  \*******************************************************************/(e,t,r)=>{(()=>{"use strict";var e={639:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Iterators=void 0;const o=r(58);t.Iterators=class{static allTokenTypes(){return[o.TokenType.color,o.TokenType.typography,o.TokenType.dimension,o.TokenType.size,o.TokenType.space,o.TokenType.opacity,o.TokenType.fontSize,o.TokenType.lineHeight,o.TokenType.letterSpacing,o.TokenType.paragraphSpacing,o.TokenType.borderWidth,o.TokenType.radius,o.TokenType.duration,o.TokenType.zIndex,o.TokenType.shadow,o.TokenType.border,o.TokenType.gradient,o.TokenType.string,o.TokenType.productCopy,o.TokenType.fontFamily,o.TokenType.fontWeight,o.TokenType.textCase,o.TokenType.textDecoration,o.TokenType.visibility,o.TokenType.blur]}static allDimensionTokenTypes(){return[o.TokenType.dimension,o.TokenType.size,o.TokenType.space,o.TokenType.opacity,o.TokenType.fontSize,o.TokenType.lineHeight,o.TokenType.letterSpacing,o.TokenType.paragraphSpacing,o.TokenType.borderWidth,o.TokenType.radius,o.TokenType.duration,o.TokenType.zIndex]}static allStringTokenTypes(){return[o.TokenType.string,o.TokenType.productCopy,o.TokenType.fontFamily,o.TokenType.fontWeight]}static allOptionTokenTypes(){return[o.TokenType.textCase,o.TokenType.textDecoration,o.TokenType.visibility]}}},989:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.ColorFormat=void 0,(r=t.ColorFormat||(t.ColorFormat={})).rgb="rgb",r.rgba="rgba",r.smartRgba="smartRgba",r.hex6="hex6",r.hex8="hex8",r.hashHex6="hashHex6",r.hashHex8="hashHex8",r.smartHashHex="smartHashHex",r.smartHex="smartHex",r.hsl="hsl",r.hsla="hsla",r.smartHsla="smartHsla",r.smartUIColor="smartUIColor"},545:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.StringCase=void 0,(r=t.StringCase||(t.StringCase={})).camelCase="camelCase",r.capitalCase="capitalCase",r.constantCase="constantCase",r.dotCase="dotCase",r.headerCase="headerCase",r.noCase="noCase",r.paramCase="paramCase",r.pascalCase="pascalCase",r.pathCase="pathCase",r.sentenceCase="sentenceCase",r.snakeCase="snakeCase"},617:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FileHelper=void 0;const o=r(58);t.FileHelper=class{static createCopyRemoteFile({relativePath:e,fileName:t,url:r}){return{path:e,name:t,type:o.OutputFileType.copyRemoteUrl,url:r}}static createTextFile({relativePath:e,fileName:t,content:r}){return{path:e,name:t,type:o.OutputFileType.text,content:r}}static createBinaryFile({relativePath:e,fileName:t,data:r}){return{path:e,name:t,type:o.OutputFileType.binary,data:r}}}},761:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.sureOptionalReference=void 0,t.sureOptionalReference=function(e,t,r=!0){if(!e||!r)return null;const o=t.get(e);if(!o)throw new Error(`Trying to retrieve unknown referenced token ${e}`);return o}},118:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NetworkHelper=void 0,t.NetworkHelper=class{static async fetchAsText(e,t,r){return(await this.performFetch(e,t,r)).text()}static async fetchAsJSON(e,t,r){return(await this.performFetch(e,t,r)).json()}static async fetchAsData(e,t,r){return(await this.performFetch(e,t,r)).arrayBuffer()}static async performFetch(e,t,r){try{const o=await e.network.fetch(t,r);if(!o.ok)throw new Error(`Request failed with status ${o.status}, error: ${await o.text()}`);return o}catch(e){throw e}}}},771:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CSSHelper=void 0;const o=r(58),n=r(761),a=r(952);t.CSSHelper=class{static tokenToCSS(e,t,r){switch(e.tokenType){case o.TokenType.color:return this.colorTokenValueToCSS(e.value,t,r);case o.TokenType.border:return this.borderTokenValueToCSS(e.value,t,r);case o.TokenType.gradient:return this.gradientTokenValueToCSS(e.value,t,r);case o.TokenType.dimension:case o.TokenType.size:case o.TokenType.space:case o.TokenType.opacity:case o.TokenType.fontSize:case o.TokenType.lineHeight:case o.TokenType.letterSpacing:case o.TokenType.paragraphSpacing:case o.TokenType.borderWidth:case o.TokenType.radius:case o.TokenType.duration:case o.TokenType.zIndex:return this.dimensionTokenValueToCSS(e.value,t,r);case o.TokenType.shadow:return this.shadowTokenValueToCSS(e.value,t,r);case o.TokenType.fontWeight:return this.fontWeightTokenValueToCSS(e.value,t,r);case o.TokenType.fontFamily:case o.TokenType.productCopy:case o.TokenType.string:return this.stringTokenValueToCSS(e.value,t,r);case o.TokenType.textCase:case o.TokenType.textDecoration:case o.TokenType.visibility:return this.optionTokenValueToCSS(e.value,t,r,e.tokenType);case o.TokenType.blur:return this.blurTokenValueToCSS(e.value,t,r);case o.TokenType.typography:return this.typographyTokenValueToCSS(e.value,t,r);default:throw new o.UnreachableCaseError(e.tokenType,"Unsupported token type for transformation to CSS:")}}static colorTokenValueToCSS(e,t,r){return a.ColorHelper.formattedColorOrVariableName(e,t,r)}static borderTokenValueToCSS(e,t,r){const o=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);if(o)return r.tokenToVariableRef(o);const a=this.dimensionTokenValueToCSS(e.width,t,r),i=this.borderStyleToCSS(e.style),s=this.colorTokenValueToCSS(e.color,t,r);return this.borderPositionToCSS(e.position),`${a} ${i} ${s}`}static gradientTokenValueToCSS(e,t,r){return e.map((e=>this.gradientLayerToCSS(e,t,r))).join(", ")}static gradientLayerToCSS(e,t,r){const i=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);if(i)return r.tokenToVariableRef(i);const s=a.ColorHelper.roundToDecimals(e.to.x,r.decimals)-a.ColorHelper.roundToDecimals(e.from.x,r.decimals),l=a.ColorHelper.roundToDecimals(e.to.y,r.decimals)-a.ColorHelper.roundToDecimals(e.from.y,r.decimals),c=Math.atan2(l,s)*(180/Math.PI),u=()=>s>=0&&l>0||s>0&&l<=0||s<=0&&l<0?90+c:c-270;let d="";switch(e.type){case o.GradientType.linear:d=`linear-gradient(${u()}deg, `;break;case o.GradientType.radial:d="radial-gradient(circle, ";break;case o.GradientType.angular:d="conic-gradient(";break;default:d=`linear-gradient(${u()}deg, `}return`${d}${e.stops.map((e=>`${this.colorTokenValueToCSS(e.color,t,r)} ${a.ColorHelper.roundToDecimals(100*e.position,r.decimals)}%`)).join(", ")})`}static dimensionTokenValueToCSS(e,t,r){const o=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);return o?r.tokenToVariableRef(o):`${a.ColorHelper.roundToDecimals(e.measure,r.decimals)}${this.unitToCSS(e.unit)}`}static shadowTokenValueToCSS(e,t,r){return e.map((e=>this.shadowLayerToCSS(e,t,r))).join(", ")}static shadowLayerToCSS(e,t,r){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);return a?r.tokenToVariableRef(a):`${e.type===o.ShadowType.inner?"inset ":""}${e.x}px ${e.y}px ${e.radius}px ${e.spread}px ${this.colorTokenValueToCSS({...e.color,...e.opacity&&{opacity:e.opacity}},t,r)}`}static fontWeightTokenValueToCSS(e,t,r){const o=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);return o?r.tokenToVariableRef(o):`${e.text}`}static stringTokenValueToCSS(e,t,r){const o=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);return o?r.tokenToVariableRef(o):`"${e.text}"`}static optionTokenValueToCSS(e,t,r,a){const i=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);return i?r.tokenToVariableRef(i):a===o.TokenType.textCase?this.textCaseToCSS(e.value):a===o.TokenType.textDecoration?this.textDecorationToCSS(e.value):e.value}static blurTokenValueToCSS(e,t,r){const o=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);return o?r.tokenToVariableRef(o):`blur(${this.dimensionTokenValueToCSS(e.radius,t,r)})`}static typographyTokenValueToCSS(e,t,r){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);if(a)return r.tokenToVariableRef(a);const i=(0,n.sureOptionalReference)(e.fontFamily.referencedTokenId,t,r.allowReferences),s=(0,n.sureOptionalReference)(e.fontWeight.referencedTokenId,t,r.allowReferences),l=(0,n.sureOptionalReference)(e.textDecoration.referencedTokenId,t,r.allowReferences),c=(0,n.sureOptionalReference)(e.textCase.referencedTokenId,t,r.allowReferences),u={fontFamily:i?r.tokenToVariableRef(i):e.fontFamily.text,fontWeight:s?r.tokenToVariableRef(s):e.fontWeight.text,textDecoration:l?r.tokenToVariableRef(l):e.textDecoration.value===o.TextDecoration.original?this.textDecorationToCSS(e.textDecoration.value):void 0,textCase:c?r.tokenToVariableRef(c):e.textCase.value===o.TextCase.original?this.textCaseToCSS(e.textCase.value):void 0,caps:e.textCase.value===o.TextCase.smallCaps,fontSize:this.dimensionTokenValueToCSS(e.fontSize,t,r),lineHeight:e.lineHeight?this.dimensionTokenValueToCSS(e.lineHeight,t,r):void 0},d=u.fontSize;return`${u.caps?"small-caps ":""}${u.fontWeight} ${u.lineHeight?`${d}/${u.lineHeight}`:d} ${i?u.fontFamily:`"${u.fontFamily}"`}`}static borderStyleToCSS(e){switch(e){case o.BorderStyle.dashed:return"dashed";case o.BorderStyle.dotted:return"dotted";case o.BorderStyle.solid:return"solid";case o.BorderStyle.groove:return"groove";default:return"solid"}}static borderPositionToCSS(e){switch(e){case o.BorderPosition.center:return"center";case o.BorderPosition.inside:return"inside";case o.BorderPosition.outside:default:return"outside"}}static unitToCSS(e){switch(e){case o.Unit.percent:return"%";case o.Unit.pixels:return"px";case o.Unit.rem:return"rem";case o.Unit.raw:return"";case o.Unit.ms:return"ms";default:return"px"}}static textCaseToCSS(e){switch(e){case o.TextCase.original:return"none";case o.TextCase.upper:return"uppercase";case o.TextCase.lower:return"lowercase";case o.TextCase.camel:case o.TextCase.smallCaps:return"capitalize"}}static textDecorationToCSS(e){switch(e){case o.TextDecoration.original:return"none";case o.TextDecoration.underline:return"underline";case o.TextDecoration.strikethrough:return"line-through"}}}},952:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ColorHelper=void 0;const o=r(989),n=r(761);class a{static formattedColorOrVariableName(e,t,r){let a,i,s;const l=(0,n.sureOptionalReference)(e.referencedTokenId,t,r.allowReferences);if(l)a=r.tokenToVariableRef(l);else{const o=(0,n.sureOptionalReference)(e.color.referencedTokenId,t,r.allowReferences);o&&(i=r.tokenToVariableRef(o));const a=(0,n.sureOptionalReference)(e.opacity.referencedTokenId,t,r.allowReferences);a&&(s=r.tokenToVariableRef(a))}if(a)return a;if(!a&&!i&&!s)return this.formattedColor(e,r.colorFormat,r.decimals);switch(r.colorFormat){case o.ColorFormat.rgb:case o.ColorFormat.rgba:case o.ColorFormat.smartRgba:return this.colorToRgb(r.colorFormat,this.normalizedIntColor(e),e.opacity.measure,r.decimals,i,s);default:return this.formattedColor(e,r.colorFormat,r.decimals)}}static formattedColor(e,t,r=3){switch(t){case o.ColorFormat.hex6:case o.ColorFormat.hex8:case o.ColorFormat.hashHex6:case o.ColorFormat.hashHex8:case o.ColorFormat.smartHex:case o.ColorFormat.smartHashHex:return this.colorToHex(t,this.normalizedIntColor(e),e.opacity.measure);case o.ColorFormat.rgb:case o.ColorFormat.rgba:case o.ColorFormat.smartRgba:return this.colorToRgb(t,this.normalizedIntColor(e),e.opacity.measure,r,null,null);case o.ColorFormat.hsl:case o.ColorFormat.hsla:case o.ColorFormat.smartHsla:return this.colorToHsl(t,this.normalizedFractionalColor(e),e.opacity.measure,r);case o.ColorFormat.smartUIColor:return this.colorToUIColor(this.normalizedIntColor(e),e.opacity.measure,r)}}static colorToRgb(e,t,r,n,a,i){let s;return s=e===o.ColorFormat.rgba||e===o.ColorFormat.smartRgba&&r<1?`rgba(${a||`${t.r}, ${t.g}, ${t.b}`}, ${i||this.roundToDecimals(r,n)})`:`rgb(${a||`${t.r}, ${t.g}, ${t.b}`})`,s}static colorToHex(e,t,r){let n=`${this.pHex(t.r)}${this.pHex(t.g)}${this.pHex(t.b)}`;return(e===o.ColorFormat.hex8||e===o.ColorFormat.hashHex8||e===o.ColorFormat.smartHex&&r<1||e===o.ColorFormat.smartHashHex&&r<1)&&(n+=`${this.pHex(Math.round(255*r))}`),e!==o.ColorFormat.hashHex6&&e!==o.ColorFormat.hashHex8&&e!==o.ColorFormat.smartHashHex||(n=`#${n}`),n}static colorToHsl(e,t,r,n){const a=Math.max(t.r,t.g,t.b),i=Math.min(t.r,t.g,t.b);let s,l,c,u=(a+i)/2;if(a===i)s=l=0;else{const e=a-i;l=u>.5?e/(2-a-i):e/(a+i),a===t.r?s=(t.g-t.b)/e+(t.g<t.b?6:0):a===t.g?s=(t.b-t.r)/e+2:a===t.b&&(s=(t.r-t.g)/e+4),s/=6}return c=e===o.ColorFormat.hsla||e===o.ColorFormat.smartHsla&&r<1?`hsla(${Math.round(360*s)}%, ${Math.round(100*l)}%, ${Math.round(100*u)}%, ${this.roundToDecimals(r,n)})`:`hsl(${Math.round(360*s)}%, ${Math.round(100*l)}%, ${Math.round(100*u)}%)`,c}static colorToUIColor(e,t,r=3){let o=`UIColor(rgb: 0x${this.pHex(e.r)}${this.pHex(e.g)}${this.pHex(e.b)})`;return t<1&&(o+=`.withAlphaComponent(${t})`),o}static normalizedIntColor(e){return{r:Math.round(e.color.r),g:Math.round(e.color.g),b:Math.round(e.color.b)}}static normalizedFractionalColor(e,t=3){return{r:this.roundToDecimals(e.color.r/255,t),g:a.roundToDecimals(e.color.g/255,t),b:a.roundToDecimals(e.color.b/255,t)}}static roundToDecimals(e,t){const r=Math.pow(10,t),o=Math.round(e*r)/r;return parseFloat(o.toFixed(t))}static pHex(e){return e.toString(16).padStart(2,"0")}}t.ColorHelper=a},453:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NamingHelper=void 0;const o=r(110),n=r(545);class a{static codeSafeVariableNameForToken(e,t,r,o){let n=[];return r&&(n=[...r.path],r.isRoot||n.push(r.name)),n.push(e.name),o&&o.length>0&&n.unshift(o),a.codeSafeVariableName(n,t)}static codeSafeVariableName(e,t){let r="string"==typeof e?e:e.join(" ");switch(r=r.replaceAll(/[^a-zA-Z0-9_-]/g,"_"),t){case n.StringCase.camelCase:r=(0,o.camelCase)(r);break;case n.StringCase.capitalCase:r=(0,o.capitalCase)(r);break;case n.StringCase.constantCase:r=(0,o.constantCase)(r);break;case n.StringCase.dotCase:r=(0,o.dotCase)(r);break;case n.StringCase.headerCase:r=(0,o.headerCase)(r);break;case n.StringCase.noCase:r=(0,o.noCase)(r);break;case n.StringCase.paramCase:r=(0,o.paramCase)(r);break;case n.StringCase.pascalCase:r=(0,o.pascalCase)(r);break;case n.StringCase.pathCase:r=(0,o.pathCase)(r);break;case n.StringCase.sentenceCase:r=(0,o.sentenceCase)(r);break;case n.StringCase.snakeCase:r=(0,o.snakeCase)(r)}return t!==n.StringCase.snakeCase&&t!==n.StringCase.constantCase&&(r=r.replaceAll("_","")),r.match(/^[^a-zA-Z]/)&&(r="_"+r),r}static nameAsCSSVarReference(e){return`var(--${e})`}static nameAsCSSVarDeclaration(e){return`--${e}`}}t.NamingHelper=a},58:e=>{e.exports=r(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js")},110:e=>{e.exports=r(/*! change-case */"./node_modules/change-case/dist.es2015/index.js")}},o={};function n(t){var r=o[t];if(void 0!==r)return r.exports;var a=o[t]={exports:{}};return e[t](a,a.exports,n),a.exports}var a={};(()=>{var e=a;Object.defineProperty(e,"__esModule",{value:!0}),e.ColorFormat=e.StringCase=e.Iterators=e.CSSHelper=e.FileHelper=e.ColorHelper=e.NamingHelper=e.NetworkHelper=void 0;var t=n(118);Object.defineProperty(e,"NetworkHelper",{enumerable:!0,get:function(){return t.NetworkHelper}});var r=n(453);Object.defineProperty(e,"NamingHelper",{enumerable:!0,get:function(){return r.NamingHelper}});var o=n(952);Object.defineProperty(e,"ColorHelper",{enumerable:!0,get:function(){return o.ColorHelper}});var i=n(617);Object.defineProperty(e,"FileHelper",{enumerable:!0,get:function(){return i.FileHelper}});var s=n(771);Object.defineProperty(e,"CSSHelper",{enumerable:!0,get:function(){return s.CSSHelper}});var l=n(639);Object.defineProperty(e,"Iterators",{enumerable:!0,get:function(){return l.Iterators}});var c=n(545);Object.defineProperty(e,"StringCase",{enumerable:!0,get:function(){return c.StringCase}});var u=n(989);Object.defineProperty(e,"ColorFormat",{enumerable:!0,get:function(){return u.ColorFormat}})})();var i=t;for(var s in a)i[s]=a[s];a.__esModule&&Object.defineProperty(i,"__esModule",{value:!0})})()},"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js ***!
  \***********************************************************************************/(e,t)=>{(()=>{"use strict";var e={4379:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SupernovaError=void 0;class r extends Error{constructor(e,t,r,o,n,a,i){super(e),this.code=t,this.status=r,this.formErrors=o,this.requestId=n,this.serverTime=a,this.url=i}static fromNetworkResponse(e,t,o){var n,a,i;return new r(e.message,e.errorCode||e.reason||e.label||null,e.code||t,null!==(n=e.formErrors)&&void 0!==n?n:null,null!==(a=e.requestId)&&void 0!==a?a:null,null!==(i=e.serverTime)&&void 0!==i?i:null,o)}static fromNoNetworkResponse(e){return new r("No network or internet unreachable","NO_NETWORK",12163,null,(new Date).toISOString(),null,e)}static fromCode(e){return new r(e,e,null,null,null,null,null)}static fromMessage(e){return new r(e,null,null,null,null,null,null)}isFieldErrored(e){return void 0!==this.formErrors.find((t=>t.key===e))}errorForField(e){var t;return null!==(t=this.formErrors.find((t=>t.key===e)))&&void 0!==t?t:null}toString(){var e,t,r,o,n,a;return`\n    Error thrown: ${this.message}\n\n    Code: ${null!==(e=this.code)&&void 0!==e?e:"-"}\n\n    Status: ${null!==(t=this.status)&&void 0!==t?t:"-"}\n\n    Fields: ${JSON.stringify(this.formErrors,null,2)}\n\n    Request ID: ${null!==(r=this.requestId)&&void 0!==r?r:"-"}\n\n    Server time: ${null!==(o=this.serverTime)&&void 0!==o?o:"-"}\n\n    Network URL: ${null!==(n=this.url)&&void 0!==n?n:"-"}\n\n    Stack: ${null!==(a=this.stack)&&void 0!==a?a:"-"}\n    `}toHumanReadable(){return`${this.message}${this.requestId?` (request ${this.requestId})`:""}`}}t.SupernovaError=r},9932:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.docsImageRefToUrl=t.DocsImageRefType=void 0,function(e){e.resource="Resource",e.figmaNode="FigmaNode"}(r||(t.DocsImageRefType=r={})),t.docsImageRefToUrl=function(e,t,o){var n;if(e)switch(e.type){case r.resource:return null===(n=e.resource)||void 0===n?void 0:n.url;case r.figmaNode:if(!e.figmaNode||!e.figmaNode.sourceId||!e.figmaNode.frameReferenceId)return;return t.resources.getFigmaFrameHostedUrl({designSystemId:o.dsId,versionId:o.versionId},e.figmaNode.frameReferenceId);default:return}}},5673:(e,t)=>{var r;function o(e){switch(e.type){case r.documentationItem:return`@page:${e.documentationItemId}`;case r.pageHeading:return`@page:${e.documentationItemId}#${e.pageHeadingId}`;case r.url:return e.url;default:return}}Object.defineProperty(t,"__esModule",{value:!0}),t.linkAttributeToDocsLink=t.docsLinkToLinkAttributes=t.docsLinkToUrl=t.DocsLinkRefType=void 0,function(e){e.documentationItem="DocumentationItem",e.pageHeading="PageHeading",e.url="Url"}(r||(t.DocsLinkRefType=r={})),t.docsLinkToUrl=o,t.docsLinkToLinkAttributes=function(e){const t=o(e);if(t)return{href:t,target:e.openInNewTab?"_blank":"_self"}},t.linkAttributeToDocsLink=function(e,t){if(!e)return;const o="_blank"===t;if(e.startsWith("@page:")){if(e.includes("#")){const[t,n]=e.replace("@page:","").split("#");return{type:r.pageHeading,documentationItemId:t,pageHeadingId:n,openInNewTab:o}}return{type:r.documentationItem,documentationItemId:e.replace("@page:",""),openInNewTab:o}}return{type:r.url,url:e,openInNewTab:o}}},2657:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockShortcut=t.DocumentationLegacyPageBlockShortcutType=void 0,function(e){e.external="External",e.internal="Internal"}(r||(t.DocumentationLegacyPageBlockShortcutType=r={})),t.DocumentationLegacyPageBlockShortcut=class{constructor(e){var t;e.url?this.type=r.external:this.type=r.internal,this.title=this.shortcutTitleFromModel(e,this.type),this.description=this.shortcutDescriptionFromModel(e,this.type),this.previewUrl=this.shortcutPreviewUrlFromModel(e),this.type===r.internal&&(null===(t=e.documentationItemPreview)||void 0===t?void 0:t.valid)&&e.documentationItemId?this.internalId=e.documentationItemId:(this.internalId=null,this.type===r.external&&e.url?this.externalUrl=e.url:this.externalUrl=null)}shortcutTitleFromModel(e,t){var o,n,a,i,s;let l=null;return e.title&&e.title.trim().length>0?l=e.title:t===r.internal?l=null!==(n=null===(o=e.documentationItemPreview)||void 0===o?void 0:o.title)&&void 0!==n?n:null:t===r.external&&(l=null!==(s=null!==(i=null===(a=e.urlPreview)||void 0===a?void 0:a.title)&&void 0!==i?i:e.url)&&void 0!==s?s:null),l&&0!==l.trim().length?l:null}shortcutDescriptionFromModel(e,t){var o;let n=null;return e.description&&e.description.trim().length>0?n=e.description:t===r.external&&(n=null===(o=e.urlPreview)||void 0===o?void 0:o.description),n&&0!==n.trim().length?n:null}shortcutPreviewUrlFromModel(e){var t,r,o,n,a;return null!==(a=null!==(o=null!==(t=e.assetUrl)&&void 0!==t?t:null===(r=e.asset)||void 0===r?void 0:r.url)&&void 0!==o?o:null===(n=e.urlPreview)||void 0===n?void 0:n.thumbnailUrl)&&void 0!==a?a:null}}},7476:(e,t)=>{var r,o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextAlignment=t.Alignment=void 0,function(e){e.left="Left",e.center="Center",e.stretch="Stretch"}(r||(t.Alignment=r={})),function(e){e.left="Left",e.center="Center",e.right="Right"}(o||(t.TextAlignment=o={}))},8738:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetFormat=void 0,function(e){e.png="png",e.pdf="pdf",e.svg="svg"}(r||(t.AssetFormat=r={}))},915:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScale=void 0,function(e){e.x1="x1",e.x2="x2",e.x3="x3",e.x4="x4"}(r||(t.AssetScale=r={}))},899:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScaleType=void 0,function(e){e.aspectFill="AspectFill",e.aspectFit="AspectFit"}(r||(t.AssetScaleType=r={}))},6192:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.BlurType=void 0,function(e){e.layer="Layer",e.background="Background"}(r||(t.BlurType=r={}))},1160:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_POSITIONS=t.BorderPosition=void 0,function(e){e.inside="Inside",e.center="Center",e.outside="Outside"}(r||(t.BorderPosition=r={})),t.ALL_BORDER_POSITIONS=[r.inside,r.center,r.outside]},4546:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_STYLES=t.BorderStyle=void 0,function(e){e.dashed="Dashed",e.dotted="Dotted",e.solid="Solid",e.groove="Groove"}(r||(t.BorderStyle=r={})),t.ALL_BORDER_STYLES=[r.dashed,r.dotted,r.solid,r.groove]},8042:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.ImportWarningType=void 0,function(e){e.UnsupportedFill="UnsupportedFill",e.UnsupportedStroke="UnsupportedStroke",e.UnsupportedEffect="UnsupportedEffect",e.StyleNotApplied="StyleNotApplied",e.NoPublishedStyles="NoPublishedStyles",e.NoPublishedComponents="NoPublishedComponents",e.NoPublishedAssets="NoPublishedAssets",e.NoVersionFound="NoVersionFound",e.ComponentHasNoThumbnail="ComponentHasNoThumbnail",e.DuplicateImportedStyleId="DuplicateImportedStyleId",e.DuplicateImportedStylePath="DuplicateImportedStylePath",e.NoPublishedElements="NoPublishedElements",e.NoUnpublishedStyles="NoUnpublishedStyles"}(r||(t.ImportWarningType=r={}))},5695:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainErrorCode=void 0,function(e){e.generalError="GeneralError",e.dnsNotConfigured="DNSNotConfigured",e.maintenance="Maintenance"}(r||(t.CustomDomainErrorCode=r={}))},7737:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainState=void 0,function(e){e.initial="Initial",e.domainSetupInProgress="DomainSetupInProgress",e.domainSetupFailed="DomainSetupFailed",e.domainSetupsSucces="DomainSetupSuccess",e.sslSetupInProgress="SSLSetupInProgress",e.sslSetupFailed="SSLSetupFailed",e.sslSetupSuccess="SSLSetupSuccess"}(r||(t.CustomDomainState=r={}))},5651:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorDataType=void 0,function(e){e.item="Item",e.token="Token",e.asset="Asset",e.component="Component",e.figmaNode="FigmaNode",e.figmaComponent="FigmaComponent"}(r||(t.DocsBlockBehaviorDataType=r={}))},3733:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorSelectionType=void 0,function(e){e.entity="Entity",e.group="Group",e.entityAndGroup="EntityAndGroup"}(r||(t.DocsBlockBehaviorSelectionType=r={}))},8890:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockImagePropertyAspectRatio=void 0,function(e){e.auto="Auto",e.square="Square",e.landscape="Landscape",e.portrait="Portrait",e.wide="Wide"}(r||(t.DocsBlockImagePropertyAspectRatio=r={}))},9377:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemEntityType=void 0,function(e){e.token="Token",e.tokenGroup="TokenGroup",e.asset="Asset",e.assetGroup="AssetGroup",e.component="Component",e.componentGroup="ComponentGroup"}(r||(t.DocsBlockItemEntityType=r={}))},5883:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyOptionRenderingStyle=void 0,function(e){e.segmentedControl="SegmentedControl",e.toggleButton="ToggleButton",e.select="Select",e.checkbox="Checkbox"}(r||(t.DocsBlockItemPropertyOptionRenderingStyle=r={}))},8061:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyRichTextStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.quote="Quote",e.callout="Callout",e.ol="OL",e.ul="UL"}(r||(t.DocsBlockItemPropertyRichTextStyle=r={}))},7479:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyTextStyle=void 0,function(e){e.small="Small",e.regular="Regular",e.bold="Bold"}(r||(t.DocsBlockItemPropertyTextStyle=r={}))},6839:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyType=void 0,function(e){e.richText="RichText",e.multiRichText="MultiRichText",e.text="Text",e.richTextEditor="RichTextEditor",e.boolean="Boolean",e.number="Number",e.singleSelect="SingleSelect",e.multiSelect="MultiSelect",e.image="Image",e.token="Token",e.tokenType="TokenType",e.tokenProperty="TokenProperty",e.component="Component",e.componentProperty="ComponentProperty",e.asset="Asset",e.assetProperty="AssetProperty",e.embedURL="EmbedURL",e.url="URL",e.markdown="Markdown",e.code="Code",e.codeSandbox="CodeSandbox",e.table="Table",e.divider="Divider",e.storybook="Storybook",e.color="Color",e.figmaNode="FigmaNode",e.figmaComponent="FigmaComponent"}(r||(t.DocsBlockItemPropertyType=r={}))},8095:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutType=void 0,function(e){e.column="Column",e.row="Row"}(r||(t.DocsBlockItemVariantLayoutType=r={}))},7291:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutWidth=void 0,function(e){e.c1="1",e.c2="2",e.c3="3",e.c4="4",e.c5="5",e.c6="6",e.c7="7",e.c8="8",e.c9="9",e.c10="10",e.c11="11",e.c12="12"}(r||(t.DocsBlockItemVariantLayoutWidth=r={}))},9133:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionColor=void 0,function(e){e.green="Green",e.red="Red",e.yellow="Yellow",e.blue="Blue",e.purple="Purple",e.orange="Orange",e.pink="Pink",e.teal="Teal",e.grey="Grey",e.lightGrey="LightGrey",e.cyan="Cyan",e.fuchsia="Fuchsia"}(r||(t.DocsBlockOptionColor=r={}))},5963:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionRenderingStyle=void 0,function(e){e.segmentedControl="SegmentedControl",e.toggleButton="ToggleButton",e.select="Select",e.checkbox="Checkbox"}(r||(t.DocsBlockOptionRenderingStyle=r={}))},6644:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockRichTextPropertyStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.quote="Quote",e.callout="Callout",e.default="Default"}(r||(t.DocsBlockRichTextPropertyStyle=r={}))},306:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockTextPropertyStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.default="Default",e.defaultBold="DefaultBold",e.defaultSemibold="DefaultSemibold",e.small="Small",e.smallBold="SmallBold",e.smallSemibold="SmallSemibold",e.custom="Custom"}(r||(t.DocsBlockTextPropertyStyle=r={}))},4068:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityGroupBehavior=void 0,function(e){e.group="Group",e.tabs="Tabs"}(r||(t.DocsEntityGroupBehavior=r={}))},1233:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityType=void 0,function(e){e.group="Group",e.page="Page"}(r||(t.DocsEntityType=r={}))},7971:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsSectionType=void 0,function(e){e.plain="Plain",e.tabs="Tabs"}(r||(t.DocsSectionType=r={}))},5102:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyCalloutType=void 0,function(e){e.info="Info",e.success="Success",e.warning="Warning",e.error="Error"}(r||(t.DocumentationLegacyCalloutType=r={}))},2123:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyGroupBehavior=void 0,function(e){e.group="Group",e.tabs="Tabs"}(r||(t.DocumentationLegacyGroupBehavior=r={}))},9896:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyHeadingType=void 0,function(e){e[e.h1=1]="h1",e[e.h2=2]="h2",e[e.h3=3]="h3"}(r||(t.DocumentationLegacyHeadingType=r={}))},7379:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyItemType=void 0,function(e){e.group="Group",e.page="Page"}(r||(t.DocumentationLegacyItemType=r={}))},1423:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageAssetType=void 0,function(e){e.image="image",e.figmaFrame="figmaFrame"}(r||(t.DocumentationLegacyPageAssetType=r={}))},1601:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockThemeType=void 0,function(e){e.override="Override",e.comparison="Comparison"}(r||(t.DocumentationLegacyPageBlockThemeType=r={}))},1846:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockType=void 0,function(e){e.text="Text",e.heading="Heading",e.code="Code",e.unorderedList="UnorderedList",e.orderedList="OrderedList",e.quote="Quote",e.callout="Callout",e.divider="Divider",e.image="Image",e.token="Token",e.tokenList="TokenList",e.tokenGroup="TokenGroup",e.shortcuts="Shortcuts",e.link="Link",e.figmaEmbed="FigmaEmbed",e.youtubeEmbed="YoutubeEmbed",e.storybookEmbed="StorybookEmbed",e.genericEmbed="Embed",e.figmaFrames="FigmaFrames",e.custom="Custom",e.renderCode="RenderCode",e.componentAssets="ComponentAssets",e.column="Column",e.columnItem="ColumnItem",e.tabs="Tabs",e.tabItem="TabItem",e.table="Table",e.tableCell="TableCell",e.tableRow="TableRow"}(r||(t.DocumentationLegacyPageBlockType=r={}))},1255:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameAlignment=void 0,function(e){e.frameHeight="FrameHeight",e.center="Center"}(r||(t.FrameAlignment=r={}))},3718:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameLayout=void 0,function(e){e.c8="C8",e.c7="C7",e.c6="C6",e.c5="C5",e.c4="C4",e.c3="C3",e.c2="C2",e.c1="C1",e.c175="C1_75"}(r||(t.FrameLayout=r={}))},1:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.GradientType=void 0,function(e){e.linear="Linear",e.radial="Radial",e.angular="Angular"}(r||(t.GradientType=r={}))},934:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.IconSet=void 0,function(e){e.checkCircle="CheckCircle",e.crossCircle="CrossCircle",e.alert="Alert"}(r||(t.IconSet=r={}))},2674:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.RichTextSpanAttributeType=void 0,function(e){e.bold="Bold",e.italic="Italic",e.link="Link",e.strikethrough="Strikethrough",e.code="Code"}(r||(t.RichTextSpanAttributeType=r={}))},9125:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.ShadowType=void 0,function(e){e.drop="Drop",e.inner="Inner"}(r||(t.ShadowType=r={}))},4652:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.SourceType=void 0,function(e){e.figma="Figma",e.tokenStudio="TokenStudio",e.figmaVariablesPlugin="FigmaVariablesPlugin"}(r||(t.SourceType=r={}))},922:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.TextCase=void 0,function(e){e.original="Original",e.upper="Upper",e.lower="Lower",e.camel="Camel",e.smallCaps="SmallCaps"}(r||(t.TextCase=r={}))},7040:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoration=void 0,function(e){e.original="None",e.underline="Underline",e.strikethrough="Strikethrough"}(r||(t.TextDecoration=r={}))},3788:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.DT_TOKEN_TYPES=t.tokenTypeIsReferencable=t.REFERENCABLE_TOKEN_TYPES=t.REPLACABLE_TOKEN_TYPES=t.tokenTypeIsNonPure=t.tokenTypeIsPure=t.PURE_TOKEN_TYPES=t.ALL_TOKEN_TYPES=t.MS_DIMENSION_TOKEN_TYPES=t.RAW_DIMENSION_TOKEN_TYPES=t.DIMENSION_TOKEN_TYPES=t.OPTION_TOKEN_TYPES=t.STRING_TOKEN_TYPES=t.TokenType=void 0,function(e){e.color="Color",e.typography="Typography",e.shadow="Shadow",e.border="Border",e.gradient="Gradient",e.blur="Blur",e.radius="BorderRadius",e.borderWidth="BorderWidth",e.duration="Duration",e.fontSize="FontSize",e.dimension="Dimension",e.letterSpacing="LetterSpacing",e.lineHeight="LineHeight",e.opacity="Opacity",e.paragraphSpacing="ParagraphSpacing",e.size="Size",e.space="Space",e.zIndex="ZIndex",e.textDecoration="TextDecoration",e.textCase="TextCase",e.visibility="Visibility",e.fontFamily="FontFamily",e.fontWeight="FontWeight",e.string="String",e.productCopy="ProductCopy"}(r||(t.TokenType=r={})),t.STRING_TOKEN_TYPES=[r.string,r.productCopy,r.fontFamily,r.fontWeight],t.OPTION_TOKEN_TYPES=[r.textCase,r.textDecoration,r.visibility],t.DIMENSION_TOKEN_TYPES=[r.dimension,r.size,r.space,r.opacity,r.fontSize,r.lineHeight,r.letterSpacing,r.paragraphSpacing,r.borderWidth,r.radius,r.duration,r.zIndex],t.RAW_DIMENSION_TOKEN_TYPES=[r.opacity,r.zIndex],t.MS_DIMENSION_TOKEN_TYPES=[r.duration],t.ALL_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES,r.color,r.gradient,r.border,r.radius,r.shadow,r.typography,r.blur],t.PURE_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.tokenTypeIsPure=e=>t.PURE_TOKEN_TYPES.includes(e),t.tokenTypeIsNonPure=e=>!(0,t.tokenTypeIsPure)(e),t.REPLACABLE_TOKEN_TYPES=[r.color,...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.REFERENCABLE_TOKEN_TYPES=[r.color,...t.DIMENSION_TOKEN_TYPES,r.fontFamily,r.fontWeight,r.textCase,r.textDecoration],t.tokenTypeIsReferencable=e=>t.REFERENCABLE_TOKEN_TYPES.includes(e),t.DT_TOKEN_TYPES=[r.color,r.shadow,r.gradient,r.typography,r.border,...t.DIMENSION_TOKEN_TYPES,r.fontFamily,r.fontWeight,r.string,...t.OPTION_TOKEN_TYPES]},8607:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.MS_UNITS=t.PX_UNITS=t.RAW_UNITS=t.LINE_HEIGHT_UNITS=t.SIZE_UNITS=t.Unit=void 0,function(e){e.pixels="Pixels",e.percent="Percent",e.rem="Rem",e.ms="Ms",e.raw="Raw"}(r||(t.Unit=r={})),t.SIZE_UNITS=[r.pixels,r.percent,r.rem],t.LINE_HEIGHT_UNITS=[r.pixels,r.percent,r.rem,r.raw],t.RAW_UNITS=[r.raw],t.PX_UNITS=[r.pixels],t.MS_UNITS=[r.ms]},9478:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.convertRemoteToUserRole=t.UserRole=void 0;const o=r(4379);var n;!function(e){e.owner="Owner",e.admin="Admin",e.creator="Creator",e.contributor="Contributor",e.billing="Billing",e.viewer="Viewer"}(n||(t.UserRole=n={})),t.convertRemoteToUserRole=e=>{switch(e){case"Owner":return n.owner;case"Admin":return n.admin;case"Creator":return n.creator;case"Contributor":return n.contributor;case"Billing":return n.billing;case"Viewer":return n.viewer;default:throw o.SupernovaError.fromMessage(`Unknown role: ${e}`)}}},6141:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.VisibilityType=void 0,function(e){e.visible="Visible",e.hidden="Hidden"}(r||(t.VisibilityType=r={}))},6298:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryAuthType=void 0,function(e){e.basic="Basic",e.bearer="Bearer"}(r||(t.WorkspaceNPMRegistryAuthType=r={}))},7968:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryType=void 0,function(e){e.npmJS="NPMJS",e.gitHub="GitHub",e.azureDevOps="AzureDevOps",e.artifactory="Artifactory",e.custom="Custom"}(r||(t.WorkspaceNPMRegistryType=r={}))},5503:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionPlanInterval=void 0,function(e){e.yearly="yearly",e.monthly="monthly"}(r||(t.WorkspaceSubscriptionPlanInterval=r={}))},4290:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionProductCode=void 0,function(e){e.free="free",e.team="team",e.teamTest="team_test",e.company="company",e.enterprise="enterprise"}(r||(t.WorkspaceSubscriptionProductCode=r={}))},3607:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionStatus=void 0,function(e){e.active="active",e.gracePeriod="gracePeriod",e.cancelled="cancelled",e.suspended="suspended"}(r||(t.WorkspaceSubscriptionStatus=r={}))},2802:(e,t)=>{var r,o;Object.defineProperty(t,"__esModule",{value:!0}),t.PulsarExecutor=t.OutputFileType=void 0,function(e){e.copyRemoteUrl="copyRemoteUrl",e.text="text",e.binary="binary"}(r||(t.OutputFileType=r={})),function(e){e.supernova="supernova",e.local="local"}(o||(t.PulsarExecutor=o={}))}},r={};function o(t){var n=r[t];if(void 0!==n)return n.exports;var a=r[t]={exports:{}};return e[t](a,a.exports,o),a.exports}var n={};(()=>{var e=n;Object.defineProperty(e,"__esModule",{value:!0}),e.TokenType=e.TextDecoration=e.TextCase=e.ShadowType=e.RichTextSpanAttributeType=e.GradientType=e.FrameLayout=e.FrameAlignment=e.IconSet=e.SourceType=e.DocsImageRefType=e.DocsLinkRefType=e.DocsSectionType=e.DocsEntityType=e.DocsEntityGroupBehavior=e.DocsBlockTextPropertyStyle=e.DocsBlockRichTextPropertyStyle=e.DocsBlockOptionColor=e.DocsBlockOptionRenderingStyle=e.DocsBlockItemVariantLayoutWidth=e.DocsBlockItemVariantLayoutType=e.DocsBlockItemPropertyType=e.DocsBlockItemPropertyTextStyle=e.DocsBlockItemPropertyRichTextStyle=e.DocsBlockItemPropertyOptionRenderingStyle=e.DocsBlockItemEntityType=e.DocsBlockImagePropertyAspectRatio=e.DocsBlockBehaviorSelectionType=e.DocsBlockBehaviorDataType=e.DocumentationLegacyPageBlockShortcutType=e.DocumentationLegacyPageBlockThemeType=e.DocumentationLegacyPageBlockType=e.DocumentationLegacyPageAssetType=e.DocumentationLegacyItemType=e.DocumentationLegacyHeadingType=e.DocumentationLegacyGroupBehavior=e.DocumentationLegacyCalloutType=e.BorderStyle=e.BorderPosition=e.BlurType=e.AssetScaleType=e.AssetScale=e.AssetFormat=e.Alignment=e.ALL_TOKEN_TYPES=e.ALL_BORDER_STYLES=e.ALL_BORDER_POSITIONS=e.OPTION_TOKEN_TYPES=e.STRING_TOKEN_TYPES=e.DIMENSION_TOKEN_TYPES=void 0,e.PulsarExecutor=e.OutputFileType=e.CustomDomainState=e.CustomDomainErrorCode=e.ImportWarningType=e.WorkspaceNPMRegistryType=e.WorkspaceNPMRegistryAuthType=e.WorkspaceSubscriptionStatus=e.WorkspaceSubscriptionProductCode=e.WorkspaceSubscriptionPlanInterval=e.VisibilityType=e.UserRole=e.Unit=void 0;var t=o(3788);Object.defineProperty(e,"DIMENSION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.DIMENSION_TOKEN_TYPES}}),Object.defineProperty(e,"STRING_TOKEN_TYPES",{enumerable:!0,get:function(){return t.STRING_TOKEN_TYPES}}),Object.defineProperty(e,"OPTION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.OPTION_TOKEN_TYPES}});var r=o(1160);Object.defineProperty(e,"ALL_BORDER_POSITIONS",{enumerable:!0,get:function(){return r.ALL_BORDER_POSITIONS}});var a=o(4546);Object.defineProperty(e,"ALL_BORDER_STYLES",{enumerable:!0,get:function(){return a.ALL_BORDER_STYLES}});var i=o(3788);Object.defineProperty(e,"ALL_TOKEN_TYPES",{enumerable:!0,get:function(){return i.ALL_TOKEN_TYPES}});var s=o(7476);Object.defineProperty(e,"Alignment",{enumerable:!0,get:function(){return s.Alignment}});var l=o(8738);Object.defineProperty(e,"AssetFormat",{enumerable:!0,get:function(){return l.AssetFormat}});var c=o(915);Object.defineProperty(e,"AssetScale",{enumerable:!0,get:function(){return c.AssetScale}});var u=o(899);Object.defineProperty(e,"AssetScaleType",{enumerable:!0,get:function(){return u.AssetScaleType}});var d=o(6192);Object.defineProperty(e,"BlurType",{enumerable:!0,get:function(){return d.BlurType}});var p=o(1160);Object.defineProperty(e,"BorderPosition",{enumerable:!0,get:function(){return p.BorderPosition}});var y=o(4546);Object.defineProperty(e,"BorderStyle",{enumerable:!0,get:function(){return y.BorderStyle}});var f=o(5102);Object.defineProperty(e,"DocumentationLegacyCalloutType",{enumerable:!0,get:function(){return f.DocumentationLegacyCalloutType}});var m=o(2123);Object.defineProperty(e,"DocumentationLegacyGroupBehavior",{enumerable:!0,get:function(){return m.DocumentationLegacyGroupBehavior}});var T=o(9896);Object.defineProperty(e,"DocumentationLegacyHeadingType",{enumerable:!0,get:function(){return T.DocumentationLegacyHeadingType}});var g=o(7379);Object.defineProperty(e,"DocumentationLegacyItemType",{enumerable:!0,get:function(){return g.DocumentationLegacyItemType}});var b=o(1423);Object.defineProperty(e,"DocumentationLegacyPageAssetType",{enumerable:!0,get:function(){return b.DocumentationLegacyPageAssetType}});var v=o(1846);Object.defineProperty(e,"DocumentationLegacyPageBlockType",{enumerable:!0,get:function(){return v.DocumentationLegacyPageBlockType}});var h=o(1601);Object.defineProperty(e,"DocumentationLegacyPageBlockThemeType",{enumerable:!0,get:function(){return h.DocumentationLegacyPageBlockThemeType}});var _=o(2657);Object.defineProperty(e,"DocumentationLegacyPageBlockShortcutType",{enumerable:!0,get:function(){return _.DocumentationLegacyPageBlockShortcutType}});var S=o(5651);Object.defineProperty(e,"DocsBlockBehaviorDataType",{enumerable:!0,get:function(){return S.DocsBlockBehaviorDataType}});var C=o(3733);Object.defineProperty(e,"DocsBlockBehaviorSelectionType",{enumerable:!0,get:function(){return C.DocsBlockBehaviorSelectionType}});var k=o(8890);Object.defineProperty(e,"DocsBlockImagePropertyAspectRatio",{enumerable:!0,get:function(){return k.DocsBlockImagePropertyAspectRatio}});var P=o(9377);Object.defineProperty(e,"DocsBlockItemEntityType",{enumerable:!0,get:function(){return P.DocsBlockItemEntityType}});var O=o(5883);Object.defineProperty(e,"DocsBlockItemPropertyOptionRenderingStyle",{enumerable:!0,get:function(){return O.DocsBlockItemPropertyOptionRenderingStyle}});var x=o(8061);Object.defineProperty(e,"DocsBlockItemPropertyRichTextStyle",{enumerable:!0,get:function(){return x.DocsBlockItemPropertyRichTextStyle}});var I=o(7479);Object.defineProperty(e,"DocsBlockItemPropertyTextStyle",{enumerable:!0,get:function(){return I.DocsBlockItemPropertyTextStyle}});var D=o(6839);Object.defineProperty(e,"DocsBlockItemPropertyType",{enumerable:!0,get:function(){return D.DocsBlockItemPropertyType}});var j=o(8095);Object.defineProperty(e,"DocsBlockItemVariantLayoutType",{enumerable:!0,get:function(){return j.DocsBlockItemVariantLayoutType}});var E=o(7291);Object.defineProperty(e,"DocsBlockItemVariantLayoutWidth",{enumerable:!0,get:function(){return E.DocsBlockItemVariantLayoutWidth}});var w=o(5963);Object.defineProperty(e,"DocsBlockOptionRenderingStyle",{enumerable:!0,get:function(){return w.DocsBlockOptionRenderingStyle}});var R=o(9133);Object.defineProperty(e,"DocsBlockOptionColor",{enumerable:!0,get:function(){return R.DocsBlockOptionColor}});var N=o(6644);Object.defineProperty(e,"DocsBlockRichTextPropertyStyle",{enumerable:!0,get:function(){return N.DocsBlockRichTextPropertyStyle}});var B=o(306);Object.defineProperty(e,"DocsBlockTextPropertyStyle",{enumerable:!0,get:function(){return B.DocsBlockTextPropertyStyle}});var F=o(4068);Object.defineProperty(e,"DocsEntityGroupBehavior",{enumerable:!0,get:function(){return F.DocsEntityGroupBehavior}});var L=o(1233);Object.defineProperty(e,"DocsEntityType",{enumerable:!0,get:function(){return L.DocsEntityType}});var M=o(7971);Object.defineProperty(e,"DocsSectionType",{enumerable:!0,get:function(){return M.DocsSectionType}});var A=o(5673);Object.defineProperty(e,"DocsLinkRefType",{enumerable:!0,get:function(){return A.DocsLinkRefType}});var H=o(9932);Object.defineProperty(e,"DocsImageRefType",{enumerable:!0,get:function(){return H.DocsImageRefType}});var $=o(4652);Object.defineProperty(e,"SourceType",{enumerable:!0,get:function(){return $.SourceType}});var V=o(934);Object.defineProperty(e,"IconSet",{enumerable:!0,get:function(){return V.IconSet}});var U=o(1255);Object.defineProperty(e,"FrameAlignment",{enumerable:!0,get:function(){return U.FrameAlignment}});var W=o(3718);Object.defineProperty(e,"FrameLayout",{enumerable:!0,get:function(){return W.FrameLayout}});var G=o(1);Object.defineProperty(e,"GradientType",{enumerable:!0,get:function(){return G.GradientType}});var Y=o(2674);Object.defineProperty(e,"RichTextSpanAttributeType",{enumerable:!0,get:function(){return Y.RichTextSpanAttributeType}});var K=o(9125);Object.defineProperty(e,"ShadowType",{enumerable:!0,get:function(){return K.ShadowType}});var z=o(922);Object.defineProperty(e,"TextCase",{enumerable:!0,get:function(){return z.TextCase}});var q=o(7040);Object.defineProperty(e,"TextDecoration",{enumerable:!0,get:function(){return q.TextDecoration}});var Z=o(3788);Object.defineProperty(e,"TokenType",{enumerable:!0,get:function(){return Z.TokenType}});var J=o(8607);Object.defineProperty(e,"Unit",{enumerable:!0,get:function(){return J.Unit}});var Q=o(9478);Object.defineProperty(e,"UserRole",{enumerable:!0,get:function(){return Q.UserRole}});var X=o(6141);Object.defineProperty(e,"VisibilityType",{enumerable:!0,get:function(){return X.VisibilityType}});var ee=o(5503);Object.defineProperty(e,"WorkspaceSubscriptionPlanInterval",{enumerable:!0,get:function(){return ee.WorkspaceSubscriptionPlanInterval}});var te=o(4290);Object.defineProperty(e,"WorkspaceSubscriptionProductCode",{enumerable:!0,get:function(){return te.WorkspaceSubscriptionProductCode}});var re=o(3607);Object.defineProperty(e,"WorkspaceSubscriptionStatus",{enumerable:!0,get:function(){return re.WorkspaceSubscriptionStatus}});var oe=o(6298);Object.defineProperty(e,"WorkspaceNPMRegistryAuthType",{enumerable:!0,get:function(){return oe.WorkspaceNPMRegistryAuthType}});var ne=o(7968);Object.defineProperty(e,"WorkspaceNPMRegistryType",{enumerable:!0,get:function(){return ne.WorkspaceNPMRegistryType}});var ae=o(8042);Object.defineProperty(e,"ImportWarningType",{enumerable:!0,get:function(){return ae.ImportWarningType}});var ie=o(5695);Object.defineProperty(e,"CustomDomainErrorCode",{enumerable:!0,get:function(){return ie.CustomDomainErrorCode}});var se=o(7737);Object.defineProperty(e,"CustomDomainState",{enumerable:!0,get:function(){return se.CustomDomainState}});var le=o(2802);Object.defineProperty(e,"OutputFileType",{enumerable:!0,get:function(){return le.OutputFileType}}),Object.defineProperty(e,"PulsarExecutor",{enumerable:!0,get:function(){return le.PulsarExecutor}})})();var a=t;for(var i in n)a[i]=n[i];n.__esModule&&Object.defineProperty(a,"__esModule",{value:!0})})()},"./node_modules/camel-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/camel-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{camelCase:()=>s,camelCaseTransform:()=>a,camelCaseTransformMerge:()=>i});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! pascal-case */"./node_modules/pascal-case/dist.es2015/index.js");function a(e,t){return 0===t?e.toLowerCase():(0,n.pascalCaseTransform)(e,t)}function i(e,t){return 0===t?e.toLowerCase():(0,n.pascalCaseTransformMerge)(e)}function s(e,t){return void 0===t&&(t={}),(0,n.pascalCase)(e,(0,o.__assign)({transform:a},t))}},"./node_modules/capital-case/dist.es2015/index.js":
/*!********************************************************!*\
  !*** ./node_modules/capital-case/dist.es2015/index.js ***!
  \********************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{capitalCase:()=>s,capitalCaseTransform:()=>i});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! no-case */"./node_modules/no-case/dist.es2015/index.js"),a=r(/*! upper-case-first */"./node_modules/upper-case-first/dist.es2015/index.js");function i(e){return(0,a.upperCaseFirst)(e.toLowerCase())}function s(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,o.__assign)({delimiter:" ",transform:i},t))}},"./node_modules/change-case/dist.es2015/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/change-case/dist.es2015/index.js ***!
  \*******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{camelCase:()=>o.camelCase,camelCaseTransform:()=>o.camelCaseTransform,camelCaseTransformMerge:()=>o.camelCaseTransformMerge,capitalCase:()=>n.capitalCase,capitalCaseTransform:()=>n.capitalCaseTransform,constantCase:()=>a.constantCase,dotCase:()=>i.dotCase,headerCase:()=>s.headerCase,noCase:()=>l.noCase,paramCase:()=>c.paramCase,pascalCase:()=>u.pascalCase,pascalCaseTransform:()=>u.pascalCaseTransform,pascalCaseTransformMerge:()=>u.pascalCaseTransformMerge,pathCase:()=>d.pathCase,sentenceCase:()=>p.sentenceCase,sentenceCaseTransform:()=>p.sentenceCaseTransform,snakeCase:()=>y.snakeCase});var o=r(/*! camel-case */"./node_modules/camel-case/dist.es2015/index.js"),n=r(/*! capital-case */"./node_modules/capital-case/dist.es2015/index.js"),a=r(/*! constant-case */"./node_modules/constant-case/dist.es2015/index.js"),i=r(/*! dot-case */"./node_modules/dot-case/dist.es2015/index.js"),s=r(/*! header-case */"./node_modules/header-case/dist.es2015/index.js"),l=r(/*! no-case */"./node_modules/no-case/dist.es2015/index.js"),c=r(/*! param-case */"./node_modules/param-case/dist.es2015/index.js"),u=r(/*! pascal-case */"./node_modules/pascal-case/dist.es2015/index.js"),d=r(/*! path-case */"./node_modules/path-case/dist.es2015/index.js"),p=r(/*! sentence-case */"./node_modules/sentence-case/dist.es2015/index.js"),y=r(/*! snake-case */"./node_modules/snake-case/dist.es2015/index.js")},"./node_modules/constant-case/dist.es2015/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/constant-case/dist.es2015/index.js ***!
  \*********************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{constantCase:()=>i});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! no-case */"./node_modules/no-case/dist.es2015/index.js"),a=r(/*! upper-case */"./node_modules/upper-case/dist.es2015/index.js");function i(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,o.__assign)({delimiter:"_",transform:a.upperCase},t))}},"./node_modules/dot-case/dist.es2015/index.js":
/*!****************************************************!*\
  !*** ./node_modules/dot-case/dist.es2015/index.js ***!
  \****************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{dotCase:()=>a});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! no-case */"./node_modules/no-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,o.__assign)({delimiter:"."},t))}},"./node_modules/header-case/dist.es2015/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/header-case/dist.es2015/index.js ***!
  \*******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{headerCase:()=>a});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! capital-case */"./node_modules/capital-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.capitalCase)(e,(0,o.__assign)({delimiter:"-"},t))}},"./node_modules/lower-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/lower-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{localeLowerCase:()=>n,lowerCase:()=>a});var o={tr:{regexp:/\u0130|\u0049|\u0049\u0307/g,map:{İ:"i",I:"ı",İ:"i"}},az:{regexp:/\u0130/g,map:{İ:"i",I:"ı",İ:"i"}},lt:{regexp:/\u0049|\u004A|\u012E|\u00CC|\u00CD|\u0128/g,map:{I:"i̇",J:"j̇",Į:"į̇",Ì:"i̇̀",Í:"i̇́",Ĩ:"i̇̃"}}};function n(e,t){var r=o[t.toLowerCase()];return a(r?e.replace(r.regexp,(function(e){return r.map[e]})):e)}function a(e){return e.toLowerCase()}},"./node_modules/no-case/dist.es2015/index.js":
/*!***************************************************!*\
  !*** ./node_modules/no-case/dist.es2015/index.js ***!
  \***************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{noCase:()=>i});var o=r(/*! lower-case */"./node_modules/lower-case/dist.es2015/index.js"),n=[/([a-z0-9])([A-Z])/g,/([A-Z])([A-Z][a-z])/g],a=/[^A-Z0-9]+/gi;function i(e,t){void 0===t&&(t={});for(var r=t.splitRegexp,i=void 0===r?n:r,l=t.stripRegexp,c=void 0===l?a:l,u=t.transform,d=void 0===u?o.lowerCase:u,p=t.delimiter,y=void 0===p?" ":p,f=s(s(e,i,"$1\0$2"),c,"\0"),m=0,T=f.length;"\0"===f.charAt(m);)m++;for(;"\0"===f.charAt(T-1);)T--;return f.slice(m,T).split("\0").map(d).join(y)}function s(e,t,r){return t instanceof RegExp?e.replace(t,r):t.reduce((function(e,t){return e.replace(t,r)}),e)}},"./node_modules/param-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/param-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{paramCase:()=>a});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! dot-case */"./node_modules/dot-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.dotCase)(e,(0,o.__assign)({delimiter:"-"},t))}},"./node_modules/pascal-case/dist.es2015/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/pascal-case/dist.es2015/index.js ***!
  \*******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{pascalCase:()=>s,pascalCaseTransform:()=>a,pascalCaseTransformMerge:()=>i});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! no-case */"./node_modules/no-case/dist.es2015/index.js");function a(e,t){var r=e.charAt(0),o=e.substr(1).toLowerCase();return t>0&&r>="0"&&r<="9"?"_"+r+o:""+r.toUpperCase()+o}function i(e){return e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()}function s(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,o.__assign)({delimiter:"",transform:a},t))}},"./node_modules/path-case/dist.es2015/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/path-case/dist.es2015/index.js ***!
  \*****************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{pathCase:()=>a});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! dot-case */"./node_modules/dot-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.dotCase)(e,(0,o.__assign)({delimiter:"/"},t))}},"./node_modules/sentence-case/dist.es2015/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/sentence-case/dist.es2015/index.js ***!
  \*********************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{sentenceCase:()=>s,sentenceCaseTransform:()=>i});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! no-case */"./node_modules/no-case/dist.es2015/index.js"),a=r(/*! upper-case-first */"./node_modules/upper-case-first/dist.es2015/index.js");function i(e,t){var r=e.toLowerCase();return 0===t?(0,a.upperCaseFirst)(r):r}function s(e,t){return void 0===t&&(t={}),(0,n.noCase)(e,(0,o.__assign)({delimiter:" ",transform:i},t))}},"./node_modules/snake-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/snake-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{snakeCase:()=>a});var o=r(/*! tslib */"./node_modules/tslib/tslib.es6.mjs"),n=r(/*! dot-case */"./node_modules/dot-case/dist.es2015/index.js");function a(e,t){return void 0===t&&(t={}),(0,n.dotCase)(e,(0,o.__assign)({delimiter:"_"},t))}},"./src/content/token.ts":
/*!******************************!*\
  !*** ./src/content/token.ts ***!
  \******************************/(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convertedToken=void 0;const o=r(/*! @supernovaio/export-helpers */"./node_modules/@supernovaio/export-helpers/build/helpers.js"),n=r(/*! .. */"./src/index.ts");function a(e,t){const r=n.exportConfiguration.tokenPrefixes[e.tokenType],a=t.find((t=>t.id===e.parentGroupId));return o.NamingHelper.codeSafeVariableNameForToken(e,n.exportConfiguration.tokenNameStyle,a,r)}t.convertedToken=function(e,t,r){const i=a(e,r),s=o.CSSHelper.tokenToCSS(e,t,{allowReferences:n.exportConfiguration.useReferences,decimals:n.exportConfiguration.colorPrecision,colorFormat:n.exportConfiguration.colorFormat,tokenToVariableRef:e=>`var(--${a(e,r)})`}),l=" ".repeat(n.exportConfiguration.indent);return n.exportConfiguration.showDescriptions&&e.description?`${l}/* ${e.description.trim()} */\n${l}--${i}: ${s};`:`${l}--${i}: ${s};`}},"./src/files/index-file.ts":
/*!*********************************!*\
  !*** ./src/files/index-file.ts ***!
  \*********************************/(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.indexOutputFile=void 0;const o=r(/*! @supernovaio/export-helpers */"./node_modules/@supernovaio/export-helpers/build/helpers.js"),n=r(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),a=r(/*! .. */"./src/index.ts");t.indexOutputFile=function(e){let t=Object.values(n.TokenType).map((t=>{const r=`@import "./${a.exportConfiguration.styleFileNames[t]}";`;if(a.exportConfiguration.generateEmptyFiles)return r;return e.filter((e=>e.tokenType===t)).length>0?r:null})).filter((e=>null!==e)).join("\n");return a.exportConfiguration.showGeneratedFileDisclaimer&&(t=`/* ${a.exportConfiguration.disclaimer} */\n${t}`),o.FileHelper.createTextFile({relativePath:a.exportConfiguration.baseIndexFilePath,fileName:a.exportConfiguration.indexFileName,content:t})}},"./src/files/style-file.ts":
/*!*********************************!*\
  !*** ./src/files/style-file.ts ***!
  \*********************************/(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.styleOutputFile=void 0;const o=r(/*! @supernovaio/export-helpers */"./node_modules/@supernovaio/export-helpers/build/helpers.js"),n=r(/*! .. */"./src/index.ts"),a=r(/*! ../content/token */"./src/content/token.ts");t.styleOutputFile=function(e,t,r){const i=t.filter((t=>t.tokenType===e));if(!n.exportConfiguration.generateEmptyFiles&&0===i.length)return null;const s=new Map(t.map((e=>[e.id,e])));let l=`:root {\n${i.map((e=>(0,a.convertedToken)(e,s,r))).join("\n")}\n}`;return n.exportConfiguration.showGeneratedFileDisclaimer&&(l=`/* ${n.exportConfiguration.disclaimer} */\n${l}`),o.FileHelper.createTextFile({relativePath:n.exportConfiguration.baseStyleFilePath,fileName:n.exportConfiguration.styleFileNames[e],content:l})}},"./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.exportConfiguration=void 0;const o=r(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),n=r(/*! ./files/index-file */"./src/files/index-file.ts"),a=r(/*! ./files/style-file */"./src/files/style-file.ts");t.exportConfiguration=Pulsar.exportConfig(),Pulsar.export((async(e,t)=>{const r={designSystemId:t.dsId,versionId:t.versionId};let i=await e.tokens.getTokens(r),s=await e.tokens.getTokenGroups(r);if(t.brandId){const o=(await e.brands.getBrands(r)).find((e=>e.id===t.brandId||e.idInVersion===t.brandId));if(!o)throw new Error(`Unable to find brand ${t.brandId}.`);i=i.filter((e=>e.brandId===o.id)),s=s.filter((e=>e.brandId===o.id))}if(t.themeIds&&t.themeIds.length>0){const o=await e.tokens.getTokenThemes(r),n=t.themeIds.map((e=>{const t=o.find((t=>t.id===e||t.idInVersion===e));if(!t)throw new Error(`Unable to find theme ${e}.`);return t}));i=e.tokens.computeTokensByApplyingThemes(i,i,n)}return[...Object.values(o.TokenType).map((e=>(0,a.styleOutputFile)(e,i,s))).filter((e=>null!==e)),(0,n.indexOutputFile)(i)]}))},"./node_modules/upper-case-first/dist.es2015/index.js":
/*!************************************************************!*\
  !*** ./node_modules/upper-case-first/dist.es2015/index.js ***!
  \************************************************************/(e,t,r)=>{"use strict";function o(e){return e.charAt(0).toUpperCase()+e.substr(1)}r.r(t),r.d(t,{upperCaseFirst:()=>o})},"./node_modules/upper-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/upper-case/dist.es2015/index.js ***!
  \******************************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{localeUpperCase:()=>n,upperCase:()=>a});var o={tr:{regexp:/[\u0069]/g,map:{i:"İ"}},az:{regexp:/[\u0069]/g,map:{i:"İ"}},lt:{regexp:/[\u0069\u006A\u012F]\u0307|\u0069\u0307[\u0300\u0301\u0303]/g,map:{i̇:"I",j̇:"J",į̇:"Į",i̇̀:"Ì",i̇́:"Í",i̇̃:"Ĩ"}}};function n(e,t){var r=o[t.toLowerCase()];return a(r?e.replace(r.regexp,(function(e){return r.map[e]})):e)}function a(e){return e.toUpperCase()}},"./node_modules/tslib/tslib.es6.mjs":
/*!******************************************!*\
  !*** ./node_modules/tslib/tslib.es6.mjs ***!
  \******************************************/(e,t,r)=>{"use strict";r.r(t),r.d(t,{__addDisposableResource:()=>N,__assign:()=>a,__asyncDelegator:()=>P,__asyncGenerator:()=>k,__asyncValues:()=>O,__await:()=>C,__awaiter:()=>f,__classPrivateFieldGet:()=>E,__classPrivateFieldIn:()=>R,__classPrivateFieldSet:()=>w,__createBinding:()=>T,__decorate:()=>s,__disposeResources:()=>F,__esDecorate:()=>c,__exportStar:()=>g,__extends:()=>n,__generator:()=>m,__importDefault:()=>j,__importStar:()=>D,__makeTemplateObject:()=>x,__metadata:()=>y,__param:()=>l,__propKey:()=>d,__read:()=>v,__rest:()=>i,__runInitializers:()=>u,__setFunctionName:()=>p,__spread:()=>h,__spreadArray:()=>S,__spreadArrays:()=>_,__values:()=>b,default:()=>L});var o=function(e,t){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},o(e,t)};function n(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var a=function(){return a=Object.assign||function(e){for(var t,r=1,o=arguments.length;r<o;r++)for(var n in t=arguments[r])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},a.apply(this,arguments)};function i(e,t){var r={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(r[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(o=Object.getOwnPropertySymbols(e);n<o.length;n++)t.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(e,o[n])&&(r[o[n]]=e[o[n]])}return r}function s(e,t,r,o){var n,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var s=e.length-1;s>=0;s--)(n=e[s])&&(i=(a<3?n(i):a>3?n(t,r,i):n(t,r))||i);return a>3&&i&&Object.defineProperty(t,r,i),i}function l(e,t){return function(r,o){t(r,o,e)}}function c(e,t,r,o,n,a){function i(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var s,l=o.kind,c="getter"===l?"get":"setter"===l?"set":"value",u=!t&&e?o.static?e:e.prototype:null,d=t||(u?Object.getOwnPropertyDescriptor(u,o.name):{}),p=!1,y=r.length-1;y>=0;y--){var f={};for(var m in o)f[m]="access"===m?{}:o[m];for(var m in o.access)f.access[m]=o.access[m];f.addInitializer=function(e){if(p)throw new TypeError("Cannot add initializers after decoration has completed");a.push(i(e||null))};var T=(0,r[y])("accessor"===l?{get:d.get,set:d.set}:d[c],f);if("accessor"===l){if(void 0===T)continue;if(null===T||"object"!=typeof T)throw new TypeError("Object expected");(s=i(T.get))&&(d.get=s),(s=i(T.set))&&(d.set=s),(s=i(T.init))&&n.unshift(s)}else(s=i(T))&&("field"===l?n.unshift(s):d[c]=s)}u&&Object.defineProperty(u,o.name,d),p=!0}function u(e,t,r){for(var o=arguments.length>2,n=0;n<t.length;n++)r=o?t[n].call(e,r):t[n].call(e);return o?r:void 0}function d(e){return"symbol"==typeof e?e:"".concat(e)}function p(e,t,r){return"symbol"==typeof t&&(t=t.description?"[".concat(t.description,"]"):""),Object.defineProperty(e,"name",{configurable:!0,value:r?"".concat(r," ",t):t})}function y(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function f(e,t,r,o){return new(r||(r=Promise))((function(n,a){function i(e){try{l(o.next(e))}catch(e){a(e)}}function s(e){try{l(o.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((o=o.apply(e,t||[])).next())}))}function m(e,t){var r,o,n,a,i={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(s){return function(l){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;a&&(a=0,s[0]&&(i=0)),i;)try{if(r=1,o&&(n=2&s[0]?o.return:s[0]?o.throw||((n=o.return)&&n.call(o),0):o.next)&&!(n=n.call(o,s[1])).done)return n;switch(o=0,n&&(s=[2&s[0],n.value]),s[0]){case 0:case 1:n=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,o=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(n=i.trys,(n=n.length>0&&n[n.length-1])||6!==s[0]&&2!==s[0])){i=0;continue}if(3===s[0]&&(!n||s[1]>n[0]&&s[1]<n[3])){i.label=s[1];break}if(6===s[0]&&i.label<n[1]){i.label=n[1],n=s;break}if(n&&i.label<n[2]){i.label=n[2],i.ops.push(s);break}n[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],o=0}finally{r=n=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}}var T=Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]};function g(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||T(t,e,r)}function b(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],o=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&o>=e.length&&(e=void 0),{value:e&&e[o++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function v(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var o,n,a=r.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(o=a.next()).done;)i.push(o.value)}catch(e){n={error:e}}finally{try{o&&!o.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}return i}function h(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(v(arguments[t]));return e}function _(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var o=Array(e),n=0;for(t=0;t<r;t++)for(var a=arguments[t],i=0,s=a.length;i<s;i++,n++)o[n]=a[i];return o}function S(e,t,r){if(r||2===arguments.length)for(var o,n=0,a=t.length;n<a;n++)!o&&n in t||(o||(o=Array.prototype.slice.call(t,0,n)),o[n]=t[n]);return e.concat(o||Array.prototype.slice.call(t))}function C(e){return this instanceof C?(this.v=e,this):new C(e)}function k(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var o,n=r.apply(e,t||[]),a=[];return o={},i("next"),i("throw"),i("return"),o[Symbol.asyncIterator]=function(){return this},o;function i(e){n[e]&&(o[e]=function(t){return new Promise((function(r,o){a.push([e,t,r,o])>1||s(e,t)}))})}function s(e,t){try{(r=n[e](t)).value instanceof C?Promise.resolve(r.value.v).then(l,c):u(a[0][2],r)}catch(e){u(a[0][3],e)}var r}function l(e){s("next",e)}function c(e){s("throw",e)}function u(e,t){e(t),a.shift(),a.length&&s(a[0][0],a[0][1])}}function P(e){var t,r;return t={},o("next"),o("throw",(function(e){throw e})),o("return"),t[Symbol.iterator]=function(){return this},t;function o(o,n){t[o]=e[o]?function(t){return(r=!r)?{value:C(e[o](t)),done:!1}:n?n(t):t}:n}}function O(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e=b(e),t={},o("next"),o("throw"),o("return"),t[Symbol.asyncIterator]=function(){return this},t);function o(r){t[r]=e[r]&&function(t){return new Promise((function(o,n){(function(e,t,r,o){Promise.resolve(o).then((function(t){e({value:t,done:r})}),t)})(o,n,(t=e[r](t)).done,t.value)}))}}}function x(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}var I=Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t};function D(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&T(t,e,r);return I(t,e),t}function j(e){return e&&e.__esModule?e:{default:e}}function E(e,t,r,o){if("a"===r&&!o)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!o:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?o:"a"===r?o.call(e):o?o.value:t.get(e)}function w(e,t,r,o,n){if("m"===o)throw new TypeError("Private method is not writable");if("a"===o&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===o?n.call(e,r):n?n.value=r:t.set(e,r),r}function R(e,t){if(null===t||"object"!=typeof t&&"function"!=typeof t)throw new TypeError("Cannot use 'in' operator on non-object");return"function"==typeof e?t===e:e.has(t)}function N(e,t,r){if(null!=t){if("object"!=typeof t&&"function"!=typeof t)throw new TypeError("Object expected.");var o;if(r){if(!Symbol.asyncDispose)throw new TypeError("Symbol.asyncDispose is not defined.");o=t[Symbol.asyncDispose]}if(void 0===o){if(!Symbol.dispose)throw new TypeError("Symbol.dispose is not defined.");o=t[Symbol.dispose]}if("function"!=typeof o)throw new TypeError("Object not disposable.");e.stack.push({value:t,dispose:o,async:r})}else r&&e.stack.push({async:!0});return t}var B="function"==typeof SuppressedError?SuppressedError:function(e,t,r){var o=new Error(r);return o.name="SuppressedError",o.error=e,o.suppressed=t,o};function F(e){function t(t){e.error=e.hasError?new B(t,e.error,"An error was suppressed during disposal."):t,e.hasError=!0}return function r(){for(;e.stack.length;){var o=e.stack.pop();try{var n=o.dispose&&o.dispose.call(o.value);if(o.async)return Promise.resolve(n).then(r,(function(e){return t(e),r()}))}catch(e){t(e)}}if(e.hasError)throw e.error}()}const L={__extends:n,__assign:a,__rest:i,__decorate:s,__param:l,__metadata:y,__awaiter:f,__generator:m,__createBinding:T,__exportStar:g,__values:b,__read:v,__spread:h,__spreadArrays:_,__spreadArray:S,__await:C,__asyncGenerator:k,__asyncDelegator:P,__asyncValues:O,__makeTemplateObject:x,__importStar:D,__importDefault:j,__classPrivateFieldGet:E,__classPrivateFieldSet:w,__classPrivateFieldIn:R,__addDisposableResource:N,__disposeResources:F}}},t={};function r(o){var n=t[o];if(void 0!==n)return n.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,r),a.exports}r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};r("./src/index.ts")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,