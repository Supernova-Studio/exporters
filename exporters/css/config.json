[
    {
        "key": "tokenNameStyle",
        "type": "enum",
        "default": "kebabCase",
        "title": "Token name style",
        "description": "Export token names in the selected case.",
        "category": "Formatting",
        "options": {
            "camelCase": {
                "label": "Camel case",
                "description": "Example: --myVariableName"
            },
            "constantCase": {
                "label": "Constant case",
                "description": "Example: --MY_VARIABLE_NAME"
            },
            "flatCase": {
                "label": "Flat case",
                "description": "Example: --myvariablename"
            },
            "headerCase": {
                "label": "Header case",
                "description": "Example: --My-Variable-Name"
            },
            "kebabCase": {
                "label": "Kebab case",
                "description": "Example: --my-variable-name"
            },
            "pascalCase": {
                "label": "Pascal case",
                "description": "Example: --MyVariableName"
            },
            "snakeCase": {
                "label": "Snake case",
                "description": "Example: --my_variable_name"
            }
        }
    },
    {
        "key": "colorFormat",
        "type": "enum",
        "default": "smartHex",
        "title": "Color format",
        "description": "Export color token values in the selected color format.",
        "category": "Formatting",
        "options": {
            "smartHex": {
                "label": "Smart hex",
                "description": "Automatically choose between #RRGGBB and #RRGGBBAA"
            },
            "smartRgb": {
                "label": "Smart RGB",
                "description": "Automatically choose between rgb() and rgba()"
            },
            "smartHsl": {
                "label": "Smart HSL",
                "description": "Automatically choose between hsl() and hsla()"
            },
            "smartOklch": {
                "label": "Smart OKLCH",
                "description": "Automatically choose between oklch() and oklch() with alpha"
            },
            "smartUIColor": {
                "label": "Smart UI Color",
                "description": "Automatically choose UI color format"
            },
            "hashHex6": {
                "label": "Hex (6 digits)",
                "description": "Example: #ff0000"
            },
            "hashHex8": {
                "label": "Hex (8 digits)",
                "description": "Example: #ff0000ff"
            },
            "rgb": {
                "label": "RGB",
                "description": "Example: rgb(255, 0, 0)"
            },
            "rgba": {
                "label": "RGBA",
                "description": "Example: rgba(255, 0, 0, 1)"
            },
            "hsl": {
                "label": "HSL",
                "description": "Example: hsl(0, 100%, 50%)"
            },
            "hsla": {
                "label": "HSLA",
                "description": "Example: hsla(0, 100%, 50%, 1)"
            },
            "oklch": {
                "label": "OKLCH",
                "description": "Example: oklch(0.6 0.15 30)"
            },
            "oklcha": {
                "label": "OKLCHA",
                "description": "Example: oklch(0.6 0.15 30 / 1)"
            }
        }
    },
    {
        "key": "colorPrecision",
        "type": "number",
        "default": 3,
        "title": "Color precision",
        "description": "Maximum number of decimals in colors.",
        "category": "Formatting"
    },
    {
        "key": "indent",
        "type": "number",
        "default": 2,
        "title": "Indentation",
        "description": "Number of spaces used to indent CSS variables.",
        "category": "Formatting"
    },
    {
        "key": "showDescriptions",
        "type": "boolean",
        "default": true,
        "title": "Show token descriptions",
        "description": "Show the token description as a code comment for every exported token.",
        "category": "Token information"
    },
    {
        "key": "useReferences",
        "type": "boolean",
        "default": true,
        "title": "Use token references",
        "description": "When enabled, values will use references to other tokens where applicable.",
        "category": "Token information"
    },
    {
        "key": "generateIndexFile",
        "type": "boolean",
        "default": true,
        "title": "Generate index file",
        "description": "When enabled, a file will be generated that imports all style files.",
        "category": "Index file"
    },
    {
        "key": "indexFileName",
        "type": "string",
        "default": "index.css",
        "title": "Index filename",
        "description": "The name of the index file that will be generated.",
        "category": "Index file",
        "dependsOn": {
            "generateIndexFile": true
        }
    },
    {
        "key": "baseIndexFilePath",
        "type": "string",
        "default": "./",
        "title": "Base index file path",
        "description": "Index file will be written to this directory relative to export root as set by the exporter, pipeline configuration, or VSCode extension.",
        "category": "Index file",
        "dependsOn": {
            "generateIndexFile": true
        }
    },
    {
        "key": "generateEmptyFiles",
        "type": "boolean",
        "default": false,
        "title": "Generate empty style files",
        "description": "When enabled, empty style files will be generated instead of omitted.",
        "category": "Style files"
    },
    {
        "key": "baseStyleFilePath",
        "type": "string",
        "default": "./base",
        "title": "Base style file path",
        "description": "All files will be written to this directory relative to export root as set by the exporter, pipeline configuration, or VSCode extension.",
        "category": "Style files"
    },
    {
        "key": "styleFileNames",
        "type": "object",
        "title": "Style file names",
        "description": "Name of each file that will be generated, grouped by token type.",
        "category": "Style files",
        "default": {
            "Color": "color.css",
            "Typography": "typography.css",
            "Dimension": "dimension.css",
            "Size": "size.css",
            "Space": "space.css",
            "Opacity": "opacity.css",
            "FontSize": "font-size.css",
            "LineHeight": "line-height.css",
            "LetterSpacing": "letter-spacing.css",
            "ParagraphSpacing": "paragraph-spacing.css",
            "BorderWidth": "border-width.css",
            "BorderRadius": "border-radius.css",
            "Duration": "duration.css",
            "ZIndex": "z-index.css",
            "Shadow": "shadow.css",
            "Border": "border.css",
            "Gradient": "gradient.css",
            "String": "string.css",
            "ProductCopy": "product-copy.css",
            "FontFamily": "font-family.css",
            "FontWeight": "font-weight.css",
            "TextCase": "text-case.css",
            "TextDecoration": "text-decoration.css",
            "Visibility": "visibility.css",
            "Blur": "blur.css"
        },
        "allowedKeys": {
            "options": [
                "Color",
                "Typography",
                "Dimension",
                "Size",
                "Space",
                "Opacity",
                "FontSize",
                "LineHeight",
                "LetterSpacing",
                "ParagraphSpacing",
                "BorderWidth",
                "BorderRadius",
                "Duration",
                "ZIndex",
                "Shadow",
                "Border",
                "Gradient",
                "String",
                "ProductCopy",
                "FontFamily",
                "FontWeight",
                "TextCase",
                "TextDecoration",
                "Visibility",
                "Blur"
            ],
            "type": "string"
        },
        "allowedValues": {
            "type": "string"
        }
    },
    {
        "key": "tokenPrefixes",
        "type": "object",
        "title": "Token prefixes",
        "description": "Each token of a specific type is prefixed with the following identifier.",
        "category": "Token information",
        "default": {
            "Color": "color",
            "Typography": "typography", 
            "Dimension": "dimension",
            "Size": "size",
            "Space": "space",
            "Opacity": "opacity",
            "FontSize": "fontSize",
            "LineHeight": "lineHeight",
            "LetterSpacing": "letterSpacing",
            "ParagraphSpacing": "paragraphSpacing",
            "BorderWidth": "borderWidth",
            "BorderRadius": "borderRadius",
            "Duration": "duration",
            "ZIndex": "zIndex",
            "Shadow": "shadow",
            "Border": "border",
            "Gradient": "gradient",
            "String": "string",
            "ProductCopy": "productCopy",
            "FontFamily": "fontFamily",
            "FontWeight": "fontWeight",
            "TextCase": "textCase",
            "TextDecoration": "textDecoration",
            "Visibility": "visibility",
            "Blur": "blur"
        },
        "allowedKeys": {
            "options": [
                "Color",
                "Typography",
                "Dimension",
                "Size",
                "Space",
                "Opacity",
                "FontSize",
                "LineHeight",
                "LetterSpacing",
                "ParagraphSpacing",
                "BorderWidth",
                "BorderRadius",
                "Duration",
                "ZIndex",
                "Shadow",
                "Border",
                "Gradient",
                "String",
                "ProductCopy",
                "FontFamily",
                "FontWeight",
                "TextCase",
                "TextDecoration",
                "Visibility",
                "Blur"
            ],
            "type": "string"
        },
        "allowedValues": {
            "type": "string"
        }
    },
    {
        "key": "cssSelector",
        "type": "string",
        "default": ":root",
        "title": "CSS Selector",
        "description": "The CSS selector where the custom properties (variables) will be defined (e.g. :root, .theme-light, #app)",
        "category": "Style files"
    },
    {
        "key": "exportThemesAs",
        "type": "enum",
        "default": "separateFiles",
        "title": "Theme export style",
        "description": "Controls how themes are exported in the CSS files",
        "category": "Themes",
        "options": {
            "applyDirectly": {
                "label": "Apply themes directly",
                "description": "Apply selected themes directly to token values"
            },
            "separateFiles": {
                "label": "Separate file per theme",
                "description": "Generate a separate CSS file for each selected theme"
            },
            "combinedTheme": {
                "label": "Combined theme file",
                "description": "Generate base file without themes and one file with all selected themes applied"
            }
        }
    },
    {
        "key": "themeSelector",
        "type": "string",
        "default": ".theme-{theme}",
        "title": "CSS Selector for themes",
        "description": "The CSS selector used in theme files. Use {theme} placeholder which will be replaced with the theme name (e.g. .theme-{theme}, [data-theme='{theme}'])",
        "category": "Themes"
    },
    {
        "key": "showGeneratedFileDisclaimer",
        "type": "boolean",
        "default": true,
        "title": "Show file disclaimer",
        "description": "When enabled, a message explaining that the file was automatically generated will appear in all style files.",
        "category": "Other"
    },
    {
        "key": "disclaimer",
        "type": "string",
        "default": "This file was generated automatically and should not be changed manually.",
        "title": "Disclaimer message",
        "description": "When enabled, a message explaining that the file was automatically generated will appear in all style files.",
        "category": "Other",
        "dependsOn": {
            "showGeneratedFileDisclaimer": true
        }
    }
]