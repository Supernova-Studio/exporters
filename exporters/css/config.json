[
    {
        "key": "showGeneratedFileDisclaimer",
        "type": "boolean",
        "default": true,
        "title": "Show file disclaimer",
        "description": "When enabled, a message explaining that the file was automatically generated will appear in all style files.",
        "category": "Disclaimer"
    },
    {
        "key": "disclaimer",
        "type": "string",
        "default": "This file was generated automatically and should not be changed manually.",
        "title": "Disclaimer message",
        "description": "When enabled, a message explaining that the file was automatically generated will appear in all style files.",
        "category": "Disclaimer",
        "dependsOn": {
            "showGeneratedFileDisclaimer": true
        }
    },
    {
        "key": "showDescriptions",
        "type": "boolean",
        "default": true,
        "title": "Show token descriptions",
        "description": "Show the token description as a code comment for every exported token.",
        "category": "Token information"
    },
    {
        "key": "useReferences",
        "type": "boolean",
        "default": true,
        "title": "Use token references",
        "description": "When enabled, values will use references to other tokens where applicable.",
        "category": "Token information"
    },
    {
        "key": "generateIndexFile",
        "type": "boolean",
        "default": true,
        "title": "Generate index file",
        "description": "When enabled, a file will be generated that imports all style files.",
        "category": "Index file"
    },
    {
        "key": "indexFileName",
        "type": "string",
        "default": "index.css",
        "title": "Index filename",
        "description": "The name of the index file that will be generated.",
        "category": "Index file",
        "dependsOn": {
            "generateIndexFile": true
        }
    },
    {
        "key": "baseIndexFilePath",
        "type": "string",
        "default": "./",
        "title": "Base index file path",
        "description": "Index file will be written to this directory relative to export root as set by the exporter, pipeline configuration, or VSCode extension.",
        "category": "Index file",
        "dependsOn": {
            "generateIndexFile": true
        }
    },
    {
        "key": "generateEmptyFiles",
        "type": "boolean",
        "default": false,
        "title": "Generate empty style files",
        "description": "When enabled, empty style files will be generated instead of omitted.",
        "category": "Style files"
    },
    {
        "key": "baseStyleFilePath",
        "type": "string",
        "default": "./styles",
        "title": "Base style file path",
        "description": "All files will be written to this directory relative to export root as set by the exporter, pipeline configuration, or VSCode extension.",
        "category": "Style files"
    },
    {
        "key": "tokenNameStyle",
        "type": "enum",
        "default": "camelCase",
        "title": "Token name style",
        "description": "Export token names in the selected case.",
        "category": "Formatting",
        "options": {
            "camelCase": {
                "label": "Camel case",
                "description": "Example: myVariableName"
            },
            "capitalCase": {
                "label": "Capital case",
                "description": "Example: My Variable Name"
            },
            "constantCase": {
                "label": "Constant case",
                "description": "Example: MY_VARIABLE_NAME"
            },
            "dotCase": {
                "label": "Dot case",
                "description": "Example: my.variable.name"
            },
            "headerCase": {
                "label": "Header case",
                "description": "Example: My-Variable-Name"
            },
            "noCase": {
                "label": "No case",
                "description": "Example: my variable name"
            },
            "paramCase": {
                "label": "Param case",
                "description": "Example: my-variable-name"
            },
            "pascalCase": {
                "label": "Pascal case",
                "description": "Example: MyVariableName"
            },
            "pathCase": {
                "label": "Path case",
                "description": "Example: my/variable/name"
            },
            "sentenceCase": {
                "label": "Sentence case",
                "description": "Example: My variable name"
            },
            "snakeCase": {
                "label": "Snake case",
                "description": "Example: my_variable_name"
            }
        }
    },
    {
        "key": "colorFormat",
        "type": "enum",
        "default": "smartHashHex",
        "title": "Color format",
        "description": "Export color token values in the selected color format.",
        "category": "Formatting",
        "options": {
            "rgb": {
                "label": "RGB",
                "description": "rgb(255, 0, 0)"
            },
            "rgba": {
                "label": "RGBA",
                "description": "rgba(255, 0, 0, 1)"
            },
            "smartRgba": {
                "label": "Smart RGBA",
                "description": "Automatically choose between rgb/rgba"
            },
            "hex6": {
                "label": "Hex6",
                "description": "ff0000"
            },
            "hex8": {
                "label": "Hex8",
                "description": "ff0000ff"
            },
            "hashHex6": {
                "label": "Hash Hex6",
                "description": "#ff0000"
            },
            "hashHex8": {
                "label": "Hash Hex8",
                "description": "#ff0000ff"
            },
            "smartHashHex": {
                "label": "Smart hash hex",
                "description": "Automatically choose hex format"
            },
            "smartHex": {
                "label": "Smart hex",
                "description": "Automatically choose hex format without #"
            },
            "hsl": {
                "label": "HSL",
                "description": "hsl(0, 100%, 50%)"
            },
            "hsla": {
                "label": "HSLA",
                "description": "hsla(0, 100%, 50%, 1)"
            },
            "smartHsla": {
                "label": "Smart HSLA",
                "description": "Automatically choose between hsl/hsla"
            }
        }
    },
    {
        "key": "colorPrecision",
        "type": "number",
        "default": 3,
        "title": "Color precision",
        "description": "Maximum number of decimals in colors.",
        "category": "Formatting"
    },
    {
        "key": "indent",
        "type": "number",
        "default": 2,
        "title": "Indentation",
        "description": "Number of spaces used to indent CSS variables.",
        "category": "Formatting"
    },
    {
        "key": "styleFileNames",
        "type": "object",
        "title": "Style file names",
        "description": "Name of each file that will be generated, grouped by token type.",
        "category": "Style files",
        "default": {
            "Color": "colors.css",
            "Typography": "typography.css",
            "Dimension": "dimensions.css",
            "Size": "size.css",
            "Space": "space.css",
            "Opacity": "opacity.css",
            "FontSize": "font-sizes.css",
            "LineHeight": "line-heights.css",
            "LetterSpacing": "letter-spacings.css",
            "ParagraphSpacing": "paragraph-spacings.css",
            "BorderWidth": "border-widths.css",
            "BorderRadius": "radii.css",
            "Duration": "durations.css",
            "ZIndex": "z-indices.css",
            "Shadow": "shadows.css",
            "Border": "borders.css",
            "Gradient": "gradients.css",
            "String": "strings.css",
            "ProductCopy": "product-copy.css",
            "FontFamily": "font-families.css",
            "FontWeight": "font-weights.css",
            "TextCase": "text-cases.css",
            "TextDecoration": "text-decorations.css",
            "Visibility": "visibility.css",
            "Blur": "blurs.css"
        },
        "allowedKeys": {
            "options": [
                "Color",
                "Typography",
                "Dimension",
                "Size",
                "Space",
                "Opacity",
                "FontSize",
                "LineHeight",
                "LetterSpacing",
                "ParagraphSpacing",
                "BorderWidth",
                "BorderRadius",
                "Duration",
                "ZIndex",
                "Shadow",
                "Border",
                "Gradient",
                "String",
                "ProductCopy",
                "FontFamily",
                "FontWeight",
                "TextCase",
                "TextDecoration",
                "Visibility",
                "Blur"
            ],
            "type": "string"
        },
        "allowedValues": {
            "type": "string"
        }
    },
    {
        "key": "tokenPrefixes",
        "type": "object",
        "title": "Token prefixes",
        "description": "Each token of a specific type is prefixed with the following identifier.",
        "category": "Token information",
        "default": {
            "Color": "color",
            "Typography": "typography", 
            "Dimension": "dimension",
            "Size": "size",
            "Space": "space",
            "Opacity": "opacity",
            "FontSize": "fontSize",
            "LineHeight": "lineHeight",
            "LetterSpacing": "letterSpacing",
            "ParagraphSpacing": "paragraphSpacing",
            "BorderWidth": "borderWidth",
            "BorderRadius": "borderRadius",
            "Duration": "duration",
            "ZIndex": "zIndex",
            "Shadow": "shadow",
            "Border": "border",
            "Gradient": "gradient",
            "String": "string",
            "ProductCopy": "productCopy",
            "FontFamily": "fontFamily",
            "FontWeight": "fontWeight",
            "TextCase": "textCase",
            "TextDecoration": "textDecoration",
            "Visibility": "visibility",
            "Blur": "blur"
        },
        "allowedKeys": {
            "options": [
                "Color",
                "Typography",
                "Dimension",
                "Size",
                "Space",
                "Opacity",
                "FontSize",
                "LineHeight",
                "LetterSpacing",
                "ParagraphSpacing",
                "BorderWidth",
                "BorderRadius",
                "Duration",
                "ZIndex",
                "Shadow",
                "Border",
                "Gradient",
                "String",
                "ProductCopy",
                "FontFamily",
                "FontWeight",
                "TextCase",
                "TextDecoration",
                "Visibility",
                "Blur"
            ],
            "type": "string"
        },
        "allowedValues": {
            "type": "string"
        }
    }
]