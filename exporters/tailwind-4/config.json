[
    {
        "key": "tokenNameStyle",
        "type": "enum",
        "default": "kebabCase",
        "title": "Token name style",
        "description": "Export token names in the selected case.",
        "category": "Token names",
        "options": {
            "camelCase": {
                "label": "Camel case",
                "description": "Example: --myVariableName"
            },
            "constantCase": {
                "label": "Constant case", 
                "description": "Example: --MY_VARIABLE_NAME"
            },
            "flatCase": {
                "label": "Flat case",
                "description": "Example: --myvariablename"
            },
            "kebabCase": {
                "label": "Kebab case",
                "description": "Example: --my-variable-name"
            },
            "pascalCase": {
                "label": "Pascal case",
                "description": "Example: --MyVariableName"
            },
            "snakeCase": {
                "label": "Snake case",
                "description": "Example: --my_variable_name"
            },
            "trainCase": {
                "label": "Train case",
                "description": "Example: --My-Variable-Name"
            }
        }
    },
    {
        "key": "colorFormat",
        "type": "enum",
        "default": "smartOklch",
        "title": "Color format",
        "description": "Export color token values in the selected color format.",
        "category": "Token values",
        "options": {
            "smartHashHex": {
                "label": "HEX (auto)",
                "description": "Automatically choose between #RRGGBB and #RRGGBBAA"
            },
            "smartRgba": {
                "label": "RGB (auto)",
                "description": "Automatically choose between rgb() and rgba()"
            },
            "smartHsla": {
                "label": "HSL (auto)",
                "description": "Automatically choose between hsl() and hsla()"
            },
            "smartOklch": {
                "label": "OKLCH (auto)",
                "description": "Automatically choose between oklch() and oklch() with alpha"
            },
            "hashHex6": {
                "label": "HEX (6 digits)",
                "description": "Example: #ff0000"
            },
            "hashHex8": {
                "label": "HEX (8 digits)",
                "description": "Example: #ff0000ff"
            },
            "rgb": {
                "label": "RGB",
                "description": "Example: rgb(255, 0, 0)"
            },
            "rgba": {
                "label": "RGBA",
                "description": "Example: rgba(255, 0, 0, 1)"
            },
            "hsl": {
                "label": "HSL",
                "description": "Example: hsl(0, 100%, 50%)"
            },
            "hsla": {
                "label": "HSLA",
                "description": "Example: hsla(0, 100%, 50%, 1)"
            },
            "oklch": {
                "label": "OKLCH",
                "description": "Example: oklch(0.6 0.15 30)"
            },
            "oklcha": {
                "label": "OKLCHA",
                "description": "Example: oklch(0.6 0.15 30 / 1)"
            }
        }
    },
    {
        "key": "forceRemUnit",
        "type": "boolean",
        "default": false,
        "title": "Force REM units",
        "description": "Convert all pixel values to REM units.",
        "category": "Token values"
    },
    {
        "key": "remBase",
        "type": "number",
        "default": 16,
        "title": "REM base value",
        "description": "Base pixel value for REM conversion.",
        "category": "Token values",
        "dependsOn": {
            "forceRemUnit": true
        }
    },
    {
        "key": "useReferences",
        "type": "boolean",
        "default": true,
        "title": "Use token references",
        "description": "Values will use references to other tokens (where applicable).",
        "category": "Token values"
    },
    {
        "key": "colorPrecision",
        "type": "number",
        "default": 3,
        "title": "Color precision",
        "description": "Maximum number of decimals in colors.",
        "category": "Token values"
    },
    {
        "key": "exportThemesAs",
        "type": "enum",
        "default": "separateFiles",
        "title": "Theme export format",
        "description": "Control how themes are exported in the CSS files.",
        "category": "Themes",
        "options": {
            "separateFiles": {
                "label": "Separate files per theme",
                "description": "Generate a separate CSS file for each selected theme"
            },
            "applyDirectly": {
                "label": "Apply themes directly",
                "description": "Apply selected themes directly to token values"
            },
            "mergedTheme": {
                "label": "Merged theme file",
                "description": "Generate theme variables with all themes applied together"
            }
        }
    },
    {
        "key": "exportOnlyThemedTokens",
        "type": "boolean",
        "default": false,
        "title": "Export only themed tokens",
        "description": "Theme files will only include tokens that have different values from the base value.",
        "category": "Themes"
    },
    {
        "key": "exportBaseValues",
        "type": "boolean",
        "default": true,
        "title": "Export base values",
        "description": "Base token values will be exported along with themes.",
        "category": "Themes"
    },
    {
        "key": "generateIndexFile",
        "type": "boolean",
        "default": false,
        "title": "Generate index file",
        "description": "Generate a file with imports for all base and theme style files.",
        "category": "Index file"
    },
    {
        "key": "indexFileName",
        "type": "string",
        "default": "index.css",
        "title": "Index filename",
        "description": "The name of the index file that will be generated.",
        "category": "Index file",
        "dependsOn": {
            "generateIndexFile": true
        }
    },
    {
        "key": "baseIndexFilePath",
        "type": "string",
        "default": "./",
        "title": "Path to index file",
        "description": "Index file will be written to this directory relative to export root.",
        "category": "Index file",
        "dependsOn": {
            "generateIndexFile": true
        }
    },
    {
        "key": "globalPrefix",
        "type": "string",
        "default": "",
        "title": "Prefix",
        "description": "Prefix for Tailwind classes and CSS variables (e.g., 'tw' will generate --tw-color-primary and tw:color-primary).",
        "category": "Token names"
    },
    {
        "key": "customizeTokenPrefixes",
        "type": "boolean",
        "default": false,
        "title": "Customize type prefixes",
        "description": "Customize the prefixes for each design token type.",
        "category": "Token names"
    },
    {
        "key": "tokenPrefixes",
        "type": "object",
        "title": "Token prefixes",
        "description": "Each token of a specific type is prefixed with the following identifier.",
        "category": "Token names",
        "dependsOn": {
            "customizeTokenPrefixes": true
        },
        "default": {
            "Blur": "blur",
            "Border": "border",
            "BorderRadius": "borderRadius",
            "BorderWidth": "borderWidth",
            "Color": "color",
            "Dimension": "dimension",
            "Duration": "duration",
            "FontFamily": "fontFamily",
            "FontSize": "fontSize",
            "FontWeight": "fontWeight",
            "Gradient": "gradient",
            "LetterSpacing": "letterSpacing",
            "LineHeight": "lineHeight",
            "Opacity": "opacity",
            "ParagraphSpacing": "paragraphSpacing",
            "ProductCopy": "productCopy",
            "Shadow": "shadow",
            "Size": "size",
            "Space": "space",
            "String": "string",
            "TextCase": "textCase",
            "TextDecoration": "textDecoration",
            "Typography": "typography",
            "Visibility": "visibility",
            "ZIndex": "zIndex"
        },
        "allowedKeys": {
            "options": [
                "Color",
                "Typography",
                "Dimension",
                "Size",
                "Space",
                "Opacity",
                "FontSize",
                "LineHeight",
                "LetterSpacing",
                "ParagraphSpacing",
                "BorderWidth",
                "BorderRadius",
                "Duration",
                "ZIndex",
                "Shadow",
                "Border",
                "Gradient",
                "String",
                "ProductCopy",
                "FontFamily",
                "FontWeight",
                "TextCase",
                "TextDecoration",
                "Visibility",
                "Blur"
            ],
            "type": "string"
        },
        "allowedValues": {
            "type": "string"
        }
    },
    {
        "key": "useColorUtilityPrefixes",
        "type": "boolean",
        "default": true,
        "title": "Use color utility prefixes",
        "description": "Enable specific prefixes for different color utilities. Only applies to color tokens.",
        "category": "Token names"
    },
    {
        "key": "colorUtilityPrefixes",
        "type": "object",
        "title": "Color utility prefixes",
        "description": "Define specific string patterns to identify and prefix color tokens based on their utility. These prefixes are automatically applied only to color tokens.",
        "category": "Token names",
        "dependsOn": {
            "useColorUtilityPrefixes": true
        },
        "default": {
            "text": "foreground",
            "boxShadow": "shadow",
            "background": "background",
            "outline": "outline",
            "border": "border",
            "stroke": "stroke"
        },
        "allowedKeys": {
            "options": [
                "text",
                "boxShadow",
                "background",
                "outline",
                "border",
                "stroke"
            ],
            "type": "string"
        },
        "allowedValues": {
            "type": "string"
        }
    },
    {
        "key": "cssSelector",
        "type": "string",
        "default": "@theme",
        "title": "CSS selector",
        "description": "CSS selector for base token variables (e.g. ':root' for global scope).",
        "category": "CSS selectors"
    },
    {
        "key": "themeSelector",
        "type": "string",
        "default": ".theme-{theme}",
        "title": "CSS selector for themes",
        "description": "CSS selector for theme files. Use {theme} placeholder to insert theme name.",
        "category": "CSS selectors"
    },
    {
        "key": "showDescriptions",
        "type": "boolean",
        "default": true,
        "title": "Show token descriptions",
        "description": "Show the token description as a code comment for every exported token.",
        "category": "Other"
    },
    {
        "key": "showGeneratedFileDisclaimer",
        "type": "boolean",
        "default": true,
        "title": "Show file disclaimer",
        "description": "A message explaining that the file was automatically generated will appear in all style files.",
        "category": "Other"
    },
    {
        "key": "disclaimer",
        "type": "string",
        "default": "This file was generated automatically by Supernova.io and should not be changed manually.\nTo modify the format or content of this file, please contact your design system team.",
        "title": "Disclaimer message",
        "description": "A message explaining that the file was automatically generated will appear in all style files.",
        "category": "Other",
        "dependsOn": {
            "showGeneratedFileDisclaimer": true
        }
    },
    {
        "key": "indent",
        "type": "number",
        "default": 2,
        "title": "Indentation",
        "description": "Number of spaces used to indent CSS variables.",
        "category": "Other"
    },
    {
        "key": "disableAnimateDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset animation styles",
        "description": "Reset all animation token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disableBlurDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset blur styles",
        "description": "Reset all blur token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disableBorderRadiusDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset border radius styles",
        "description": "Reset all border radius token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disableBreakpointDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset breakpoint styles",
        "description": "Reset all breakpoint token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disableColorDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset color styles",
        "description": "Reset all color token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disableContainerDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset container styles",
        "description": "Reset all container token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disableDropShadowDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset drop shadow styles",
        "description": "Reset all drop shadow token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disableFontDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset font family styles",
        "description": "Reset all font family token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disableFontWeightDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset font weight styles",
        "description": "Reset all font weight token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disableInsetDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset inset styles",
        "description": "Reset all inset token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disableLeadingDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset line height styles",
        "description": "Reset all line height token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disablePerspectiveDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset perspective styles",
        "description": "Reset all perspective token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disableShadowDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset shadow styles",
        "description": "Reset all shadow token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disableSpacingDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset spacing styles",
        "description": "Reset all spacing token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disableTextDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset text styles",
        "description": "Reset all text token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "disableTrackingDefaults",
        "type": "boolean",
        "default": false,
        "title": "Reset letter spacing styles",
        "description": "Reset all letter spacing token values to initial state before applying new values.",
        "category": "Disabled default styles"
    },
    {
        "key": "findReplace",
        "type": "object",
        "title": "Find and Replace",
        "description": "Replace strings in token paths and names. Each key is the string to find, and its value is the string to replace it with.",
        "category": "Token names",
        "default": {
            "Border Radius": ""
        },
        "allowedKeys": {
            "type": "string"
        },
        "allowedValues": {
            "type": "string"
        }
    }
]