(()=>{var e={"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js ***!
  \***********************************************************************************/(e,t)=>{(()=>{"use strict";var e={4379:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SupernovaError=void 0;class o extends Error{constructor(e,t,o,r,n,i,a){super(e),this.code=t,this.status=o,this.formErrors=r,this.requestId=n,this.serverTime=i,this.url=a}static fromNetworkResponse(e,t,r){var n,i,a;return new o(e.message,e.errorCode||e.reason||e.label||null,e.code||t,null!==(n=e.formErrors)&&void 0!==n?n:null,null!==(i=e.requestId)&&void 0!==i?i:null,null!==(a=e.serverTime)&&void 0!==a?a:null,r)}static fromNoNetworkResponse(e){return new o("No network or internet unreachable","NO_NETWORK",12163,null,(new Date).toISOString(),null,e)}static fromCode(e){return new o(e,e,null,null,null,null,null)}static fromMessage(e){return new o(e,null,null,null,null,null,null)}isFieldErrored(e){return void 0!==this.formErrors.find((t=>t.key===e))}errorForField(e){var t;return null!==(t=this.formErrors.find((t=>t.key===e)))&&void 0!==t?t:null}toString(){var e,t,o,r,n,i;return`\n    Error thrown: ${this.message}\n\n    Code: ${null!==(e=this.code)&&void 0!==e?e:"-"}\n\n    Status: ${null!==(t=this.status)&&void 0!==t?t:"-"}\n\n    Fields: ${JSON.stringify(this.formErrors,null,2)}\n\n    Request ID: ${null!==(o=this.requestId)&&void 0!==o?o:"-"}\n\n    Server time: ${null!==(r=this.serverTime)&&void 0!==r?r:"-"}\n\n    Network URL: ${null!==(n=this.url)&&void 0!==n?n:"-"}\n\n    Stack: ${null!==(i=this.stack)&&void 0!==i?i:"-"}\n    `}toHumanReadable(){return`${this.message}${this.requestId?` (request ${this.requestId})`:""}`}}t.SupernovaError=o},9932:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.docsImageRefToUrl=t.DocsImageRefType=void 0,function(e){e.resource="Resource",e.figmaNode="FigmaNode"}(o||(t.DocsImageRefType=o={})),t.docsImageRefToUrl=function(e,t,r){var n;if(e)switch(e.type){case o.resource:return null===(n=e.resource)||void 0===n?void 0:n.url;case o.figmaNode:if(!e.figmaNode||!e.figmaNode.sourceId||!e.figmaNode.frameReferenceId)return;return t.resources.getFigmaFrameHostedUrl({designSystemId:r.dsId,versionId:r.versionId},e.figmaNode.frameReferenceId);default:return}}},5673:(e,t)=>{var o;function r(e){switch(e.type){case o.documentationItem:return`@page:${e.documentationItemId}`;case o.pageHeading:return`@page:${e.documentationItemId}#${e.pageHeadingId}`;case o.url:return e.url;default:return}}Object.defineProperty(t,"__esModule",{value:!0}),t.linkAttributeToDocsLink=t.docsLinkToLinkAttributes=t.docsLinkToUrl=t.DocsLinkRefType=void 0,function(e){e.documentationItem="DocumentationItem",e.pageHeading="PageHeading",e.url="Url"}(o||(t.DocsLinkRefType=o={})),t.docsLinkToUrl=r,t.docsLinkToLinkAttributes=function(e){const t=r(e);if(t)return{href:t,target:e.openInNewTab?"_blank":"_self"}},t.linkAttributeToDocsLink=function(e,t){if(!e)return;const r="_blank"===t;if(e.startsWith("@page:")){if(e.includes("#")){const[t,n]=e.replace("@page:","").split("#");return{type:o.pageHeading,documentationItemId:t,pageHeadingId:n,openInNewTab:r}}return{type:o.documentationItem,documentationItemId:e.replace("@page:",""),openInNewTab:r}}return{type:o.url,url:e,openInNewTab:r}}},2657:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockShortcut=t.DocumentationLegacyPageBlockShortcutType=void 0,function(e){e.external="External",e.internal="Internal"}(o||(t.DocumentationLegacyPageBlockShortcutType=o={})),t.DocumentationLegacyPageBlockShortcut=class{constructor(e){var t;e.url?this.type=o.external:this.type=o.internal,this.title=this.shortcutTitleFromModel(e,this.type),this.description=this.shortcutDescriptionFromModel(e,this.type),this.previewUrl=this.shortcutPreviewUrlFromModel(e),this.type===o.internal&&(null===(t=e.documentationItemPreview)||void 0===t?void 0:t.valid)&&e.documentationItemId?this.internalId=e.documentationItemId:(this.internalId=null,this.type===o.external&&e.url?this.externalUrl=e.url:this.externalUrl=null)}shortcutTitleFromModel(e,t){var r,n,i,a,l;let s=null;return e.title&&e.title.trim().length>0?s=e.title:t===o.internal?s=null!==(n=null===(r=e.documentationItemPreview)||void 0===r?void 0:r.title)&&void 0!==n?n:null:t===o.external&&(s=null!==(l=null!==(a=null===(i=e.urlPreview)||void 0===i?void 0:i.title)&&void 0!==a?a:e.url)&&void 0!==l?l:null),s&&0!==s.trim().length?s:null}shortcutDescriptionFromModel(e,t){var r;let n=null;return e.description&&e.description.trim().length>0?n=e.description:t===o.external&&(n=null===(r=e.urlPreview)||void 0===r?void 0:r.description),n&&0!==n.trim().length?n:null}shortcutPreviewUrlFromModel(e){var t,o,r,n,i;return null!==(i=null!==(r=null!==(t=e.assetUrl)&&void 0!==t?t:null===(o=e.asset)||void 0===o?void 0:o.url)&&void 0!==r?r:null===(n=e.urlPreview)||void 0===n?void 0:n.thumbnailUrl)&&void 0!==i?i:null}}},7476:(e,t)=>{var o,r;Object.defineProperty(t,"__esModule",{value:!0}),t.TextAlignment=t.Alignment=void 0,function(e){e.left="Left",e.center="Center",e.stretch="Stretch"}(o||(t.Alignment=o={})),function(e){e.left="Left",e.center="Center",e.right="Right"}(r||(t.TextAlignment=r={}))},8738:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetFormat=void 0,function(e){e.png="png",e.pdf="pdf",e.svg="svg"}(o||(t.AssetFormat=o={}))},915:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScale=void 0,function(e){e.x1="x1",e.x2="x2",e.x3="x3",e.x4="x4"}(o||(t.AssetScale=o={}))},899:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScaleType=void 0,function(e){e.aspectFill="AspectFill",e.aspectFit="AspectFit"}(o||(t.AssetScaleType=o={}))},6192:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.BlurType=void 0,function(e){e.layer="Layer",e.background="Background"}(o||(t.BlurType=o={}))},1160:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_POSITIONS=t.BorderPosition=void 0,function(e){e.inside="Inside",e.center="Center",e.outside="Outside"}(o||(t.BorderPosition=o={})),t.ALL_BORDER_POSITIONS=[o.inside,o.center,o.outside]},4546:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_STYLES=t.BorderStyle=void 0,function(e){e.dashed="Dashed",e.dotted="Dotted",e.solid="Solid",e.groove="Groove"}(o||(t.BorderStyle=o={})),t.ALL_BORDER_STYLES=[o.dashed,o.dotted,o.solid,o.groove]},8042:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ImportWarningType=void 0,function(e){e.UnsupportedFill="UnsupportedFill",e.UnsupportedStroke="UnsupportedStroke",e.UnsupportedEffect="UnsupportedEffect",e.StyleNotApplied="StyleNotApplied",e.NoPublishedStyles="NoPublishedStyles",e.NoPublishedComponents="NoPublishedComponents",e.NoPublishedAssets="NoPublishedAssets",e.NoVersionFound="NoVersionFound",e.ComponentHasNoThumbnail="ComponentHasNoThumbnail",e.DuplicateImportedStyleId="DuplicateImportedStyleId",e.DuplicateImportedStylePath="DuplicateImportedStylePath",e.NoPublishedElements="NoPublishedElements",e.NoUnpublishedStyles="NoUnpublishedStyles"}(o||(t.ImportWarningType=o={}))},5695:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainErrorCode=void 0,function(e){e.generalError="GeneralError",e.dnsNotConfigured="DNSNotConfigured",e.maintenance="Maintenance"}(o||(t.CustomDomainErrorCode=o={}))},7737:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainState=void 0,function(e){e.initial="Initial",e.domainSetupInProgress="DomainSetupInProgress",e.domainSetupFailed="DomainSetupFailed",e.domainSetupsSucces="DomainSetupSuccess",e.sslSetupInProgress="SSLSetupInProgress",e.sslSetupFailed="SSLSetupFailed",e.sslSetupSuccess="SSLSetupSuccess"}(o||(t.CustomDomainState=o={}))},5651:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorDataType=void 0,function(e){e.item="Item",e.token="Token",e.asset="Asset",e.component="Component",e.figmaNode="FigmaNode",e.figmaComponent="FigmaComponent"}(o||(t.DocsBlockBehaviorDataType=o={}))},3733:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorSelectionType=void 0,function(e){e.entity="Entity",e.group="Group",e.entityAndGroup="EntityAndGroup"}(o||(t.DocsBlockBehaviorSelectionType=o={}))},8890:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockImagePropertyAspectRatio=void 0,function(e){e.auto="Auto",e.square="Square",e.landscape="Landscape",e.portrait="Portrait",e.wide="Wide"}(o||(t.DocsBlockImagePropertyAspectRatio=o={}))},9377:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemEntityType=void 0,function(e){e.token="Token",e.tokenGroup="TokenGroup",e.asset="Asset",e.assetGroup="AssetGroup",e.component="Component",e.componentGroup="ComponentGroup"}(o||(t.DocsBlockItemEntityType=o={}))},5883:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyOptionRenderingStyle=void 0,function(e){e.segmentedControl="SegmentedControl",e.toggleButton="ToggleButton",e.select="Select",e.checkbox="Checkbox"}(o||(t.DocsBlockItemPropertyOptionRenderingStyle=o={}))},8061:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyRichTextStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.quote="Quote",e.callout="Callout",e.ol="OL",e.ul="UL"}(o||(t.DocsBlockItemPropertyRichTextStyle=o={}))},7479:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyTextStyle=void 0,function(e){e.small="Small",e.regular="Regular",e.bold="Bold"}(o||(t.DocsBlockItemPropertyTextStyle=o={}))},6839:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyType=void 0,function(e){e.richText="RichText",e.multiRichText="MultiRichText",e.text="Text",e.richTextEditor="RichTextEditor",e.boolean="Boolean",e.number="Number",e.singleSelect="SingleSelect",e.multiSelect="MultiSelect",e.image="Image",e.token="Token",e.tokenType="TokenType",e.tokenProperty="TokenProperty",e.component="Component",e.componentProperty="ComponentProperty",e.asset="Asset",e.assetProperty="AssetProperty",e.embedURL="EmbedURL",e.url="URL",e.markdown="Markdown",e.code="Code",e.codeSandbox="CodeSandbox",e.table="Table",e.divider="Divider",e.storybook="Storybook",e.color="Color",e.figmaNode="FigmaNode",e.figmaComponent="FigmaComponent"}(o||(t.DocsBlockItemPropertyType=o={}))},8095:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutType=void 0,function(e){e.column="Column",e.row="Row"}(o||(t.DocsBlockItemVariantLayoutType=o={}))},7291:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutWidth=void 0,function(e){e.c1="1",e.c2="2",e.c3="3",e.c4="4",e.c5="5",e.c6="6",e.c7="7",e.c8="8",e.c9="9",e.c10="10",e.c11="11",e.c12="12"}(o||(t.DocsBlockItemVariantLayoutWidth=o={}))},9133:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionColor=void 0,function(e){e.green="Green",e.red="Red",e.yellow="Yellow",e.blue="Blue",e.purple="Purple",e.orange="Orange",e.pink="Pink",e.teal="Teal",e.grey="Grey",e.lightGrey="LightGrey",e.cyan="Cyan",e.fuchsia="Fuchsia"}(o||(t.DocsBlockOptionColor=o={}))},5963:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionRenderingStyle=void 0,function(e){e.segmentedControl="SegmentedControl",e.toggleButton="ToggleButton",e.select="Select",e.checkbox="Checkbox"}(o||(t.DocsBlockOptionRenderingStyle=o={}))},6644:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockRichTextPropertyStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.quote="Quote",e.callout="Callout",e.default="Default"}(o||(t.DocsBlockRichTextPropertyStyle=o={}))},306:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockTextPropertyStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.default="Default",e.defaultBold="DefaultBold",e.defaultSemibold="DefaultSemibold",e.small="Small",e.smallBold="SmallBold",e.smallSemibold="SmallSemibold",e.custom="Custom"}(o||(t.DocsBlockTextPropertyStyle=o={}))},4068:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityGroupBehavior=void 0,function(e){e.group="Group",e.tabs="Tabs"}(o||(t.DocsEntityGroupBehavior=o={}))},1233:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityType=void 0,function(e){e.group="Group",e.page="Page"}(o||(t.DocsEntityType=o={}))},7971:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsSectionType=void 0,function(e){e.plain="Plain",e.tabs="Tabs"}(o||(t.DocsSectionType=o={}))},5102:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyCalloutType=void 0,function(e){e.info="Info",e.success="Success",e.warning="Warning",e.error="Error"}(o||(t.DocumentationLegacyCalloutType=o={}))},2123:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyGroupBehavior=void 0,function(e){e.group="Group",e.tabs="Tabs"}(o||(t.DocumentationLegacyGroupBehavior=o={}))},9896:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyHeadingType=void 0,function(e){e[e.h1=1]="h1",e[e.h2=2]="h2",e[e.h3=3]="h3"}(o||(t.DocumentationLegacyHeadingType=o={}))},7379:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyItemType=void 0,function(e){e.group="Group",e.page="Page"}(o||(t.DocumentationLegacyItemType=o={}))},1423:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageAssetType=void 0,function(e){e.image="image",e.figmaFrame="figmaFrame"}(o||(t.DocumentationLegacyPageAssetType=o={}))},1601:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockThemeType=void 0,function(e){e.override="Override",e.comparison="Comparison"}(o||(t.DocumentationLegacyPageBlockThemeType=o={}))},1846:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockType=void 0,function(e){e.text="Text",e.heading="Heading",e.code="Code",e.unorderedList="UnorderedList",e.orderedList="OrderedList",e.quote="Quote",e.callout="Callout",e.divider="Divider",e.image="Image",e.token="Token",e.tokenList="TokenList",e.tokenGroup="TokenGroup",e.shortcuts="Shortcuts",e.link="Link",e.figmaEmbed="FigmaEmbed",e.youtubeEmbed="YoutubeEmbed",e.storybookEmbed="StorybookEmbed",e.genericEmbed="Embed",e.figmaFrames="FigmaFrames",e.custom="Custom",e.renderCode="RenderCode",e.componentAssets="ComponentAssets",e.column="Column",e.columnItem="ColumnItem",e.tabs="Tabs",e.tabItem="TabItem",e.table="Table",e.tableCell="TableCell",e.tableRow="TableRow"}(o||(t.DocumentationLegacyPageBlockType=o={}))},1255:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameAlignment=void 0,function(e){e.frameHeight="FrameHeight",e.center="Center"}(o||(t.FrameAlignment=o={}))},3718:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameLayout=void 0,function(e){e.c8="C8",e.c7="C7",e.c6="C6",e.c5="C5",e.c4="C4",e.c3="C3",e.c2="C2",e.c1="C1",e.c175="C1_75"}(o||(t.FrameLayout=o={}))},1:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.GradientType=void 0,function(e){e.linear="Linear",e.radial="Radial",e.angular="Angular"}(o||(t.GradientType=o={}))},934:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.IconSet=void 0,function(e){e.checkCircle="CheckCircle",e.crossCircle="CrossCircle",e.alert="Alert"}(o||(t.IconSet=o={}))},2674:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.RichTextSpanAttributeType=void 0,function(e){e.bold="Bold",e.italic="Italic",e.link="Link",e.strikethrough="Strikethrough",e.code="Code"}(o||(t.RichTextSpanAttributeType=o={}))},9125:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ShadowType=void 0,function(e){e.drop="Drop",e.inner="Inner"}(o||(t.ShadowType=o={}))},4652:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.SourceType=void 0,function(e){e.figma="Figma",e.tokenStudio="TokenStudio",e.figmaVariablesPlugin="FigmaVariablesPlugin"}(o||(t.SourceType=o={}))},922:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextCase=void 0,function(e){e.original="Original",e.upper="Upper",e.lower="Lower",e.camel="Camel",e.smallCaps="SmallCaps"}(o||(t.TextCase=o={}))},7040:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoration=void 0,function(e){e.original="None",e.underline="Underline",e.strikethrough="Strikethrough"}(o||(t.TextDecoration=o={}))},3788:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DT_TOKEN_TYPES=t.tokenTypeIsReferencable=t.REFERENCABLE_TOKEN_TYPES=t.REPLACABLE_TOKEN_TYPES=t.tokenTypeIsNonPure=t.tokenTypeIsPure=t.PURE_TOKEN_TYPES=t.ALL_TOKEN_TYPES=t.MS_DIMENSION_TOKEN_TYPES=t.RAW_DIMENSION_TOKEN_TYPES=t.DIMENSION_TOKEN_TYPES=t.OPTION_TOKEN_TYPES=t.STRING_TOKEN_TYPES=t.TokenType=void 0,function(e){e.color="Color",e.typography="Typography",e.shadow="Shadow",e.border="Border",e.gradient="Gradient",e.blur="Blur",e.radius="BorderRadius",e.borderWidth="BorderWidth",e.duration="Duration",e.fontSize="FontSize",e.dimension="Dimension",e.letterSpacing="LetterSpacing",e.lineHeight="LineHeight",e.opacity="Opacity",e.paragraphSpacing="ParagraphSpacing",e.size="Size",e.space="Space",e.zIndex="ZIndex",e.textDecoration="TextDecoration",e.textCase="TextCase",e.visibility="Visibility",e.fontFamily="FontFamily",e.fontWeight="FontWeight",e.string="String",e.productCopy="ProductCopy"}(o||(t.TokenType=o={})),t.STRING_TOKEN_TYPES=[o.string,o.productCopy,o.fontFamily,o.fontWeight],t.OPTION_TOKEN_TYPES=[o.textCase,o.textDecoration,o.visibility],t.DIMENSION_TOKEN_TYPES=[o.dimension,o.size,o.space,o.opacity,o.fontSize,o.lineHeight,o.letterSpacing,o.paragraphSpacing,o.borderWidth,o.radius,o.duration,o.zIndex],t.RAW_DIMENSION_TOKEN_TYPES=[o.opacity,o.zIndex],t.MS_DIMENSION_TOKEN_TYPES=[o.duration],t.ALL_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES,o.color,o.gradient,o.border,o.radius,o.shadow,o.typography,o.blur],t.PURE_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.tokenTypeIsPure=e=>t.PURE_TOKEN_TYPES.includes(e),t.tokenTypeIsNonPure=e=>!(0,t.tokenTypeIsPure)(e),t.REPLACABLE_TOKEN_TYPES=[o.color,...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.REFERENCABLE_TOKEN_TYPES=[o.color,...t.DIMENSION_TOKEN_TYPES,o.fontFamily,o.fontWeight,o.textCase,o.textDecoration],t.tokenTypeIsReferencable=e=>t.REFERENCABLE_TOKEN_TYPES.includes(e),t.DT_TOKEN_TYPES=[o.color,o.shadow,o.gradient,o.typography,o.border,...t.DIMENSION_TOKEN_TYPES,o.fontFamily,o.fontWeight,o.string,...t.OPTION_TOKEN_TYPES]},8607:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.MS_UNITS=t.PX_UNITS=t.RAW_UNITS=t.LINE_HEIGHT_UNITS=t.SIZE_UNITS=t.Unit=void 0,function(e){e.pixels="Pixels",e.percent="Percent",e.rem="Rem",e.ms="Ms",e.raw="Raw"}(o||(t.Unit=o={})),t.SIZE_UNITS=[o.pixels,o.percent,o.rem],t.LINE_HEIGHT_UNITS=[o.pixels,o.percent,o.rem,o.raw],t.RAW_UNITS=[o.raw],t.PX_UNITS=[o.pixels],t.MS_UNITS=[o.ms]},9478:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.convertRemoteToUserRole=t.UserRole=void 0;const r=o(4379);var n;!function(e){e.owner="Owner",e.admin="Admin",e.creator="Creator",e.contributor="Contributor",e.billing="Billing",e.viewer="Viewer"}(n||(t.UserRole=n={})),t.convertRemoteToUserRole=e=>{switch(e){case"Owner":return n.owner;case"Admin":return n.admin;case"Creator":return n.creator;case"Contributor":return n.contributor;case"Billing":return n.billing;case"Viewer":return n.viewer;default:throw r.SupernovaError.fromMessage(`Unknown role: ${e}`)}}},6141:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.VisibilityType=void 0,function(e){e.visible="Visible",e.hidden="Hidden"}(o||(t.VisibilityType=o={}))},6298:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryAuthType=void 0,function(e){e.basic="Basic",e.bearer="Bearer"}(o||(t.WorkspaceNPMRegistryAuthType=o={}))},7968:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryType=void 0,function(e){e.npmJS="NPMJS",e.gitHub="GitHub",e.azureDevOps="AzureDevOps",e.artifactory="Artifactory",e.custom="Custom"}(o||(t.WorkspaceNPMRegistryType=o={}))},5503:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionPlanInterval=void 0,function(e){e.yearly="yearly",e.monthly="monthly"}(o||(t.WorkspaceSubscriptionPlanInterval=o={}))},4290:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionProductCode=void 0,function(e){e.free="free",e.team="team",e.teamTest="team_test",e.company="company",e.enterprise="enterprise"}(o||(t.WorkspaceSubscriptionProductCode=o={}))},3607:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionStatus=void 0,function(e){e.active="active",e.gracePeriod="gracePeriod",e.cancelled="cancelled",e.suspended="suspended"}(o||(t.WorkspaceSubscriptionStatus=o={}))},2802:(e,t)=>{var o,r;Object.defineProperty(t,"__esModule",{value:!0}),t.PulsarExecutor=t.OutputFileType=void 0,function(e){e.copyRemoteUrl="copyRemoteUrl",e.text="text",e.binary="binary"}(o||(t.OutputFileType=o={})),function(e){e.supernova="supernova",e.local="local"}(r||(t.PulsarExecutor=r={}))}},o={};function r(t){var n=o[t];if(void 0!==n)return n.exports;var i=o[t]={exports:{}};return e[t](i,i.exports,r),i.exports}var n={};(()=>{var e=n;Object.defineProperty(e,"__esModule",{value:!0}),e.TokenType=e.TextDecoration=e.TextCase=e.ShadowType=e.RichTextSpanAttributeType=e.GradientType=e.FrameLayout=e.FrameAlignment=e.IconSet=e.SourceType=e.DocsImageRefType=e.DocsLinkRefType=e.DocsSectionType=e.DocsEntityType=e.DocsEntityGroupBehavior=e.DocsBlockTextPropertyStyle=e.DocsBlockRichTextPropertyStyle=e.DocsBlockOptionColor=e.DocsBlockOptionRenderingStyle=e.DocsBlockItemVariantLayoutWidth=e.DocsBlockItemVariantLayoutType=e.DocsBlockItemPropertyType=e.DocsBlockItemPropertyTextStyle=e.DocsBlockItemPropertyRichTextStyle=e.DocsBlockItemPropertyOptionRenderingStyle=e.DocsBlockItemEntityType=e.DocsBlockImagePropertyAspectRatio=e.DocsBlockBehaviorSelectionType=e.DocsBlockBehaviorDataType=e.DocumentationLegacyPageBlockShortcutType=e.DocumentationLegacyPageBlockThemeType=e.DocumentationLegacyPageBlockType=e.DocumentationLegacyPageAssetType=e.DocumentationLegacyItemType=e.DocumentationLegacyHeadingType=e.DocumentationLegacyGroupBehavior=e.DocumentationLegacyCalloutType=e.BorderStyle=e.BorderPosition=e.BlurType=e.AssetScaleType=e.AssetScale=e.AssetFormat=e.Alignment=e.ALL_TOKEN_TYPES=e.ALL_BORDER_STYLES=e.ALL_BORDER_POSITIONS=e.OPTION_TOKEN_TYPES=e.STRING_TOKEN_TYPES=e.DIMENSION_TOKEN_TYPES=void 0,e.PulsarExecutor=e.OutputFileType=e.CustomDomainState=e.CustomDomainErrorCode=e.ImportWarningType=e.WorkspaceNPMRegistryType=e.WorkspaceNPMRegistryAuthType=e.WorkspaceSubscriptionStatus=e.WorkspaceSubscriptionProductCode=e.WorkspaceSubscriptionPlanInterval=e.VisibilityType=e.UserRole=e.Unit=void 0;var t=r(3788);Object.defineProperty(e,"DIMENSION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.DIMENSION_TOKEN_TYPES}}),Object.defineProperty(e,"STRING_TOKEN_TYPES",{enumerable:!0,get:function(){return t.STRING_TOKEN_TYPES}}),Object.defineProperty(e,"OPTION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.OPTION_TOKEN_TYPES}});var o=r(1160);Object.defineProperty(e,"ALL_BORDER_POSITIONS",{enumerable:!0,get:function(){return o.ALL_BORDER_POSITIONS}});var i=r(4546);Object.defineProperty(e,"ALL_BORDER_STYLES",{enumerable:!0,get:function(){return i.ALL_BORDER_STYLES}});var a=r(3788);Object.defineProperty(e,"ALL_TOKEN_TYPES",{enumerable:!0,get:function(){return a.ALL_TOKEN_TYPES}});var l=r(7476);Object.defineProperty(e,"Alignment",{enumerable:!0,get:function(){return l.Alignment}});var s=r(8738);Object.defineProperty(e,"AssetFormat",{enumerable:!0,get:function(){return s.AssetFormat}});var c=r(915);Object.defineProperty(e,"AssetScale",{enumerable:!0,get:function(){return c.AssetScale}});var u=r(899);Object.defineProperty(e,"AssetScaleType",{enumerable:!0,get:function(){return u.AssetScaleType}});var p=r(6192);Object.defineProperty(e,"BlurType",{enumerable:!0,get:function(){return p.BlurType}});var d=r(1160);Object.defineProperty(e,"BorderPosition",{enumerable:!0,get:function(){return d.BorderPosition}});var m=r(4546);Object.defineProperty(e,"BorderStyle",{enumerable:!0,get:function(){return m.BorderStyle}});var y=r(5102);Object.defineProperty(e,"DocumentationLegacyCalloutType",{enumerable:!0,get:function(){return y.DocumentationLegacyCalloutType}});var T=r(2123);Object.defineProperty(e,"DocumentationLegacyGroupBehavior",{enumerable:!0,get:function(){return T.DocumentationLegacyGroupBehavior}});var f=r(9896);Object.defineProperty(e,"DocumentationLegacyHeadingType",{enumerable:!0,get:function(){return f.DocumentationLegacyHeadingType}});var g=r(7379);Object.defineProperty(e,"DocumentationLegacyItemType",{enumerable:!0,get:function(){return g.DocumentationLegacyItemType}});var b=r(1423);Object.defineProperty(e,"DocumentationLegacyPageAssetType",{enumerable:!0,get:function(){return b.DocumentationLegacyPageAssetType}});var h=r(1846);Object.defineProperty(e,"DocumentationLegacyPageBlockType",{enumerable:!0,get:function(){return h.DocumentationLegacyPageBlockType}});var S=r(1601);Object.defineProperty(e,"DocumentationLegacyPageBlockThemeType",{enumerable:!0,get:function(){return S.DocumentationLegacyPageBlockThemeType}});var v=r(2657);Object.defineProperty(e,"DocumentationLegacyPageBlockShortcutType",{enumerable:!0,get:function(){return v.DocumentationLegacyPageBlockShortcutType}});var P=r(5651);Object.defineProperty(e,"DocsBlockBehaviorDataType",{enumerable:!0,get:function(){return P.DocsBlockBehaviorDataType}});var k=r(3733);Object.defineProperty(e,"DocsBlockBehaviorSelectionType",{enumerable:!0,get:function(){return k.DocsBlockBehaviorSelectionType}});var O=r(8890);Object.defineProperty(e,"DocsBlockImagePropertyAspectRatio",{enumerable:!0,get:function(){return O.DocsBlockImagePropertyAspectRatio}});var C=r(9377);Object.defineProperty(e,"DocsBlockItemEntityType",{enumerable:!0,get:function(){return C.DocsBlockItemEntityType}});var _=r(5883);Object.defineProperty(e,"DocsBlockItemPropertyOptionRenderingStyle",{enumerable:!0,get:function(){return _.DocsBlockItemPropertyOptionRenderingStyle}});var D=r(8061);Object.defineProperty(e,"DocsBlockItemPropertyRichTextStyle",{enumerable:!0,get:function(){return D.DocsBlockItemPropertyRichTextStyle}});var I=r(7479);Object.defineProperty(e,"DocsBlockItemPropertyTextStyle",{enumerable:!0,get:function(){return I.DocsBlockItemPropertyTextStyle}});var E=r(6839);Object.defineProperty(e,"DocsBlockItemPropertyType",{enumerable:!0,get:function(){return E.DocsBlockItemPropertyType}});var x=r(8095);Object.defineProperty(e,"DocsBlockItemVariantLayoutType",{enumerable:!0,get:function(){return x.DocsBlockItemVariantLayoutType}});var N=r(7291);Object.defineProperty(e,"DocsBlockItemVariantLayoutWidth",{enumerable:!0,get:function(){return N.DocsBlockItemVariantLayoutWidth}});var R=r(5963);Object.defineProperty(e,"DocsBlockOptionRenderingStyle",{enumerable:!0,get:function(){return R.DocsBlockOptionRenderingStyle}});var B=r(9133);Object.defineProperty(e,"DocsBlockOptionColor",{enumerable:!0,get:function(){return B.DocsBlockOptionColor}});var j=r(6644);Object.defineProperty(e,"DocsBlockRichTextPropertyStyle",{enumerable:!0,get:function(){return j.DocsBlockRichTextPropertyStyle}});var L=r(306);Object.defineProperty(e,"DocsBlockTextPropertyStyle",{enumerable:!0,get:function(){return L.DocsBlockTextPropertyStyle}});var M=r(4068);Object.defineProperty(e,"DocsEntityGroupBehavior",{enumerable:!0,get:function(){return M.DocsEntityGroupBehavior}});var F=r(1233);Object.defineProperty(e,"DocsEntityType",{enumerable:!0,get:function(){return F.DocsEntityType}});var w=r(7971);Object.defineProperty(e,"DocsSectionType",{enumerable:!0,get:function(){return w.DocsSectionType}});var A=r(5673);Object.defineProperty(e,"DocsLinkRefType",{enumerable:!0,get:function(){return A.DocsLinkRefType}});var $=r(9932);Object.defineProperty(e,"DocsImageRefType",{enumerable:!0,get:function(){return $.DocsImageRefType}});var H=r(4652);Object.defineProperty(e,"SourceType",{enumerable:!0,get:function(){return H.SourceType}});var U=r(934);Object.defineProperty(e,"IconSet",{enumerable:!0,get:function(){return U.IconSet}});var W=r(1255);Object.defineProperty(e,"FrameAlignment",{enumerable:!0,get:function(){return W.FrameAlignment}});var G=r(3718);Object.defineProperty(e,"FrameLayout",{enumerable:!0,get:function(){return G.FrameLayout}});var V=r(1);Object.defineProperty(e,"GradientType",{enumerable:!0,get:function(){return V.GradientType}});var Y=r(2674);Object.defineProperty(e,"RichTextSpanAttributeType",{enumerable:!0,get:function(){return Y.RichTextSpanAttributeType}});var K=r(9125);Object.defineProperty(e,"ShadowType",{enumerable:!0,get:function(){return K.ShadowType}});var z=r(922);Object.defineProperty(e,"TextCase",{enumerable:!0,get:function(){return z.TextCase}});var q=r(7040);Object.defineProperty(e,"TextDecoration",{enumerable:!0,get:function(){return q.TextDecoration}});var Z=r(3788);Object.defineProperty(e,"TokenType",{enumerable:!0,get:function(){return Z.TokenType}});var J=r(8607);Object.defineProperty(e,"Unit",{enumerable:!0,get:function(){return J.Unit}});var X=r(9478);Object.defineProperty(e,"UserRole",{enumerable:!0,get:function(){return X.UserRole}});var Q=r(6141);Object.defineProperty(e,"VisibilityType",{enumerable:!0,get:function(){return Q.VisibilityType}});var ee=r(5503);Object.defineProperty(e,"WorkspaceSubscriptionPlanInterval",{enumerable:!0,get:function(){return ee.WorkspaceSubscriptionPlanInterval}});var te=r(4290);Object.defineProperty(e,"WorkspaceSubscriptionProductCode",{enumerable:!0,get:function(){return te.WorkspaceSubscriptionProductCode}});var oe=r(3607);Object.defineProperty(e,"WorkspaceSubscriptionStatus",{enumerable:!0,get:function(){return oe.WorkspaceSubscriptionStatus}});var re=r(6298);Object.defineProperty(e,"WorkspaceNPMRegistryAuthType",{enumerable:!0,get:function(){return re.WorkspaceNPMRegistryAuthType}});var ne=r(7968);Object.defineProperty(e,"WorkspaceNPMRegistryType",{enumerable:!0,get:function(){return ne.WorkspaceNPMRegistryType}});var ie=r(8042);Object.defineProperty(e,"ImportWarningType",{enumerable:!0,get:function(){return ie.ImportWarningType}});var ae=r(5695);Object.defineProperty(e,"CustomDomainErrorCode",{enumerable:!0,get:function(){return ae.CustomDomainErrorCode}});var le=r(7737);Object.defineProperty(e,"CustomDomainState",{enumerable:!0,get:function(){return le.CustomDomainState}});var se=r(2802);Object.defineProperty(e,"OutputFileType",{enumerable:!0,get:function(){return se.OutputFileType}}),Object.defineProperty(e,"PulsarExecutor",{enumerable:!0,get:function(){return se.PulsarExecutor}})})();var i=t;for(var a in n)i[a]=n[a];n.__esModule&&Object.defineProperty(i,"__esModule",{value:!0})})()},"./config.ts":
/*!*******************!*\
  !*** ./config.ts ***!
  \*******************/(e,t)=>{"use strict";var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ThemeExportStyle=void 0,function(e){e.ApplyDirectly="applyDirectly",e.SeparateFiles="separateFiles",e.MergedTheme="mergedTheme"}(o||(t.ThemeExportStyle=o={}))},"./src/constants/defaults.ts":
/*!***********************************!*\
  !*** ./src/constants/defaults.ts ***!
  \***********************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TAILWIND_ALLOWED_CUSTOMIZATION=t.TAILWIND_TOKEN_PREFIXES=void 0;const r=o(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js");t.TAILWIND_TOKEN_PREFIXES={Color:"color",Typography:"text",Dimension:"size",Size:"size",Space:"spacing",Opacity:"opacity",FontSize:"text",LineHeight:"leading",LetterSpacing:"tracking",ParagraphSpacing:"paragraph",BorderWidth:"border",BorderRadius:"radius",Duration:"duration",ZIndex:"z",Shadow:"shadow",Border:"border",Gradient:"gradient",String:"string",ProductCopy:"product-copy",FontFamily:"font",FontWeight:"font-weight",TextCase:"text-case",TextDecoration:"text-decoration",Visibility:"visibility",Blur:"blur"},t.TAILWIND_ALLOWED_CUSTOMIZATION=[r.TokenType.color,r.TokenType.space,r.TokenType.size,r.TokenType.fontSize,r.TokenType.lineHeight,r.TokenType.letterSpacing,r.TokenType.radius,r.TokenType.borderWidth,r.TokenType.fontFamily,r.TokenType.fontWeight,r.TokenType.shadow,r.TokenType.opacity,r.TokenType.duration,r.TokenType.zIndex,r.TokenType.blur,r.TokenType.typography,r.TokenType.border]},"./src/content/token.ts":
/*!******************************!*\
  !*** ./src/content/token.ts ***!
  \******************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getTokenPrefix=l,t.isAllowedTokenType=s,t.convertedToken=function(e,t,o){if(!s(e.tokenType))return null;let a=c(e,o);const u=r.CSSHelper.tokenToCSS(e,t,{allowReferences:i.exportConfiguration.useReferences,decimals:i.exportConfiguration.colorPrecision,colorFormat:i.exportConfiguration.colorFormat,forceRemUnit:i.exportConfiguration.forceRemUnit,remBase:i.exportConfiguration.remBase,tokenToVariableRef:e=>s(e.tokenType)?`var(--${c(e,o)})`:r.CSSHelper.tokenToCSS(e,t,{allowReferences:!1,decimals:i.exportConfiguration.colorPrecision,colorFormat:i.exportConfiguration.colorFormat,forceRemUnit:i.exportConfiguration.forceRemUnit,remBase:i.exportConfiguration.remBase,tokenToVariableRef:()=>"",valueTransformer:void 0}),valueTransformer:(e,t)=>{if(t.tokenType===n.TokenType.blur){const t=e.match(/^blur\((.*)\)$/);return t?t[1]:e}}}),p=r.GeneralHelper.indent(i.exportConfiguration.indent);let d="";const m=[...e.tokenPath||[],e.name].join("/");i.exportConfiguration.debug&&(d+=`${p}/* Path: ${m} */\n`,d+=`${p}/* Token: ${JSON.stringify({name:e.name,type:e.tokenType,path:e.tokenPath,prefix:l(e.tokenType)})} */\n`);i.exportConfiguration.showDescriptions&&e.description&&(d+=`${p}/* ${e.description.trim()} */\n`);if(e.tokenType===n.TokenType.blur){const t=m.toLowerCase().includes("background")?"backdrop-blur":"blur"===e.name.toLowerCase()?"blur-default":`blur-${e.name}`;a=r.NamingHelper.codeSafeVariableName(t,r.StringCase.kebabCase)}return d+=`${p}--${a}: ${u};`,d},t.tokenVariableName=c;const r=o(/*! @supernovaio/export-utils */"../../utils/dist/index.js"),n=o(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),i=o(/*! .. */"./src/index.ts"),a=o(/*! ../constants/defaults */"./src/constants/defaults.ts");function l(e){return a.TAILWIND_TOKEN_PREFIXES[e]}function s(e){return a.TAILWIND_ALLOWED_CUSTOMIZATION.includes(e)}function c(e,t){let o=l(e.tokenType);if(i.exportConfiguration.debug&&console.log("Token:",{name:e.name,type:e.tokenType,path:e.tokenPath,prefix:o,findReplace:i.exportConfiguration.findReplace}),i.exportConfiguration.useColorUtilityPrefixes&&e.tokenType===n.TokenType.color){const n=t.find((t=>t.id===e.parentGroupId)),a=e.tokenPath||[],l=[...a,e.name].join("/").toLowerCase();i.exportConfiguration.debug&&console.log("Color token path:",{tokenPath:a,fullPath:l,findReplace:i.exportConfiguration.findReplace});for(const[t,o]of Object.entries(i.exportConfiguration.colorUtilityPrefixes)){const n=o.split(",").map((e=>e.trim().toLowerCase())),s=n.find((e=>l.includes(e)));if(s){i.exportConfiguration.debug&&console.log("Color utility pattern match:",{utilityName:t,patternString:o,matchingPattern:s,patterns:n,fullPath:l});const c=a.findIndex((e=>e.toLowerCase().includes(s))),u=c>=0?a.slice(c+1):a,p=[...u,e.name],d=p.join("-").toLowerCase().trim().replace(/^[-\s]+|[-\s]+$/g,"");return i.exportConfiguration.debug&&console.log("Color utility match:",{utilityName:t,matchingPattern:s,patternIndex:c,remainingPath:u,segments:p,cleanName:d}),r.NamingHelper.codeSafeVariableName(`${t}-color-${d}`,r.StringCase.kebabCase,i.exportConfiguration.findReplace)}}const s=r.NamingHelper.codeSafeVariableNameForToken(e,r.StringCase.kebabCase,n||null,o,i.exportConfiguration.findReplace);return i.exportConfiguration.debug&&console.log("Standard color naming:",{name:s,token:e,parent:n,prefix:o,findReplace:i.exportConfiguration.findReplace}),s}const a=t.find((t=>t.id===e.parentGroupId)),s=r.NamingHelper.codeSafeVariableNameForToken(e,r.StringCase.kebabCase,a||null,o,i.exportConfiguration.findReplace);return i.exportConfiguration.debug&&console.log("Non-color token naming:",{name:s,token:e,parent:a,prefix:o,findReplace:i.exportConfiguration.findReplace}),s}},"./src/files/tailwind-file.ts":
/*!************************************!*\
  !*** ./src/files/tailwind-file.ts ***!
  \************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.styleOutputFile=function(e,t,o="",a){if(!n.exportConfiguration.generateEmptyFiles&&0===e.length)return null;let l=e;if(o&&a&&n.exportConfiguration.exportOnlyThemedTokens&&(l=r.ThemeHelper.filterThemedTokens(e,a),0===l.length))return null;if(l=l.filter((e=>(0,i.isAllowedTokenType)(e.tokenType))),0===l.length)return null;const s=new Map;l.forEach((e=>{const t=e.tokenType;s.has(t)||s.set(t,[]),s.get(t).push(e)}));const c=new Map(e.map((e=>[e.id,e])));let u=n.exportConfiguration.globalPrefix?`@import "tailwindcss" prefix(${n.exportConfiguration.globalPrefix});\n\n`:'@import "tailwindcss";\n\n';if(n.exportConfiguration.debug){if(u+="/* Debug Information\n",u+=" * Exporter: Tailwind CSS by Supernova\n",u+=` * Theme: ${o||"Base"}\n`,u+=` * Token Count: ${l.length}\n`,u+=` * Token Types: ${Array.from(s.keys()).join(", ")}\n`,u+=` * Color Format: ${n.exportConfiguration.colorFormat}\n`,u+=` * Prefix: ${n.exportConfiguration.globalPrefix||"None"}\n`,u+=` * Find/Replace Rules: ${JSON.stringify(n.exportConfiguration.findReplace)}\n`,n.exportConfiguration.useColorUtilityPrefixes){u+=" * Color Utility Prefixes:\n";for(const[e,t]of Object.entries(n.exportConfiguration.colorUtilityPrefixes)){u+=`    - ${e}: ${t.split(",").map((e=>e.trim())).join(", ")}\n`}}else u+=" * Color Utility Prefixes: Disabled\n";u+=` * Generated: ${(new Date).toISOString()}\n`,u+=" */\n\n"}let p="";const d=r.GeneralHelper.indent(n.exportConfiguration.indent),m=[];n.exportConfiguration.disableAnimateDefaults&&m.push("--animate-*: initial;");n.exportConfiguration.disableBlurDefaults&&m.push("--blur-*: initial;");n.exportConfiguration.disableBorderRadiusDefaults&&m.push("--radius-*: initial;");n.exportConfiguration.disableBreakpointDefaults&&m.push("--breakpoint-*: initial;");n.exportConfiguration.disableColorDefaults&&m.push("--color-*: initial;");n.exportConfiguration.disableContainerDefaults&&m.push("--container-*: initial;");n.exportConfiguration.disableDropShadowDefaults&&m.push("--drop-shadow-*: initial;");n.exportConfiguration.disableFontDefaults&&m.push("--font-*: initial;");n.exportConfiguration.disableFontWeightDefaults&&m.push("--font-weight-*: initial;");n.exportConfiguration.disableInsetDefaults&&m.push("--inset-*: initial;");n.exportConfiguration.disableLeadingDefaults&&m.push("--leading-*: initial;");n.exportConfiguration.disablePerspectiveDefaults&&m.push("--perspective-*: initial;");n.exportConfiguration.disableShadowDefaults&&m.push("--shadow-*: initial;");n.exportConfiguration.disableSpacingDefaults&&m.push("--spacing-*: initial;");n.exportConfiguration.disableTextDefaults&&m.push("--text-*: initial;");n.exportConfiguration.disableTrackingDefaults&&m.push("--tracking-*: initial;");m.length>0&&(p+=`\n${d}/* Reset default values */\n${d}${m.join(`\n${d}`)}\n`);s.forEach(((e,o)=>{p+=`\n${d}/* ${o} */\n`,n.exportConfiguration.debug&&(p+=`${d}/* ${e.length} ${o} tokens */\n`);const r=e.map((e=>(0,i.convertedToken)(e,c,t))).filter((e=>null!==e)).join("\n");p+=r+"\n"})),u+=`@theme {\n${p}}`,n.exportConfiguration.showGeneratedFileDisclaimer&&(u=r.GeneralHelper.addDisclaimer(n.exportConfiguration.disclaimer,u));const y=o?`tailwind.${o}.css`:"tailwind.css";return r.FileHelper.createTextFile({relativePath:"./",fileName:y,content:u})};const r=o(/*! @supernovaio/export-utils */"../../utils/dist/index.js"),n=o(/*! .. */"./src/index.ts"),i=o(/*! ../content/token */"./src/content/token.ts")},"./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.exportConfiguration=void 0,t.generateFiles=function(e,t,o=[]){const r=[],a=(0,n.styleOutputFile)(e,t);a&&r.push(a);return o.forEach((o=>{const a=(0,n.styleOutputFile)(e,t,i.ThemeHelper.getThemeIdentifier(o),o);a&&r.push(a)})),r};const r=o(/*! ../config */"./config.ts"),n=o(/*! ./files/tailwind-file */"./src/files/tailwind-file.ts"),i=o(/*! @supernovaio/export-utils */"../../utils/dist/index.js");function a(e){return e.filter((e=>null!==e))}t.exportConfiguration=Pulsar.exportConfig(),Pulsar.export((async(e,o)=>{const l={designSystemId:o.dsId,versionId:o.versionId};let s=await e.tokens.getTokens(l),c=await e.tokens.getTokenGroups(l);if(o.brandId){const t=(await e.brands.getBrands(l)).find((e=>e.id===o.brandId||e.idInVersion===o.brandId));if(!t)throw new Error(`Unable to find brand ${o.brandId}.`);s=s.filter((e=>e.brandId===t.id)),c=c.filter((e=>e.brandId===t.id))}if(o.themeIds&&o.themeIds.length>0){const u=await e.tokens.getTokenThemes(l),p=o.themeIds.map((e=>{const t=u.find((t=>t.id===e||t.idInVersion===e));if(!t)throw new Error(`Unable to find theme ${e}.`);return t}));switch(t.exportConfiguration.exportThemesAs){case r.ThemeExportStyle.ApplyDirectly:return s=e.tokens.computeTokensByApplyingThemes(s,s,p),a([(0,n.styleOutputFile)(s,c)]);case r.ThemeExportStyle.SeparateFiles:const o=p.flatMap((t=>{const o=e.tokens.computeTokensByApplyingThemes(s,s,[t]);return(0,n.styleOutputFile)(o,c,i.ThemeHelper.getThemeIdentifier(t),t)}));return a([t.exportConfiguration.exportBaseValues?(0,n.styleOutputFile)(s,c):null,...o]);case r.ThemeExportStyle.MergedTheme:const l=t.exportConfiguration.exportBaseValues?(0,n.styleOutputFile)(s,c):null,u=e.tokens.computeTokensByApplyingThemes(s,s,p);return a([l,(0,n.styleOutputFile)(u,c,"themed",p[0])])}}return a([t.exportConfiguration.exportBaseValues?(0,n.styleOutputFile)(s,c):null])}))},"../../utils/dist/enums/ColorFormat.js":
/*!*********************************************!*\
  !*** ../../utils/dist/enums/ColorFormat.js ***!
  \*********************************************/(e,t)=>{"use strict";var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ColorFormat=void 0,function(e){e.rgb="rgb",e.rgba="rgba",e.smartRgba="smartRgba",e.hex6="hex6",e.hex8="hex8",e.hashHex6="hashHex6",e.hashHex8="hashHex8",e.smartHashHex="smartHashHex",e.smartHex="smartHex",e.hsl="hsl",e.hsla="hsla",e.smartHsla="smartHsla",e.smartUIColor="smartUIColor",e.oklch="oklch",e.oklcha="oklcha",e.smartOklch="smartOklch"}(o||(t.ColorFormat=o={}))},"../../utils/dist/enums/StringCase.js":
/*!********************************************!*\
  !*** ../../utils/dist/enums/StringCase.js ***!
  \********************************************/(e,t)=>{"use strict";var o;Object.defineProperty(t,"__esModule",{value:!0}),t.StringCase=void 0,function(e){e.camelCase="camelCase",e.capitalCase="capitalCase",e.constantCase="constantCase",e.dotCase="dotCase",e.trainCase="trainCase",e.noCase="noCase",e.kebabCase="kebabCase",e.pascalCase="pascalCase",e.pathCase="pathCase",e.sentenceCase="sentenceCase",e.snakeCase="snakeCase",e.flatCase="flatCase"}(o||(t.StringCase=o={}))},"../../utils/dist/helpers/CSSHelper.js":
/*!*********************************************!*\
  !*** ../../utils/dist/helpers/CSSHelper.js ***!
  \*********************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CSSHelper=void 0;const r=o(/*! @supernovaio/sdk-exporters */"../../utils/node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),n=o(/*! ./TokenHelper */"../../utils/dist/helpers/TokenHelper.js"),i=o(/*! ./ColorHelper */"../../utils/dist/helpers/ColorHelper.js");t.CSSHelper=class{static tokenToCSS(e,t,o){let n;switch(e.tokenType){case r.TokenType.color:n=this.colorTokenValueToCSS(e.value,t,o);break;case r.TokenType.border:n=this.borderTokenValueToCSS(e.value,t,o);break;case r.TokenType.gradient:n=this.gradientTokenValueToCSS(e.value,t,o);break;case r.TokenType.dimension:case r.TokenType.size:case r.TokenType.space:case r.TokenType.opacity:case r.TokenType.fontSize:case r.TokenType.lineHeight:case r.TokenType.letterSpacing:case r.TokenType.paragraphSpacing:case r.TokenType.borderWidth:case r.TokenType.radius:case r.TokenType.duration:case r.TokenType.zIndex:n=this.dimensionTokenValueToCSS(e.value,t,o);break;case r.TokenType.shadow:n=this.shadowTokenValueToCSS(e.value,t,o);break;case r.TokenType.fontWeight:n=this.fontWeightTokenValueToCSS(e.value,t,o);break;case r.TokenType.fontFamily:case r.TokenType.productCopy:case r.TokenType.string:n=this.stringTokenValueToCSS(e.value,t,o);break;case r.TokenType.textCase:case r.TokenType.textDecoration:case r.TokenType.visibility:n=this.optionTokenValueToCSS(e.value,t,o,e.tokenType);break;case r.TokenType.blur:n=this.blurTokenValueToCSS(e.value,t,o);break;case r.TokenType.typography:n=this.typographyTokenValueToCSS(e.value,t,o);break;default:throw new r.UnreachableCaseError(e.tokenType,"Unsupported token type for transformation to CSS:")}if(o.valueTransformer){const t=o.valueTransformer(n,e);if(void 0!==t)return t}return n}static colorTokenValueToCSS(e,t,o){return i.ColorHelper.formattedColorOrVariableName(e,t,o)}static borderTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(r)return o.tokenToVariableRef(r);const i=this.dimensionTokenValueToCSS(e.width,t,o),a=this.borderStyleToCSS(e.style),l=this.colorTokenValueToCSS(e.color,t,o);this.borderPositionToCSS(e.position);return`${i} ${a} ${l}`}static gradientTokenValueToCSS(e,t,o){return e.map((e=>this.gradientLayerToCSS(e,t,o))).join(", ")}static gradientLayerToCSS(e,t,o){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(a)return o.tokenToVariableRef(a);const l=i.ColorHelper.roundToDecimals(e.to.x,o.decimals)-i.ColorHelper.roundToDecimals(e.from.x,o.decimals),s=i.ColorHelper.roundToDecimals(e.to.y,o.decimals)-i.ColorHelper.roundToDecimals(e.from.y,o.decimals),c=Math.atan2(s,l)*(180/Math.PI),u=()=>l>=0&&s>0||l>0&&s<=0||l<=0&&s<0?90+c:c-270;let p="";switch(e.type){case r.GradientType.linear:p=`linear-gradient(${u()}deg, `;break;case r.GradientType.radial:p="radial-gradient(circle, ";break;case r.GradientType.angular:p="conic-gradient(";break;default:p=`linear-gradient(${u()}deg, `}return`${p}${e.stops.map((e=>`${this.colorTokenValueToCSS(e.color,t,o)} ${i.ColorHelper.roundToDecimals(100*e.position,o.decimals)}%`)).join(", ")})`}static dimensionTokenValueToCSS(e,t,o){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(a)return o.tokenToVariableRef(a);if(o.forceRemUnit&&e.unit===r.Unit.pixels){const t=o.remBase||16,r=e.measure/t;return`${i.ColorHelper.roundToDecimals(r,o.decimals)}rem`}return`${i.ColorHelper.roundToDecimals(e.measure,o.decimals)}${this.unitToCSS(e.unit)}`}static shadowTokenValueToCSS(e,t,o){return e.map((e=>this.shadowLayerToCSS(e,t,o))).join(", ")}static shadowLayerToCSS(e,t,o){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(a)return o.tokenToVariableRef(a);const l=e=>{if(o.forceRemUnit){const t=e/(o.remBase||16);return`${i.ColorHelper.roundToDecimals(t,o.decimals)}rem`}return`${e}px`};return`${e.type===r.ShadowType.inner?"inset ":""}${l(e.x)} ${l(e.y)} ${l(e.radius)} ${l(e.spread)} ${this.colorTokenValueToCSS({...e.color,...e.opacity&&{opacity:e.opacity}},t,o)}`}static fontWeightTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(r)return o.tokenToVariableRef(r);return`${this.normalizeTextWeight(e.text)}`}static normalizeTextWeight(e){const t=e.toLowerCase().trim(),o=parseInt(t);if(!isNaN(o))return o;switch(t){case"thin":case"hairline":return 100;case"extra light":case"extralight":case"ultra light":case"ultralight":return 200;case"light":return 300;case"normal":case"regular":case"book":default:return 400;case"medium":return 500;case"semi bold":case"semibold":case"demi bold":case"demibold":return 600;case"bold":return 700;case"extra bold":case"extrabold":case"ultra bold":case"ultrabold":return 800;case"black":case"heavy":return 900}}static stringTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);return r?o.tokenToVariableRef(r):`"${e.text}"`}static optionTokenValueToCSS(e,t,o,i){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);return a?o.tokenToVariableRef(a):i===r.TokenType.textCase?this.textCaseToCSS(e.value):i===r.TokenType.textDecoration?this.textDecorationToCSS(e.value):e.value}static blurTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);return r?o.tokenToVariableRef(r):`blur(${this.dimensionTokenValueToCSS(e.radius,t,o)})`}static typographyTokenValueToCSS(e,t,o){const i=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(i)return o.tokenToVariableRef(i);const a=(0,n.sureOptionalReference)(e.fontFamily.referencedTokenId,t,o.allowReferences),l=(0,n.sureOptionalReference)(e.fontWeight.referencedTokenId,t,o.allowReferences),s=(0,n.sureOptionalReference)(e.textDecoration.referencedTokenId,t,o.allowReferences),c=(0,n.sureOptionalReference)(e.textCase.referencedTokenId,t,o.allowReferences),u={fontFamily:a?o.tokenToVariableRef(a):e.fontFamily.text,fontWeight:l?o.tokenToVariableRef(l):this.normalizeTextWeight(e.fontWeight.text),textDecoration:s?o.tokenToVariableRef(s):e.textDecoration.value===r.TextDecoration.original?this.textDecorationToCSS(e.textDecoration.value):void 0,textCase:c?o.tokenToVariableRef(c):e.textCase.value===r.TextCase.original?this.textCaseToCSS(e.textCase.value):void 0,caps:e.textCase.value===r.TextCase.smallCaps,fontSize:this.dimensionTokenValueToCSS(e.fontSize,t,o),lineHeight:e.lineHeight?this.dimensionTokenValueToCSS(e.lineHeight,t,o):void 0},p=u.fontSize;return`${u.caps?"small-caps ":""}${u.fontWeight} ${u.lineHeight?`${p}/${u.lineHeight}`:p} ${a?u.fontFamily:`"${u.fontFamily}"`}`}static borderStyleToCSS(e){switch(e){case r.BorderStyle.dashed:return"dashed";case r.BorderStyle.dotted:return"dotted";case r.BorderStyle.solid:return"solid";case r.BorderStyle.groove:return"groove";default:return"solid"}}static borderPositionToCSS(e){switch(e){case r.BorderPosition.center:return"center";case r.BorderPosition.inside:return"inside";case r.BorderPosition.outside:default:return"outside"}}static unitToCSS(e){switch(e){case r.Unit.percent:return"%";case r.Unit.pixels:return"px";case r.Unit.rem:return"rem";case r.Unit.raw:return"";case r.Unit.ms:return"ms";default:return"px"}}static textCaseToCSS(e){switch(e){case r.TextCase.original:return"none";case r.TextCase.upper:return"uppercase";case r.TextCase.lower:return"lowercase";case r.TextCase.camel:case r.TextCase.smallCaps:return"capitalize"}}static textDecorationToCSS(e){switch(e){case r.TextDecoration.original:return"none";case r.TextDecoration.underline:return"underline";case r.TextDecoration.strikethrough:return"line-through"}}}},"../../utils/dist/helpers/ColorHelper.js":
/*!***********************************************!*\
  !*** ../../utils/dist/helpers/ColorHelper.js ***!
  \***********************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ColorHelper=void 0;const r=o(/*! ../enums/ColorFormat */"../../utils/dist/enums/ColorFormat.js"),n=o(/*! ./TokenHelper */"../../utils/dist/helpers/TokenHelper.js");class i{static formattedColorOrVariableName(e,t,o){let i,a=null,l=null;const s=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(s)i=o.tokenToVariableRef(s);else{const r=(0,n.sureOptionalReference)(e.color.referencedTokenId,t,o.allowReferences);r&&(a=o.tokenToVariableRef(r));const i=(0,n.sureOptionalReference)(e.opacity.referencedTokenId,t,o.allowReferences);i&&(l=o.tokenToVariableRef(i))}if(i)return i;if(!i&&!a&&!l)return this.formattedColor(e,o.colorFormat,o.decimals);switch(o.colorFormat){case r.ColorFormat.rgb:case r.ColorFormat.rgba:case r.ColorFormat.smartRgba:return this.colorToRgb(o.colorFormat,this.normalizedIntColor(e),e.opacity.measure,o.decimals,a,l);default:return this.formattedColor(e,o.colorFormat,o.decimals)}}static formattedColor(e,t,o=3){switch(t){case r.ColorFormat.hex6:case r.ColorFormat.hex8:case r.ColorFormat.hashHex6:case r.ColorFormat.hashHex8:case r.ColorFormat.smartHex:case r.ColorFormat.smartHashHex:return this.colorToHex(t,this.normalizedIntColor(e),e.opacity.measure);case r.ColorFormat.rgb:case r.ColorFormat.rgba:case r.ColorFormat.smartRgba:return this.colorToRgb(t,this.normalizedIntColor(e),e.opacity.measure,o,null,null);case r.ColorFormat.hsl:case r.ColorFormat.hsla:case r.ColorFormat.smartHsla:return this.colorToHsl(t,this.normalizedFractionalColor(e),e.opacity.measure,o);case r.ColorFormat.smartUIColor:return this.colorToUIColor(this.normalizedIntColor(e),e.opacity.measure,o);case r.ColorFormat.oklch:case r.ColorFormat.oklcha:case r.ColorFormat.smartOklch:return this.colorToOklch(t,this.normalizedIntColor(e),e.opacity.measure,o);default:return this.colorToHex(r.ColorFormat.smartHashHex,this.normalizedIntColor(e),e.opacity.measure)}}static colorToRgb(e,t,o,n,i,a){let l;return l=e===r.ColorFormat.rgba||e===r.ColorFormat.smartRgba&&o<1?`rgba(${i||`${t.r}, ${t.g}, ${t.b}`}, ${a||this.roundToDecimals(o,n)})`:`rgb(${i||`${t.r}, ${t.g}, ${t.b}`})`,l}static colorToHex(e,t,o){let n=`${this.pHex(t.r)}${this.pHex(t.g)}${this.pHex(t.b)}`;return(e===r.ColorFormat.hex8||e===r.ColorFormat.hashHex8||e===r.ColorFormat.smartHex&&o<1||e===r.ColorFormat.smartHashHex&&o<1)&&(n+=`${this.pHex(Math.round(255*o))}`),e!==r.ColorFormat.hashHex6&&e!==r.ColorFormat.hashHex8&&e!==r.ColorFormat.smartHashHex||(n=`#${n}`),n}static colorToHsl(e,t,o,n){const i=Math.max(t.r,t.g,t.b),a=Math.min(t.r,t.g,t.b);let l,s=0,c=0,u=(i+a)/2;if(i===a)s=c=0;else{const e=i-a;switch(c=u>.5?e/(2-i-a):e/(i+a),i){case t.r:s=(t.g-t.b)/e+(t.g<t.b?6:0);break;case t.g:s=(t.b-t.r)/e+2;break;case t.b:s=(t.r-t.g)/e+4}s/=6}return l=e===r.ColorFormat.hsla||e===r.ColorFormat.smartHsla&&o<1?`hsla(${Math.round(360*s)}%, ${Math.round(100*c)}%, ${Math.round(100*u)}%, ${this.roundToDecimals(o,n)})`:`hsl(${Math.round(360*s)}%, ${Math.round(100*c)}%, ${Math.round(100*u)}%)`,l}static colorToUIColor(e,t,o=3){let r=`UIColor(rgb: 0x${this.pHex(e.r)}${this.pHex(e.g)}${this.pHex(e.b)})`;return t<1&&(r+=`.withAlphaComponent(${t})`),r}static normalizedIntColor(e){return{r:Math.round(e.color.r),g:Math.round(e.color.g),b:Math.round(e.color.b)}}static normalizedFractionalColor(e,t=3){return{r:this.roundToDecimals(e.color.r/255,t),g:i.roundToDecimals(e.color.g/255,t),b:i.roundToDecimals(e.color.b/255,t)}}static roundToDecimals(e,t,o=!1){const r=Math.pow(10,t),n=Math.round(e*r)/r;return o?Number(n.toFixed(t)):parseFloat(n.toFixed(t))}static pHex(e){return e.toString(16).padStart(2,"0")}static colorToOklch(e,t,o,n){const{l:i,c:a,h:l}=this.rgbToOklch(t.r,t.g,t.b);switch(e){case r.ColorFormat.oklcha:return`oklch(${i}% ${a} ${l} / ${this.roundToDecimals(100*o,n)}%)`;case r.ColorFormat.smartOklch:return o<1?`oklch(${i}% ${a} ${l} / ${this.roundToDecimals(100*o,n)}%)`:`oklch(${i}% ${a} ${l})`;case r.ColorFormat.oklch:default:return`oklch(${i}% ${a} ${l})`}}static rgbToOklch(e,t,o){const r=this.sRGBtoLinear(e/255),n=this.sRGBtoLinear(t/255),i=this.sRGBtoLinear(o/255),a=.4124564*r+.3575761*n+.1804375*i,l=.2126729*r+.7151522*n+.072175*i,s=.0193339*r+.119192*n+.9503041*i,c=.8189330101*a+.3618667424*l-.1288597137*s,u=.0329845436*a+.9293118715*l+.0361456387*s,p=.0482003018*a+.2643662691*l+.633851707*s,d=Math.cbrt(c),m=Math.cbrt(u),y=Math.cbrt(p),T=.2104542553*d+.793617785*m-.0040720468*y,f=1.9779984951*d-2.428592205*m+.4505937099*y,g=.0259040371*d+.7827717662*m-.808675766*y,b=Math.sqrt(f*f+g*g);let h=180*Math.atan2(g,f)/Math.PI;return h<0&&(h+=360),{l:this.roundToDecimals(100*T,2),c:this.roundToDecimals(b,3,!0),h:this.roundToDecimals(h,2)}}static sRGBtoLinear(e){return e<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}}t.ColorHelper=i},"../../utils/dist/helpers/FileHelper.js":
/*!**********************************************!*\
  !*** ../../utils/dist/helpers/FileHelper.js ***!
  \**********************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FileHelper=void 0;const r=o(/*! @supernovaio/sdk-exporters */"../../utils/node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js");t.FileHelper=class{static createCopyRemoteFile({relativePath:e,fileName:t,url:o}){return{path:e,name:t,type:r.OutputFileType.copyRemoteUrl,url:o}}static createTextFile({relativePath:e,fileName:t,content:o}){return{path:e,name:t,type:r.OutputFileType.text,content:o}}static createBinaryFile({relativePath:e,fileName:t,data:o}){return{path:e,name:t,type:r.OutputFileType.binary,data:o}}}},"../../utils/dist/helpers/FileNameHelper.js":
/*!**************************************************!*\
  !*** ../../utils/dist/helpers/FileNameHelper.js ***!
  \**************************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FileNameHelper=void 0;t.FileNameHelper=class{static ensureFileExtension(e,t){const o=t.startsWith(".")?t:`.${t}`;return e.toLowerCase().endsWith(o.toLowerCase())?e:e+o}static replaceFileExtension(e,t,o){const r=t.startsWith(".")?t:`.${t}`,n=o.startsWith(".")?o:`.${o}`;return e.replace(new RegExp(`${r}$`),n)}static getDefaultStyleFileName(e,t=".css"){const o=t.startsWith(".")?t:`.${t}`;return{Color:"color",Typography:"typography",Dimension:"dimension",Size:"size",Space:"space",Opacity:"opacity",FontSize:"font-size",LineHeight:"line-height",LetterSpacing:"letter-spacing",ParagraphSpacing:"paragraph-spacing",BorderWidth:"border-width",BorderRadius:"border-radius",Duration:"duration",ZIndex:"z-index",Shadow:"shadow",Border:"border",Gradient:"gradient",String:"string",ProductCopy:"product-copy",FontFamily:"font-family",FontWeight:"font-weight",TextCase:"text-case",TextDecoration:"text-decoration",Visibility:"visibility",Blur:"blur"}[e]+o}}},"../../utils/dist/helpers/GeneralHelper.js":
/*!*************************************************!*\
  !*** ../../utils/dist/helpers/GeneralHelper.js ***!
  \*************************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GeneralHelper=void 0;t.GeneralHelper=class{static indent(e=2){return" ".repeat(Math.max(0,e))}static addDisclaimer(e,t){if(!e)return t;return`/**\n * ${e.replace(/\n/g,"\n * ")} \n */\n\n${t}`}}},"../../utils/dist/helpers/NamingHelper.js":
/*!************************************************!*\
  !*** ../../utils/dist/helpers/NamingHelper.js ***!
  \************************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NamingHelper=void 0;const r=o(/*! ../enums/StringCase */"../../utils/dist/enums/StringCase.js"),n=o(/*! change-case */"../../utils/node_modules/change-case/dist/index.js");class i{static codeSafeVariableNameForToken(e,t,o,r,n){let a=[];o&&(a=[...o.path],o.isRoot||a.push(o.name));const l=e.name.split(/[\s-_]+/);if(a.length>0&&l.length>1&&l[0].toLowerCase()===a[a.length-1].toLowerCase()?a.push(l.slice(1).join(" ")):a.push(e.name),n){const e=Object.entries(n).sort((([e],[t])=>t.length-e.length));let t=a.join(" ");for(const[o,r]of e){const e=new RegExp(`\\b${o.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}\\b|(?<=^|\\s)${o.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}(?=\\s|$)`,"gi");t=t.replace(e,r)}a=t.split(/\s+/).filter((e=>e.length>0)).map((e=>e.trim()))}return r&&r.length>0&&a.unshift(r),a=a.filter(((e,t)=>0===t||e.toLowerCase()!==a[t-1].toLowerCase())),i.codeSafeVariableName(a,t)}static codeSafeVariableName(e,t,o){let i="string"==typeof e?e:e.join(" ");if(o){const e=Object.entries(o).sort((([e],[t])=>t.length-e.length));for(const[t,o]of e){const e=new RegExp(`\\b${t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}\\b|(?<=^|\\s)${t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}(?=\\s|$)`,"gi");i=i.replace(e,o)}}switch(i=i.replaceAll(/[^a-zA-Z0-9_-]/g,"_"),t){case r.StringCase.camelCase:i=(0,n.camelCase)(i);break;case r.StringCase.capitalCase:i=(0,n.capitalCase)(i);break;case r.StringCase.constantCase:i=(0,n.constantCase)(i);break;case r.StringCase.dotCase:i=(0,n.dotCase)(i);break;case r.StringCase.trainCase:i=(0,n.trainCase)(i);break;case r.StringCase.noCase:i=(0,n.noCase)(i);break;case r.StringCase.kebabCase:i=(0,n.kebabCase)(i);break;case r.StringCase.pascalCase:i=(0,n.pascalCase)(i);break;case r.StringCase.pathCase:i=(0,n.pathCase)(i);break;case r.StringCase.sentenceCase:i=(0,n.sentenceCase)(i);break;case r.StringCase.snakeCase:i=(0,n.snakeCase)(i);break;case r.StringCase.flatCase:i=(0,n.camelCase)(i).toLowerCase()}return t!==r.StringCase.snakeCase&&t!==r.StringCase.constantCase&&(i=i.replaceAll("_","")),i.match(/^[^a-zA-Z]/)&&(i="_"+i),i}static nameAsCSSVarReference(e){return`var(--${e})`}static nameAsCSSVarDeclaration(e){return`--${e}`}}t.NamingHelper=i},"../../utils/dist/helpers/ThemeHelper.js":
/*!***********************************************!*\
  !*** ../../utils/dist/helpers/ThemeHelper.js ***!
  \***********************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ThemeHelper=void 0;const r=o(/*! ./NamingHelper */"../../utils/dist/helpers/NamingHelper.js"),n=o(/*! ../enums/StringCase */"../../utils/dist/enums/StringCase.js");t.ThemeHelper=class{static hasThemedTokens(e,t,o){const r=e.filter((e=>e.tokenType===t)),n=new Set(o.overriddenTokens.map((e=>e.id)));return r.some((e=>n.has(e.id)))}static filterThemedTokens(e,t){const o=new Set(t.overriddenTokens.map((e=>e.id)));return e.filter((e=>o.has(e.id)))}static getThemeIdentifier(e,t=n.StringCase.kebabCase){if("string"==typeof e)return e;const o=e.codeName||e.name;return r.NamingHelper.codeSafeVariableName(o,t)}static getThemeName(e){if("string"==typeof e)return e;const t=e.codeName||e.name;return r.NamingHelper.codeSafeVariableName(t,n.StringCase.capitalCase)}}},"../../utils/dist/helpers/TokenHelper.js":
/*!***********************************************!*\
  !*** ../../utils/dist/helpers/TokenHelper.js ***!
  \***********************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sureOptionalReference=function(e,t,o=!0){if(!e||!o)return null;const r=t.get(e);if(!r)throw new Error(`Trying to retrieve unknown referenced token ${e}`);return r}},"../../utils/dist/helpers/TokenNameTracker.js":
/*!****************************************************!*\
  !*** ../../utils/dist/helpers/TokenNameTracker.js ***!
  \****************************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TokenNameTracker=void 0;const r=o(/*! ./NamingHelper */"../../utils/dist/helpers/NamingHelper.js");t.TokenNameTracker=class{constructor(){this.tokenNameMap=new Map,this.nameToTokenMap=new Map,this.hierarchyNameMap=new Map}reset(){this.tokenNameMap.clear(),this.nameToTokenMap.clear(),this.hierarchyNameMap.clear()}getSimpleTokenName(e,t,o=!1,n=[]){const i=`${n.join("/")}/${e.name}`;if(!o&&this.tokenNameMap.has(e.id))return this.tokenNameMap.get(e.id);let a=r.NamingHelper.codeSafeVariableName(e.name,t);this.hierarchyNameMap.has(i)||this.hierarchyNameMap.set(i,new Set);const l=this.hierarchyNameMap.get(i);return l.size>0&&!l.has(e.id)&&(a=`${a}_${l.size}`),l.add(e.id),o||(this.tokenNameMap.set(e.id,a),this.nameToTokenMap.set(a,e.id)),a}getTokenName(e,t,o,n,i=!1){if(!i&&this.tokenNameMap.has(e.id))return this.tokenNameMap.get(e.id);const a=t.find((t=>t.id===e.parentGroupId));let l=r.NamingHelper.codeSafeVariableNameForToken(e,o,a,n),s=1;for(;this.nameToTokenMap.has(l)&&this.nameToTokenMap.get(l)!==e.id;)l=`${l}_copy_${s++}`;return i||(this.tokenNameMap.set(e.id,l),this.nameToTokenMap.set(l,e.id)),l}}},"../../utils/dist/index.js":
/*!*********************************!*\
  !*** ../../utils/dist/index.js ***!
  \*********************************/function(e,t,o){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,o,r){void 0===r&&(r=o);var n=Object.getOwnPropertyDescriptor(t,o);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,r,n)}:function(e,t,o,r){void 0===r&&(r=o),e[r]=t[o]}),n=this&&this.__exportStar||function(e,t){for(var o in e)"default"===o||Object.prototype.hasOwnProperty.call(t,o)||r(t,e,o)};Object.defineProperty(t,"__esModule",{value:!0}),n(o(/*! ./helpers/NamingHelper */"../../utils/dist/helpers/NamingHelper.js"),t),n(o(/*! ./helpers/ColorHelper */"../../utils/dist/helpers/ColorHelper.js"),t),n(o(/*! ./helpers/TokenHelper */"../../utils/dist/helpers/TokenHelper.js"),t),n(o(/*! ./helpers/CSSHelper */"../../utils/dist/helpers/CSSHelper.js"),t),n(o(/*! ./helpers/FileHelper */"../../utils/dist/helpers/FileHelper.js"),t),n(o(/*! ./helpers/ThemeHelper */"../../utils/dist/helpers/ThemeHelper.js"),t),n(o(/*! ./helpers/FileNameHelper */"../../utils/dist/helpers/FileNameHelper.js"),t),n(o(/*! ./helpers/GeneralHelper */"../../utils/dist/helpers/GeneralHelper.js"),t),n(o(/*! ./enums/StringCase */"../../utils/dist/enums/StringCase.js"),t),n(o(/*! ./enums/ColorFormat */"../../utils/dist/enums/ColorFormat.js"),t),n(o(/*! ./helpers/TokenNameTracker */"../../utils/dist/helpers/TokenNameTracker.js"),t)},"../../utils/node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js":
/*!*********************************************************************************************!*\
  !*** ../../utils/node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js ***!
  \*********************************************************************************************/(e,t)=>{(()=>{"use strict";var e={1:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.GradientType=void 0,function(e){e.linear="Linear",e.radial="Radial",e.angular="Angular"}(o||(t.GradientType=o={}))},306:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockTextPropertyStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.default="Default",e.defaultBold="DefaultBold",e.defaultSemibold="DefaultSemibold",e.small="Small",e.smallBold="SmallBold",e.smallSemibold="SmallSemibold",e.custom="Custom"}(o||(t.DocsBlockTextPropertyStyle=o={}))},899:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScaleType=void 0,function(e){e.aspectFill="AspectFill",e.aspectFit="AspectFit"}(o||(t.AssetScaleType=o={}))},915:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScale=void 0,function(e){e.x1="x1",e.x2="x2",e.x3="x3",e.x4="x4"}(o||(t.AssetScale=o={}))},922:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextCase=void 0,function(e){e.original="Original",e.upper="Upper",e.lower="Lower",e.camel="Camel",e.smallCaps="SmallCaps"}(o||(t.TextCase=o={}))},934:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.IconSet=void 0,function(e){e.checkCircle="CheckCircle",e.crossCircle="CrossCircle",e.alert="Alert"}(o||(t.IconSet=o={}))},1160:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_POSITIONS=t.BorderPosition=void 0,function(e){e.inside="Inside",e.center="Center",e.outside="Outside"}(o||(t.BorderPosition=o={})),t.ALL_BORDER_POSITIONS=[o.inside,o.center,o.outside]},1233:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityType=void 0,function(e){e.group="Group",e.page="Page"}(o||(t.DocsEntityType=o={}))},1255:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameAlignment=void 0,function(e){e.frameHeight="FrameHeight",e.center="Center"}(o||(t.FrameAlignment=o={}))},1423:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageAssetType=void 0,function(e){e.image="image",e.figmaFrame="figmaFrame"}(o||(t.DocumentationLegacyPageAssetType=o={}))},1601:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockThemeType=void 0,function(e){e.override="Override",e.comparison="Comparison"}(o||(t.DocumentationLegacyPageBlockThemeType=o={}))},1846:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockType=void 0,function(e){e.text="Text",e.heading="Heading",e.code="Code",e.unorderedList="UnorderedList",e.orderedList="OrderedList",e.quote="Quote",e.callout="Callout",e.divider="Divider",e.image="Image",e.token="Token",e.tokenList="TokenList",e.tokenGroup="TokenGroup",e.shortcuts="Shortcuts",e.link="Link",e.figmaEmbed="FigmaEmbed",e.youtubeEmbed="YoutubeEmbed",e.storybookEmbed="StorybookEmbed",e.genericEmbed="Embed",e.figmaFrames="FigmaFrames",e.custom="Custom",e.renderCode="RenderCode",e.componentAssets="ComponentAssets",e.column="Column",e.columnItem="ColumnItem",e.tabs="Tabs",e.tabItem="TabItem",e.table="Table",e.tableCell="TableCell",e.tableRow="TableRow"}(o||(t.DocumentationLegacyPageBlockType=o={}))},2123:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyGroupBehavior=void 0,function(e){e.group="Group",e.tabs="Tabs"}(o||(t.DocumentationLegacyGroupBehavior=o={}))},2657:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockShortcut=t.DocumentationLegacyPageBlockShortcutType=void 0,function(e){e.external="External",e.internal="Internal"}(o||(t.DocumentationLegacyPageBlockShortcutType=o={})),t.DocumentationLegacyPageBlockShortcut=class{constructor(e){var t;e.url?this.type=o.external:this.type=o.internal,this.title=this.shortcutTitleFromModel(e,this.type),this.description=this.shortcutDescriptionFromModel(e,this.type),this.previewUrl=this.shortcutPreviewUrlFromModel(e),this.type===o.internal&&(null===(t=e.documentationItemPreview)||void 0===t?void 0:t.valid)&&e.documentationItemId?this.internalId=e.documentationItemId:(this.internalId=null,this.type===o.external&&e.url?this.externalUrl=e.url:this.externalUrl=null)}shortcutTitleFromModel(e,t){var r,n,i,a,l;let s=null;return e.title&&e.title.trim().length>0?s=e.title:t===o.internal?s=null!==(n=null===(r=e.documentationItemPreview)||void 0===r?void 0:r.title)&&void 0!==n?n:null:t===o.external&&(s=null!==(l=null!==(a=null===(i=e.urlPreview)||void 0===i?void 0:i.title)&&void 0!==a?a:e.url)&&void 0!==l?l:null),s&&0!==s.trim().length?s:null}shortcutDescriptionFromModel(e,t){var r;let n=null;return e.description&&e.description.trim().length>0?n=e.description:t===o.external&&(n=null===(r=e.urlPreview)||void 0===r?void 0:r.description),n&&0!==n.trim().length?n:null}shortcutPreviewUrlFromModel(e){var t,o,r,n,i;return null!==(i=null!==(r=null!==(t=e.assetUrl)&&void 0!==t?t:null===(o=e.asset)||void 0===o?void 0:o.url)&&void 0!==r?r:null===(n=e.urlPreview)||void 0===n?void 0:n.thumbnailUrl)&&void 0!==i?i:null}}},2674:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.RichTextSpanAttributeType=void 0,function(e){e.bold="Bold",e.italic="Italic",e.link="Link",e.strikethrough="Strikethrough",e.code="Code"}(o||(t.RichTextSpanAttributeType=o={}))},2802:(e,t)=>{var o,r;Object.defineProperty(t,"__esModule",{value:!0}),t.PulsarExecutor=t.OutputFileType=void 0,function(e){e.copyRemoteUrl="copyRemoteUrl",e.text="text",e.binary="binary"}(o||(t.OutputFileType=o={})),function(e){e.supernova="supernova",e.local="local"}(r||(t.PulsarExecutor=r={}))},3607:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionStatus=void 0,function(e){e.active="active",e.gracePeriod="gracePeriod",e.cancelled="cancelled",e.suspended="suspended"}(o||(t.WorkspaceSubscriptionStatus=o={}))},3718:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameLayout=void 0,function(e){e.c8="C8",e.c7="C7",e.c6="C6",e.c5="C5",e.c4="C4",e.c3="C3",e.c2="C2",e.c1="C1",e.c175="C1_75"}(o||(t.FrameLayout=o={}))},3733:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorSelectionType=void 0,function(e){e.entity="Entity",e.group="Group",e.entityAndGroup="EntityAndGroup"}(o||(t.DocsBlockBehaviorSelectionType=o={}))},3788:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DT_TOKEN_TYPES=t.tokenTypeIsReferencable=t.REFERENCABLE_TOKEN_TYPES=t.REPLACABLE_TOKEN_TYPES=t.tokenTypeIsNonPure=t.tokenTypeIsPure=t.PURE_TOKEN_TYPES=t.ALL_TOKEN_TYPES=t.MS_DIMENSION_TOKEN_TYPES=t.RAW_DIMENSION_TOKEN_TYPES=t.DIMENSION_TOKEN_TYPES=t.OPTION_TOKEN_TYPES=t.STRING_TOKEN_TYPES=t.TokenType=void 0,function(e){e.color="Color",e.typography="Typography",e.shadow="Shadow",e.border="Border",e.gradient="Gradient",e.blur="Blur",e.radius="BorderRadius",e.borderWidth="BorderWidth",e.duration="Duration",e.fontSize="FontSize",e.dimension="Dimension",e.letterSpacing="LetterSpacing",e.lineHeight="LineHeight",e.opacity="Opacity",e.paragraphSpacing="ParagraphSpacing",e.size="Size",e.space="Space",e.zIndex="ZIndex",e.textDecoration="TextDecoration",e.textCase="TextCase",e.visibility="Visibility",e.fontFamily="FontFamily",e.fontWeight="FontWeight",e.string="String",e.productCopy="ProductCopy"}(o||(t.TokenType=o={})),t.STRING_TOKEN_TYPES=[o.string,o.productCopy,o.fontFamily,o.fontWeight],t.OPTION_TOKEN_TYPES=[o.textCase,o.textDecoration,o.visibility],t.DIMENSION_TOKEN_TYPES=[o.dimension,o.size,o.space,o.opacity,o.fontSize,o.lineHeight,o.letterSpacing,o.paragraphSpacing,o.borderWidth,o.radius,o.duration,o.zIndex],t.RAW_DIMENSION_TOKEN_TYPES=[o.opacity,o.zIndex],t.MS_DIMENSION_TOKEN_TYPES=[o.duration],t.ALL_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES,o.color,o.gradient,o.border,o.radius,o.shadow,o.typography,o.blur],t.PURE_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.tokenTypeIsPure=e=>t.PURE_TOKEN_TYPES.includes(e),t.tokenTypeIsNonPure=e=>!(0,t.tokenTypeIsPure)(e),t.REPLACABLE_TOKEN_TYPES=[o.color,...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.REFERENCABLE_TOKEN_TYPES=[o.color,...t.DIMENSION_TOKEN_TYPES,o.fontFamily,o.fontWeight,o.textCase,o.textDecoration],t.tokenTypeIsReferencable=e=>t.REFERENCABLE_TOKEN_TYPES.includes(e),t.DT_TOKEN_TYPES=[o.color,o.shadow,o.gradient,o.typography,o.border,...t.DIMENSION_TOKEN_TYPES,o.fontFamily,o.fontWeight,o.string,...t.OPTION_TOKEN_TYPES]},4068:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityGroupBehavior=void 0,function(e){e.group="Group",e.tabs="Tabs"}(o||(t.DocsEntityGroupBehavior=o={}))},4290:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionProductCode=void 0,function(e){e.free="free",e.team="team",e.teamTest="team_test",e.company="company",e.enterprise="enterprise"}(o||(t.WorkspaceSubscriptionProductCode=o={}))},4379:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SupernovaError=void 0;class o extends Error{constructor(e,t,o,r,n,i,a){super(e),this.code=t,this.status=o,this.formErrors=r,this.requestId=n,this.serverTime=i,this.url=a}static fromNetworkResponse(e,t,r){var n,i,a;return new o(e.message,e.errorCode||e.reason||e.label||null,e.code||t,null!==(n=e.formErrors)&&void 0!==n?n:null,null!==(i=e.requestId)&&void 0!==i?i:null,null!==(a=e.serverTime)&&void 0!==a?a:null,r)}static fromNoNetworkResponse(e){return new o("No network or internet unreachable","NO_NETWORK",12163,null,(new Date).toISOString(),null,e)}static fromCode(e){return new o(e,e,null,null,null,null,null)}static fromMessage(e){return new o(e,null,null,null,null,null,null)}isFieldErrored(e){return void 0!==this.formErrors.find((t=>t.key===e))}errorForField(e){var t;return null!==(t=this.formErrors.find((t=>t.key===e)))&&void 0!==t?t:null}toString(){var e,t,o,r,n,i;return`\n    Error thrown: ${this.message}\n\n    Code: ${null!==(e=this.code)&&void 0!==e?e:"-"}\n\n    Status: ${null!==(t=this.status)&&void 0!==t?t:"-"}\n\n    Fields: ${JSON.stringify(this.formErrors,null,2)}\n\n    Request ID: ${null!==(o=this.requestId)&&void 0!==o?o:"-"}\n\n    Server time: ${null!==(r=this.serverTime)&&void 0!==r?r:"-"}\n\n    Network URL: ${null!==(n=this.url)&&void 0!==n?n:"-"}\n\n    Stack: ${null!==(i=this.stack)&&void 0!==i?i:"-"}\n    `}toHumanReadable(){return`${this.message}${this.requestId?` (request ${this.requestId})`:""}`}}t.SupernovaError=o},4546:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_STYLES=t.BorderStyle=void 0,function(e){e.dashed="Dashed",e.dotted="Dotted",e.solid="Solid",e.groove="Groove"}(o||(t.BorderStyle=o={})),t.ALL_BORDER_STYLES=[o.dashed,o.dotted,o.solid,o.groove]},4652:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.SourceType=void 0,function(e){e.figma="Figma",e.tokenStudio="TokenStudio",e.figmaVariablesPlugin="FigmaVariablesPlugin"}(o||(t.SourceType=o={}))},5102:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyCalloutType=void 0,function(e){e.info="Info",e.success="Success",e.warning="Warning",e.error="Error"}(o||(t.DocumentationLegacyCalloutType=o={}))},5503:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionPlanInterval=void 0,function(e){e.yearly="yearly",e.monthly="monthly"}(o||(t.WorkspaceSubscriptionPlanInterval=o={}))},5651:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorDataType=void 0,function(e){e.item="Item",e.token="Token",e.asset="Asset",e.component="Component",e.figmaNode="FigmaNode",e.figmaComponent="FigmaComponent"}(o||(t.DocsBlockBehaviorDataType=o={}))},5673:(e,t)=>{var o;function r(e){switch(e.type){case o.documentationItem:return`@page:${e.documentationItemId}`;case o.pageHeading:return`@page:${e.documentationItemId}#${e.pageHeadingId}`;case o.url:return e.url;default:return}}Object.defineProperty(t,"__esModule",{value:!0}),t.linkAttributeToDocsLink=t.docsLinkToLinkAttributes=t.docsLinkToUrl=t.DocsLinkRefType=void 0,function(e){e.documentationItem="DocumentationItem",e.pageHeading="PageHeading",e.url="Url"}(o||(t.DocsLinkRefType=o={})),t.docsLinkToUrl=r,t.docsLinkToLinkAttributes=function(e){const t=r(e);if(t)return{href:t,target:e.openInNewTab?"_blank":"_self"}},t.linkAttributeToDocsLink=function(e,t){if(!e)return;const r="_blank"===t;if(e.startsWith("@page:")){if(e.includes("#")){const[t,n]=e.replace("@page:","").split("#");return{type:o.pageHeading,documentationItemId:t,pageHeadingId:n,openInNewTab:r}}return{type:o.documentationItem,documentationItemId:e.replace("@page:",""),openInNewTab:r}}return{type:o.url,url:e,openInNewTab:r}}},5695:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainErrorCode=void 0,function(e){e.generalError="GeneralError",e.dnsNotConfigured="DNSNotConfigured",e.maintenance="Maintenance"}(o||(t.CustomDomainErrorCode=o={}))},5883:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyOptionRenderingStyle=void 0,function(e){e.segmentedControl="SegmentedControl",e.toggleButton="ToggleButton",e.select="Select",e.checkbox="Checkbox"}(o||(t.DocsBlockItemPropertyOptionRenderingStyle=o={}))},5963:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionRenderingStyle=void 0,function(e){e.segmentedControl="SegmentedControl",e.toggleButton="ToggleButton",e.select="Select",e.checkbox="Checkbox"}(o||(t.DocsBlockOptionRenderingStyle=o={}))},6141:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.VisibilityType=void 0,function(e){e.visible="Visible",e.hidden="Hidden"}(o||(t.VisibilityType=o={}))},6192:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.BlurType=void 0,function(e){e.layer="Layer",e.background="Background"}(o||(t.BlurType=o={}))},6298:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryAuthType=void 0,function(e){e.basic="Basic",e.bearer="Bearer"}(o||(t.WorkspaceNPMRegistryAuthType=o={}))},6644:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockRichTextPropertyStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.quote="Quote",e.callout="Callout",e.default="Default"}(o||(t.DocsBlockRichTextPropertyStyle=o={}))},6839:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyType=void 0,function(e){e.richText="RichText",e.multiRichText="MultiRichText",e.text="Text",e.richTextEditor="RichTextEditor",e.boolean="Boolean",e.number="Number",e.singleSelect="SingleSelect",e.multiSelect="MultiSelect",e.image="Image",e.token="Token",e.tokenType="TokenType",e.tokenProperty="TokenProperty",e.component="Component",e.componentProperty="ComponentProperty",e.asset="Asset",e.assetProperty="AssetProperty",e.embedURL="EmbedURL",e.url="URL",e.markdown="Markdown",e.code="Code",e.codeSandbox="CodeSandbox",e.table="Table",e.divider="Divider",e.storybook="Storybook",e.color="Color",e.figmaNode="FigmaNode",e.figmaComponent="FigmaComponent"}(o||(t.DocsBlockItemPropertyType=o={}))},7040:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoration=void 0,function(e){e.original="None",e.underline="Underline",e.strikethrough="Strikethrough"}(o||(t.TextDecoration=o={}))},7291:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutWidth=void 0,function(e){e.c1="1",e.c2="2",e.c3="3",e.c4="4",e.c5="5",e.c6="6",e.c7="7",e.c8="8",e.c9="9",e.c10="10",e.c11="11",e.c12="12"}(o||(t.DocsBlockItemVariantLayoutWidth=o={}))},7379:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyItemType=void 0,function(e){e.group="Group",e.page="Page"}(o||(t.DocumentationLegacyItemType=o={}))},7476:(e,t)=>{var o,r;Object.defineProperty(t,"__esModule",{value:!0}),t.TextAlignment=t.Alignment=void 0,function(e){e.left="Left",e.center="Center",e.stretch="Stretch"}(o||(t.Alignment=o={})),function(e){e.left="Left",e.center="Center",e.right="Right"}(r||(t.TextAlignment=r={}))},7479:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyTextStyle=void 0,function(e){e.small="Small",e.regular="Regular",e.bold="Bold"}(o||(t.DocsBlockItemPropertyTextStyle=o={}))},7737:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainState=void 0,function(e){e.initial="Initial",e.domainSetupInProgress="DomainSetupInProgress",e.domainSetupFailed="DomainSetupFailed",e.domainSetupsSucces="DomainSetupSuccess",e.sslSetupInProgress="SSLSetupInProgress",e.sslSetupFailed="SSLSetupFailed",e.sslSetupSuccess="SSLSetupSuccess"}(o||(t.CustomDomainState=o={}))},7968:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryType=void 0,function(e){e.npmJS="NPMJS",e.gitHub="GitHub",e.azureDevOps="AzureDevOps",e.artifactory="Artifactory",e.custom="Custom"}(o||(t.WorkspaceNPMRegistryType=o={}))},7971:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsSectionType=void 0,function(e){e.plain="Plain",e.tabs="Tabs"}(o||(t.DocsSectionType=o={}))},8042:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ImportWarningType=void 0,function(e){e.UnsupportedFill="UnsupportedFill",e.UnsupportedStroke="UnsupportedStroke",e.UnsupportedEffect="UnsupportedEffect",e.StyleNotApplied="StyleNotApplied",e.NoPublishedStyles="NoPublishedStyles",e.NoPublishedComponents="NoPublishedComponents",e.NoPublishedAssets="NoPublishedAssets",e.NoVersionFound="NoVersionFound",e.ComponentHasNoThumbnail="ComponentHasNoThumbnail",e.DuplicateImportedStyleId="DuplicateImportedStyleId",e.DuplicateImportedStylePath="DuplicateImportedStylePath",e.NoPublishedElements="NoPublishedElements",e.NoUnpublishedStyles="NoUnpublishedStyles"}(o||(t.ImportWarningType=o={}))},8061:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyRichTextStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.quote="Quote",e.callout="Callout",e.ol="OL",e.ul="UL"}(o||(t.DocsBlockItemPropertyRichTextStyle=o={}))},8095:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutType=void 0,function(e){e.column="Column",e.row="Row"}(o||(t.DocsBlockItemVariantLayoutType=o={}))},8607:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.MS_UNITS=t.PX_UNITS=t.RAW_UNITS=t.LINE_HEIGHT_UNITS=t.SIZE_UNITS=t.Unit=void 0,function(e){e.pixels="Pixels",e.percent="Percent",e.rem="Rem",e.ms="Ms",e.raw="Raw"}(o||(t.Unit=o={})),t.SIZE_UNITS=[o.pixels,o.percent,o.rem],t.LINE_HEIGHT_UNITS=[o.pixels,o.percent,o.rem,o.raw],t.RAW_UNITS=[o.raw],t.PX_UNITS=[o.pixels],t.MS_UNITS=[o.ms]},8738:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetFormat=void 0,function(e){e.png="png",e.pdf="pdf",e.svg="svg"}(o||(t.AssetFormat=o={}))},8890:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockImagePropertyAspectRatio=void 0,function(e){e.auto="Auto",e.square="Square",e.landscape="Landscape",e.portrait="Portrait",e.wide="Wide"}(o||(t.DocsBlockImagePropertyAspectRatio=o={}))},9125:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ShadowType=void 0,function(e){e.drop="Drop",e.inner="Inner"}(o||(t.ShadowType=o={}))},9133:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionColor=void 0,function(e){e.green="Green",e.red="Red",e.yellow="Yellow",e.blue="Blue",e.purple="Purple",e.orange="Orange",e.pink="Pink",e.teal="Teal",e.grey="Grey",e.lightGrey="LightGrey",e.cyan="Cyan",e.fuchsia="Fuchsia"}(o||(t.DocsBlockOptionColor=o={}))},9377:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemEntityType=void 0,function(e){e.token="Token",e.tokenGroup="TokenGroup",e.asset="Asset",e.assetGroup="AssetGroup",e.component="Component",e.componentGroup="ComponentGroup"}(o||(t.DocsBlockItemEntityType=o={}))},9478:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.convertRemoteToUserRole=t.UserRole=void 0;const r=o(4379);var n;!function(e){e.owner="Owner",e.admin="Admin",e.creator="Creator",e.contributor="Contributor",e.billing="Billing",e.viewer="Viewer"}(n||(t.UserRole=n={})),t.convertRemoteToUserRole=e=>{switch(e){case"Owner":return n.owner;case"Admin":return n.admin;case"Creator":return n.creator;case"Contributor":return n.contributor;case"Billing":return n.billing;case"Viewer":return n.viewer;default:throw r.SupernovaError.fromMessage(`Unknown role: ${e}`)}}},9896:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyHeadingType=void 0,function(e){e[e.h1=1]="h1",e[e.h2=2]="h2",e[e.h3=3]="h3"}(o||(t.DocumentationLegacyHeadingType=o={}))},9932:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.docsImageRefToUrl=t.DocsImageRefType=void 0,function(e){e.resource="Resource",e.figmaNode="FigmaNode"}(o||(t.DocsImageRefType=o={})),t.docsImageRefToUrl=function(e,t,r){var n;if(e)switch(e.type){case o.resource:return null===(n=e.resource)||void 0===n?void 0:n.url;case o.figmaNode:if(!e.figmaNode||!e.figmaNode.sourceId||!e.figmaNode.frameReferenceId)return;return t.resources.getFigmaFrameHostedUrl({designSystemId:r.dsId,versionId:r.versionId},e.figmaNode.frameReferenceId);default:return}}}},o={};function r(t){var n=o[t];if(void 0!==n)return n.exports;var i=o[t]={exports:{}};return e[t](i,i.exports,r),i.exports}var n={};(()=>{var e=n;Object.defineProperty(e,"__esModule",{value:!0}),e.TokenType=e.TextDecoration=e.TextCase=e.ShadowType=e.RichTextSpanAttributeType=e.GradientType=e.FrameLayout=e.FrameAlignment=e.IconSet=e.SourceType=e.DocsImageRefType=e.DocsLinkRefType=e.DocsSectionType=e.DocsEntityType=e.DocsEntityGroupBehavior=e.DocsBlockTextPropertyStyle=e.DocsBlockRichTextPropertyStyle=e.DocsBlockOptionColor=e.DocsBlockOptionRenderingStyle=e.DocsBlockItemVariantLayoutWidth=e.DocsBlockItemVariantLayoutType=e.DocsBlockItemPropertyType=e.DocsBlockItemPropertyTextStyle=e.DocsBlockItemPropertyRichTextStyle=e.DocsBlockItemPropertyOptionRenderingStyle=e.DocsBlockItemEntityType=e.DocsBlockImagePropertyAspectRatio=e.DocsBlockBehaviorSelectionType=e.DocsBlockBehaviorDataType=e.DocumentationLegacyPageBlockShortcutType=e.DocumentationLegacyPageBlockThemeType=e.DocumentationLegacyPageBlockType=e.DocumentationLegacyPageAssetType=e.DocumentationLegacyItemType=e.DocumentationLegacyHeadingType=e.DocumentationLegacyGroupBehavior=e.DocumentationLegacyCalloutType=e.BorderStyle=e.BorderPosition=e.BlurType=e.AssetScaleType=e.AssetScale=e.AssetFormat=e.Alignment=e.ALL_TOKEN_TYPES=e.ALL_BORDER_STYLES=e.ALL_BORDER_POSITIONS=e.OPTION_TOKEN_TYPES=e.STRING_TOKEN_TYPES=e.DIMENSION_TOKEN_TYPES=void 0,e.PulsarExecutor=e.OutputFileType=e.CustomDomainState=e.CustomDomainErrorCode=e.ImportWarningType=e.WorkspaceNPMRegistryType=e.WorkspaceNPMRegistryAuthType=e.WorkspaceSubscriptionStatus=e.WorkspaceSubscriptionProductCode=e.WorkspaceSubscriptionPlanInterval=e.VisibilityType=e.UserRole=e.Unit=void 0;var t=r(3788);Object.defineProperty(e,"DIMENSION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.DIMENSION_TOKEN_TYPES}}),Object.defineProperty(e,"STRING_TOKEN_TYPES",{enumerable:!0,get:function(){return t.STRING_TOKEN_TYPES}}),Object.defineProperty(e,"OPTION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.OPTION_TOKEN_TYPES}});var o=r(1160);Object.defineProperty(e,"ALL_BORDER_POSITIONS",{enumerable:!0,get:function(){return o.ALL_BORDER_POSITIONS}});var i=r(4546);Object.defineProperty(e,"ALL_BORDER_STYLES",{enumerable:!0,get:function(){return i.ALL_BORDER_STYLES}});var a=r(3788);Object.defineProperty(e,"ALL_TOKEN_TYPES",{enumerable:!0,get:function(){return a.ALL_TOKEN_TYPES}});var l=r(7476);Object.defineProperty(e,"Alignment",{enumerable:!0,get:function(){return l.Alignment}});var s=r(8738);Object.defineProperty(e,"AssetFormat",{enumerable:!0,get:function(){return s.AssetFormat}});var c=r(915);Object.defineProperty(e,"AssetScale",{enumerable:!0,get:function(){return c.AssetScale}});var u=r(899);Object.defineProperty(e,"AssetScaleType",{enumerable:!0,get:function(){return u.AssetScaleType}});var p=r(6192);Object.defineProperty(e,"BlurType",{enumerable:!0,get:function(){return p.BlurType}});var d=r(1160);Object.defineProperty(e,"BorderPosition",{enumerable:!0,get:function(){return d.BorderPosition}});var m=r(4546);Object.defineProperty(e,"BorderStyle",{enumerable:!0,get:function(){return m.BorderStyle}});var y=r(5102);Object.defineProperty(e,"DocumentationLegacyCalloutType",{enumerable:!0,get:function(){return y.DocumentationLegacyCalloutType}});var T=r(2123);Object.defineProperty(e,"DocumentationLegacyGroupBehavior",{enumerable:!0,get:function(){return T.DocumentationLegacyGroupBehavior}});var f=r(9896);Object.defineProperty(e,"DocumentationLegacyHeadingType",{enumerable:!0,get:function(){return f.DocumentationLegacyHeadingType}});var g=r(7379);Object.defineProperty(e,"DocumentationLegacyItemType",{enumerable:!0,get:function(){return g.DocumentationLegacyItemType}});var b=r(1423);Object.defineProperty(e,"DocumentationLegacyPageAssetType",{enumerable:!0,get:function(){return b.DocumentationLegacyPageAssetType}});var h=r(1846);Object.defineProperty(e,"DocumentationLegacyPageBlockType",{enumerable:!0,get:function(){return h.DocumentationLegacyPageBlockType}});var S=r(1601);Object.defineProperty(e,"DocumentationLegacyPageBlockThemeType",{enumerable:!0,get:function(){return S.DocumentationLegacyPageBlockThemeType}});var v=r(2657);Object.defineProperty(e,"DocumentationLegacyPageBlockShortcutType",{enumerable:!0,get:function(){return v.DocumentationLegacyPageBlockShortcutType}});var P=r(5651);Object.defineProperty(e,"DocsBlockBehaviorDataType",{enumerable:!0,get:function(){return P.DocsBlockBehaviorDataType}});var k=r(3733);Object.defineProperty(e,"DocsBlockBehaviorSelectionType",{enumerable:!0,get:function(){return k.DocsBlockBehaviorSelectionType}});var O=r(8890);Object.defineProperty(e,"DocsBlockImagePropertyAspectRatio",{enumerable:!0,get:function(){return O.DocsBlockImagePropertyAspectRatio}});var C=r(9377);Object.defineProperty(e,"DocsBlockItemEntityType",{enumerable:!0,get:function(){return C.DocsBlockItemEntityType}});var _=r(5883);Object.defineProperty(e,"DocsBlockItemPropertyOptionRenderingStyle",{enumerable:!0,get:function(){return _.DocsBlockItemPropertyOptionRenderingStyle}});var D=r(8061);Object.defineProperty(e,"DocsBlockItemPropertyRichTextStyle",{enumerable:!0,get:function(){return D.DocsBlockItemPropertyRichTextStyle}});var I=r(7479);Object.defineProperty(e,"DocsBlockItemPropertyTextStyle",{enumerable:!0,get:function(){return I.DocsBlockItemPropertyTextStyle}});var E=r(6839);Object.defineProperty(e,"DocsBlockItemPropertyType",{enumerable:!0,get:function(){return E.DocsBlockItemPropertyType}});var x=r(8095);Object.defineProperty(e,"DocsBlockItemVariantLayoutType",{enumerable:!0,get:function(){return x.DocsBlockItemVariantLayoutType}});var N=r(7291);Object.defineProperty(e,"DocsBlockItemVariantLayoutWidth",{enumerable:!0,get:function(){return N.DocsBlockItemVariantLayoutWidth}});var R=r(5963);Object.defineProperty(e,"DocsBlockOptionRenderingStyle",{enumerable:!0,get:function(){return R.DocsBlockOptionRenderingStyle}});var B=r(9133);Object.defineProperty(e,"DocsBlockOptionColor",{enumerable:!0,get:function(){return B.DocsBlockOptionColor}});var j=r(6644);Object.defineProperty(e,"DocsBlockRichTextPropertyStyle",{enumerable:!0,get:function(){return j.DocsBlockRichTextPropertyStyle}});var L=r(306);Object.defineProperty(e,"DocsBlockTextPropertyStyle",{enumerable:!0,get:function(){return L.DocsBlockTextPropertyStyle}});var M=r(4068);Object.defineProperty(e,"DocsEntityGroupBehavior",{enumerable:!0,get:function(){return M.DocsEntityGroupBehavior}});var F=r(1233);Object.defineProperty(e,"DocsEntityType",{enumerable:!0,get:function(){return F.DocsEntityType}});var w=r(7971);Object.defineProperty(e,"DocsSectionType",{enumerable:!0,get:function(){return w.DocsSectionType}});var A=r(5673);Object.defineProperty(e,"DocsLinkRefType",{enumerable:!0,get:function(){return A.DocsLinkRefType}});var $=r(9932);Object.defineProperty(e,"DocsImageRefType",{enumerable:!0,get:function(){return $.DocsImageRefType}});var H=r(4652);Object.defineProperty(e,"SourceType",{enumerable:!0,get:function(){return H.SourceType}});var U=r(934);Object.defineProperty(e,"IconSet",{enumerable:!0,get:function(){return U.IconSet}});var W=r(1255);Object.defineProperty(e,"FrameAlignment",{enumerable:!0,get:function(){return W.FrameAlignment}});var G=r(3718);Object.defineProperty(e,"FrameLayout",{enumerable:!0,get:function(){return G.FrameLayout}});var V=r(1);Object.defineProperty(e,"GradientType",{enumerable:!0,get:function(){return V.GradientType}});var Y=r(2674);Object.defineProperty(e,"RichTextSpanAttributeType",{enumerable:!0,get:function(){return Y.RichTextSpanAttributeType}});var K=r(9125);Object.defineProperty(e,"ShadowType",{enumerable:!0,get:function(){return K.ShadowType}});var z=r(922);Object.defineProperty(e,"TextCase",{enumerable:!0,get:function(){return z.TextCase}});var q=r(7040);Object.defineProperty(e,"TextDecoration",{enumerable:!0,get:function(){return q.TextDecoration}});var Z=r(3788);Object.defineProperty(e,"TokenType",{enumerable:!0,get:function(){return Z.TokenType}});var J=r(8607);Object.defineProperty(e,"Unit",{enumerable:!0,get:function(){return J.Unit}});var X=r(9478);Object.defineProperty(e,"UserRole",{enumerable:!0,get:function(){return X.UserRole}});var Q=r(6141);Object.defineProperty(e,"VisibilityType",{enumerable:!0,get:function(){return Q.VisibilityType}});var ee=r(5503);Object.defineProperty(e,"WorkspaceSubscriptionPlanInterval",{enumerable:!0,get:function(){return ee.WorkspaceSubscriptionPlanInterval}});var te=r(4290);Object.defineProperty(e,"WorkspaceSubscriptionProductCode",{enumerable:!0,get:function(){return te.WorkspaceSubscriptionProductCode}});var oe=r(3607);Object.defineProperty(e,"WorkspaceSubscriptionStatus",{enumerable:!0,get:function(){return oe.WorkspaceSubscriptionStatus}});var re=r(6298);Object.defineProperty(e,"WorkspaceNPMRegistryAuthType",{enumerable:!0,get:function(){return re.WorkspaceNPMRegistryAuthType}});var ne=r(7968);Object.defineProperty(e,"WorkspaceNPMRegistryType",{enumerable:!0,get:function(){return ne.WorkspaceNPMRegistryType}});var ie=r(8042);Object.defineProperty(e,"ImportWarningType",{enumerable:!0,get:function(){return ie.ImportWarningType}});var ae=r(5695);Object.defineProperty(e,"CustomDomainErrorCode",{enumerable:!0,get:function(){return ae.CustomDomainErrorCode}});var le=r(7737);Object.defineProperty(e,"CustomDomainState",{enumerable:!0,get:function(){return le.CustomDomainState}});var se=r(2802);Object.defineProperty(e,"OutputFileType",{enumerable:!0,get:function(){return se.OutputFileType}}),Object.defineProperty(e,"PulsarExecutor",{enumerable:!0,get:function(){return se.PulsarExecutor}})})();var i=t;for(var a in n)i[a]=n[a];n.__esModule&&Object.defineProperty(i,"__esModule",{value:!0})})()},"../../utils/node_modules/change-case/dist/index.js":
/*!**********************************************************!*\
  !*** ../../utils/node_modules/change-case/dist/index.js ***!
  \**********************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{camelCase:()=>d,capitalCase:()=>T,constantCase:()=>f,dotCase:()=>g,kebabCase:()=>b,noCase:()=>p,pascalCase:()=>m,pascalSnakeCase:()=>y,pathCase:()=>h,sentenceCase:()=>S,snakeCase:()=>v,split:()=>c,splitSeparateNumbers:()=>u,trainCase:()=>P});const r=/([\p{Ll}\d])(\p{Lu})/gu,n=/(\p{Lu})([\p{Lu}][\p{Ll}])/gu,i=/(\d)\p{Ll}|(\p{L})\d/u,a=/[^\p{L}\d]+/giu,l="$1\0$2",s="";function c(e){let t=e.trim();t=t.replace(r,l).replace(n,l),t=t.replace(a,"\0");let o=0,i=t.length;for(;"\0"===t.charAt(o);)o++;if(o===i)return[];for(;"\0"===t.charAt(i-1);)i--;return t.slice(o,i).split(/\0/g)}function u(e){const t=c(e);for(let e=0;e<t.length;e++){const o=t[e],r=i.exec(o);if(r){const n=r.index+(r[1]??r[2]).length;t.splice(e,1,o.slice(0,n),o.slice(n))}}return t}function p(e,t){const[o,r,n]=D(e,t);return o+r.map(k(t?.locale)).join(t?.delimiter??" ")+n}function d(e,t){const[o,r,n]=D(e,t),i=k(t?.locale),a=O(t?.locale),l=t?.mergeAmbiguousCharacters?C(i,a):_(i,a);return o+r.map(((e,t)=>0===t?i(e):l(e,t))).join(t?.delimiter??"")+n}function m(e,t){const[o,r,n]=D(e,t),i=k(t?.locale),a=O(t?.locale),l=t?.mergeAmbiguousCharacters?C(i,a):_(i,a);return o+r.map(l).join(t?.delimiter??"")+n}function y(e,t){return T(e,{delimiter:"_",...t})}function T(e,t){const[o,r,n]=D(e,t),i=k(t?.locale),a=O(t?.locale);return o+r.map(C(i,a)).join(t?.delimiter??" ")+n}function f(e,t){const[o,r,n]=D(e,t);return o+r.map(O(t?.locale)).join(t?.delimiter??"_")+n}function g(e,t){return p(e,{delimiter:".",...t})}function b(e,t){return p(e,{delimiter:"-",...t})}function h(e,t){return p(e,{delimiter:"/",...t})}function S(e,t){const[o,r,n]=D(e,t),i=k(t?.locale),a=O(t?.locale),l=C(i,a);return o+r.map(((e,t)=>0===t?l(e):i(e))).join(t?.delimiter??" ")+n}function v(e,t){return p(e,{delimiter:"_",...t})}function P(e,t){return T(e,{delimiter:"-",...t})}function k(e){return!1===e?e=>e.toLowerCase():t=>t.toLocaleLowerCase(e)}function O(e){return!1===e?e=>e.toUpperCase():t=>t.toLocaleUpperCase(e)}function C(e,t){return o=>`${t(o[0])}${e(o.slice(1))}`}function _(e,t){return(o,r)=>{const n=o[0];return(r>0&&n>="0"&&n<="9"?"_"+n:t(n))+e(o.slice(1))}}function D(e,t={}){const o=t.split??(t.separateNumbers?u:c),r=t.prefixCharacters??s,n=t.suffixCharacters??s;let i=0,a=e.length;for(;i<e.length;){const t=e.charAt(i);if(!r.includes(t))break;i++}for(;a>i;){const t=a-1,o=e.charAt(t);if(!n.includes(o))break;a=t}return[e.slice(0,i),o(e.slice(i,a)),e.slice(a)]}}},t={};function o(r){var n=t[r];if(void 0!==n)return n.exports;var i=t[r]={exports:{}};return e[r].call(i.exports,i,i.exports,o),i.exports}o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};o("./src/index.ts")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVNpZixPQUFPQyxZQUFhLENBQUUvM0IsTUFBTyxXQUU3REYsT0FBT0MsZUFBZThZLEVBQVMsYUFBYyxDQUFFN1ksT0FBTyxHQUFPLEVDRnBDczNCLEVBQW9CLGlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHN1cGVybm92YWlvL2V4cG9ydGVyLXRhaWx3aW5kLy4vbm9kZV9tb2R1bGVzL0BzdXBlcm5vdmFpby9zZGstZXhwb3J0ZXJzL2J1aWxkL3N1cGVybm92YS1zZGstdHlwZXNjcmlwdC5qcyIsIndlYnBhY2s6Ly9Ac3VwZXJub3ZhaW8vZXhwb3J0ZXItdGFpbHdpbmQvLi9jb25maWcudHMiLCJ3ZWJwYWNrOi8vQHN1cGVybm92YWlvL2V4cG9ydGVyLXRhaWx3aW5kLy4vc3JjL2NvbnN0YW50cy9kZWZhdWx0cy50cyIsIndlYnBhY2s6Ly9Ac3VwZXJub3ZhaW8vZXhwb3J0ZXItdGFpbHdpbmQvLi9zcmMvY29udGVudC90b2tlbi50cyIsIndlYnBhY2s6Ly9Ac3VwZXJub3ZhaW8vZXhwb3J0ZXItdGFpbHdpbmQvLi9zcmMvZmlsZXMvdGFpbHdpbmQtZmlsZS50cyIsIndlYnBhY2s6Ly9Ac3VwZXJub3ZhaW8vZXhwb3J0ZXItdGFpbHdpbmQvLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vQHN1cGVybm92YWlvL2V4cG9ydGVyLXRhaWx3aW5kLy4uLy4uL3V0aWxzL2Rpc3QvZW51bXMvQ29sb3JGb3JtYXQuanMiLCJ3ZWJwYWNrOi8vQHN1cGVybm92YWlvL2V4cG9ydGVyLXRhaWx3aW5kLy4uLy4uL3V0aWxzL2Rpc3QvZW51bXMvU3RyaW5nQ2FzZS5qcyIsIndlYnBhY2s6Ly9Ac3VwZXJub3ZhaW8vZXhwb3J0ZXItdGFpbHdpbmQvLi4vLi4vdXRpbHMvZGlzdC9oZWxwZXJzL0NTU0hlbHBlci5qcyIsIndlYnBhY2s6Ly9Ac3VwZXJub3ZhaW8vZXhwb3J0ZXItdGFpbHdpbmQvLi4vLi4vdXRpbHMvZGlzdC9oZWxwZXJzL0NvbG9ySGVscGVyLmpzIiwid2VicGFjazovL0BzdXBlcm5vdmFpby9leHBvcnRlci10YWlsd2luZC8uLi8uLi91dGlscy9kaXN0L2hlbHBlcnMvRmlsZUhlbHBlci5qcyIsIndlYnBhY2s6Ly9Ac3VwZXJub3ZhaW8vZXhwb3J0ZXItdGFpbHdpbmQvLi4vLi4vdXRpbHMvZGlzdC9oZWxwZXJzL0ZpbGVOYW1lSGVscGVyLmpzIiwid2VicGFjazovL0BzdXBlcm5vdmFpby9leHBvcnRlci10YWlsd2luZC8uLi8uLi91dGlscy9kaXN0L2hlbHBlcnMvR2VuZXJhbEhlbHBlci5qcyIsIndlYnBhY2s6Ly9Ac3VwZXJub3ZhaW8vZXhwb3J0ZXItdGFpbHdpbmQvLi4vLi4vdXRpbHMvZGlzdC9oZWxwZXJzL05hbWluZ0hlbHBlci5qcyIsIndlYnBhY2s6Ly9Ac3VwZXJub3ZhaW8vZXhwb3J0ZXItdGFpbHdpbmQvLi4vLi4vdXRpbHMvZGlzdC9oZWxwZXJzL1RoZW1lSGVscGVyLmpzIiwid2VicGFjazovL0BzdXBlcm5vdmFpby9leHBvcnRlci10YWlsd2luZC8uLi8uLi91dGlscy9kaXN0L2hlbHBlcnMvVG9rZW5IZWxwZXIuanMiLCJ3ZWJwYWNrOi8vQHN1cGVybm92YWlvL2V4cG9ydGVyLXRhaWx3aW5kLy4uLy4uL3V0aWxzL2Rpc3QvaGVscGVycy9Ub2tlbk5hbWVUcmFja2VyLmpzIiwid2VicGFjazovL0BzdXBlcm5vdmFpby9leHBvcnRlci10YWlsd2luZC8uLi8uLi91dGlscy9kaXN0L2luZGV4LmpzIiwid2VicGFjazovL0BzdXBlcm5vdmFpby9leHBvcnRlci10YWlsd2luZC8uLi8uLi91dGlscy9ub2RlX21vZHVsZXMvQHN1cGVybm92YWlvL3Nkay1leHBvcnRlcnMvYnVpbGQvc3VwZXJub3ZhLXNkay10eXBlc2NyaXB0LmpzIiwid2VicGFjazovL0BzdXBlcm5vdmFpby9leHBvcnRlci10YWlsd2luZC8uLi8uLi91dGlscy9ub2RlX21vZHVsZXMvY2hhbmdlLWNhc2UvZGlzdC9pbmRleC5qcyIsIndlYnBhY2s6Ly9Ac3VwZXJub3ZhaW8vZXhwb3J0ZXItdGFpbHdpbmQvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vQHN1cGVybm92YWlvL2V4cG9ydGVyLXRhaWx3aW5kL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9Ac3VwZXJub3ZhaW8vZXhwb3J0ZXItdGFpbHdpbmQvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9Ac3VwZXJub3ZhaW8vZXhwb3J0ZXItdGFpbHdpbmQvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9Ac3VwZXJub3ZhaW8vZXhwb3J0ZXItdGFpbHdpbmQvd2VicGFjay9zdGFydHVwIl0sInNvdXJjZXNDb250ZW50IjpbIigoKT0+e1widXNlIHN0cmljdFwiO3ZhciBlPXs0Mzc5OihlLHQpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5TdXBlcm5vdmFFcnJvcj12b2lkIDA7Y2xhc3MgbyBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKGUsdCxvLHIsbixpLGEpe3N1cGVyKGUpLHRoaXMuY29kZT10LHRoaXMuc3RhdHVzPW8sdGhpcy5mb3JtRXJyb3JzPXIsdGhpcy5yZXF1ZXN0SWQ9bix0aGlzLnNlcnZlclRpbWU9aSx0aGlzLnVybD1hfXN0YXRpYyBmcm9tTmV0d29ya1Jlc3BvbnNlKGUsdCxyKXt2YXIgbixpLGE7cmV0dXJuIG5ldyBvKGUubWVzc2FnZSxlLmVycm9yQ29kZXx8ZS5yZWFzb258fGUubGFiZWx8fG51bGwsZS5jb2RlfHx0LG51bGwhPT0obj1lLmZvcm1FcnJvcnMpJiZ2b2lkIDAhPT1uP246bnVsbCxudWxsIT09KGk9ZS5yZXF1ZXN0SWQpJiZ2b2lkIDAhPT1pP2k6bnVsbCxudWxsIT09KGE9ZS5zZXJ2ZXJUaW1lKSYmdm9pZCAwIT09YT9hOm51bGwscil9c3RhdGljIGZyb21Ob05ldHdvcmtSZXNwb25zZShlKXtyZXR1cm4gbmV3IG8oXCJObyBuZXR3b3JrIG9yIGludGVybmV0IHVucmVhY2hhYmxlXCIsXCJOT19ORVRXT1JLXCIsMTIxNjMsbnVsbCwobmV3IERhdGUpLnRvSVNPU3RyaW5nKCksbnVsbCxlKX1zdGF0aWMgZnJvbUNvZGUoZSl7cmV0dXJuIG5ldyBvKGUsZSxudWxsLG51bGwsbnVsbCxudWxsLG51bGwpfXN0YXRpYyBmcm9tTWVzc2FnZShlKXtyZXR1cm4gbmV3IG8oZSxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCl9aXNGaWVsZEVycm9yZWQoZSl7cmV0dXJuIHZvaWQgMCE9PXRoaXMuZm9ybUVycm9ycy5maW5kKCh0PT50LmtleT09PWUpKX1lcnJvckZvckZpZWxkKGUpe3ZhciB0O3JldHVybiBudWxsIT09KHQ9dGhpcy5mb3JtRXJyb3JzLmZpbmQoKHQ9PnQua2V5PT09ZSkpKSYmdm9pZCAwIT09dD90Om51bGx9dG9TdHJpbmcoKXt2YXIgZSx0LG8scixuLGk7cmV0dXJuYFxcbiAgICBFcnJvciB0aHJvd246ICR7dGhpcy5tZXNzYWdlfVxcblxcbiAgICBDb2RlOiAke251bGwhPT0oZT10aGlzLmNvZGUpJiZ2b2lkIDAhPT1lP2U6XCItXCJ9XFxuXFxuICAgIFN0YXR1czogJHtudWxsIT09KHQ9dGhpcy5zdGF0dXMpJiZ2b2lkIDAhPT10P3Q6XCItXCJ9XFxuXFxuICAgIEZpZWxkczogJHtKU09OLnN0cmluZ2lmeSh0aGlzLmZvcm1FcnJvcnMsbnVsbCwyKX1cXG5cXG4gICAgUmVxdWVzdCBJRDogJHtudWxsIT09KG89dGhpcy5yZXF1ZXN0SWQpJiZ2b2lkIDAhPT1vP286XCItXCJ9XFxuXFxuICAgIFNlcnZlciB0aW1lOiAke251bGwhPT0ocj10aGlzLnNlcnZlclRpbWUpJiZ2b2lkIDAhPT1yP3I6XCItXCJ9XFxuXFxuICAgIE5ldHdvcmsgVVJMOiAke251bGwhPT0obj10aGlzLnVybCkmJnZvaWQgMCE9PW4/bjpcIi1cIn1cXG5cXG4gICAgU3RhY2s6ICR7bnVsbCE9PShpPXRoaXMuc3RhY2spJiZ2b2lkIDAhPT1pP2k6XCItXCJ9XFxuICAgIGB9dG9IdW1hblJlYWRhYmxlKCl7cmV0dXJuYCR7dGhpcy5tZXNzYWdlfSR7dGhpcy5yZXF1ZXN0SWQ/YCAocmVxdWVzdCAke3RoaXMucmVxdWVzdElkfSlgOlwiXCJ9YH19dC5TdXBlcm5vdmFFcnJvcj1vfSw5OTMyOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5kb2NzSW1hZ2VSZWZUb1VybD10LkRvY3NJbWFnZVJlZlR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UucmVzb3VyY2U9XCJSZXNvdXJjZVwiLGUuZmlnbWFOb2RlPVwiRmlnbWFOb2RlXCJ9KG98fCh0LkRvY3NJbWFnZVJlZlR5cGU9bz17fSkpLHQuZG9jc0ltYWdlUmVmVG9Vcmw9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuO2lmKGUpc3dpdGNoKGUudHlwZSl7Y2FzZSBvLnJlc291cmNlOnJldHVybiBudWxsPT09KG49ZS5yZXNvdXJjZSl8fHZvaWQgMD09PW4/dm9pZCAwOm4udXJsO2Nhc2Ugby5maWdtYU5vZGU6aWYoIWUuZmlnbWFOb2RlfHwhZS5maWdtYU5vZGUuc291cmNlSWR8fCFlLmZpZ21hTm9kZS5mcmFtZVJlZmVyZW5jZUlkKXJldHVybjtyZXR1cm4gdC5yZXNvdXJjZXMuZ2V0RmlnbWFGcmFtZUhvc3RlZFVybCh7ZGVzaWduU3lzdGVtSWQ6ci5kc0lkLHZlcnNpb25JZDpyLnZlcnNpb25JZH0sZS5maWdtYU5vZGUuZnJhbWVSZWZlcmVuY2VJZCk7ZGVmYXVsdDpyZXR1cm59fX0sNTY3MzooZSx0KT0+e3ZhciBvO2Z1bmN0aW9uIHIoZSl7c3dpdGNoKGUudHlwZSl7Y2FzZSBvLmRvY3VtZW50YXRpb25JdGVtOnJldHVybmBAcGFnZToke2UuZG9jdW1lbnRhdGlvbkl0ZW1JZH1gO2Nhc2Ugby5wYWdlSGVhZGluZzpyZXR1cm5gQHBhZ2U6JHtlLmRvY3VtZW50YXRpb25JdGVtSWR9IyR7ZS5wYWdlSGVhZGluZ0lkfWA7Y2FzZSBvLnVybDpyZXR1cm4gZS51cmw7ZGVmYXVsdDpyZXR1cm59fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQubGlua0F0dHJpYnV0ZVRvRG9jc0xpbms9dC5kb2NzTGlua1RvTGlua0F0dHJpYnV0ZXM9dC5kb2NzTGlua1RvVXJsPXQuRG9jc0xpbmtSZWZUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLmRvY3VtZW50YXRpb25JdGVtPVwiRG9jdW1lbnRhdGlvbkl0ZW1cIixlLnBhZ2VIZWFkaW5nPVwiUGFnZUhlYWRpbmdcIixlLnVybD1cIlVybFwifShvfHwodC5Eb2NzTGlua1JlZlR5cGU9bz17fSkpLHQuZG9jc0xpbmtUb1VybD1yLHQuZG9jc0xpbmtUb0xpbmtBdHRyaWJ1dGVzPWZ1bmN0aW9uKGUpe2NvbnN0IHQ9cihlKTtpZih0KXJldHVybntocmVmOnQsdGFyZ2V0OmUub3BlbkluTmV3VGFiP1wiX2JsYW5rXCI6XCJfc2VsZlwifX0sdC5saW5rQXR0cmlidXRlVG9Eb2NzTGluaz1mdW5jdGlvbihlLHQpe2lmKCFlKXJldHVybjtjb25zdCByPVwiX2JsYW5rXCI9PT10O2lmKGUuc3RhcnRzV2l0aChcIkBwYWdlOlwiKSl7aWYoZS5pbmNsdWRlcyhcIiNcIikpe2NvbnN0W3Qsbl09ZS5yZXBsYWNlKFwiQHBhZ2U6XCIsXCJcIikuc3BsaXQoXCIjXCIpO3JldHVybnt0eXBlOm8ucGFnZUhlYWRpbmcsZG9jdW1lbnRhdGlvbkl0ZW1JZDp0LHBhZ2VIZWFkaW5nSWQ6bixvcGVuSW5OZXdUYWI6cn19cmV0dXJue3R5cGU6by5kb2N1bWVudGF0aW9uSXRlbSxkb2N1bWVudGF0aW9uSXRlbUlkOmUucmVwbGFjZShcIkBwYWdlOlwiLFwiXCIpLG9wZW5Jbk5ld1RhYjpyfX1yZXR1cm57dHlwZTpvLnVybCx1cmw6ZSxvcGVuSW5OZXdUYWI6cn19fSwyNjU3OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrU2hvcnRjdXQ9dC5Eb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrU2hvcnRjdXRUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLmV4dGVybmFsPVwiRXh0ZXJuYWxcIixlLmludGVybmFsPVwiSW50ZXJuYWxcIn0ob3x8KHQuRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VCbG9ja1Nob3J0Y3V0VHlwZT1vPXt9KSksdC5Eb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrU2hvcnRjdXQ9Y2xhc3N7Y29uc3RydWN0b3IoZSl7dmFyIHQ7ZS51cmw/dGhpcy50eXBlPW8uZXh0ZXJuYWw6dGhpcy50eXBlPW8uaW50ZXJuYWwsdGhpcy50aXRsZT10aGlzLnNob3J0Y3V0VGl0bGVGcm9tTW9kZWwoZSx0aGlzLnR5cGUpLHRoaXMuZGVzY3JpcHRpb249dGhpcy5zaG9ydGN1dERlc2NyaXB0aW9uRnJvbU1vZGVsKGUsdGhpcy50eXBlKSx0aGlzLnByZXZpZXdVcmw9dGhpcy5zaG9ydGN1dFByZXZpZXdVcmxGcm9tTW9kZWwoZSksdGhpcy50eXBlPT09by5pbnRlcm5hbCYmKG51bGw9PT0odD1lLmRvY3VtZW50YXRpb25JdGVtUHJldmlldyl8fHZvaWQgMD09PXQ/dm9pZCAwOnQudmFsaWQpJiZlLmRvY3VtZW50YXRpb25JdGVtSWQ/dGhpcy5pbnRlcm5hbElkPWUuZG9jdW1lbnRhdGlvbkl0ZW1JZDoodGhpcy5pbnRlcm5hbElkPW51bGwsdGhpcy50eXBlPT09by5leHRlcm5hbCYmZS51cmw/dGhpcy5leHRlcm5hbFVybD1lLnVybDp0aGlzLmV4dGVybmFsVXJsPW51bGwpfXNob3J0Y3V0VGl0bGVGcm9tTW9kZWwoZSx0KXt2YXIgcixuLGksYSxjO2xldCBsPW51bGw7cmV0dXJuIGUudGl0bGUmJmUudGl0bGUudHJpbSgpLmxlbmd0aD4wP2w9ZS50aXRsZTp0PT09by5pbnRlcm5hbD9sPW51bGwhPT0obj1udWxsPT09KHI9ZS5kb2N1bWVudGF0aW9uSXRlbVByZXZpZXcpfHx2b2lkIDA9PT1yP3ZvaWQgMDpyLnRpdGxlKSYmdm9pZCAwIT09bj9uOm51bGw6dD09PW8uZXh0ZXJuYWwmJihsPW51bGwhPT0oYz1udWxsIT09KGE9bnVsbD09PShpPWUudXJsUHJldmlldyl8fHZvaWQgMD09PWk/dm9pZCAwOmkudGl0bGUpJiZ2b2lkIDAhPT1hP2E6ZS51cmwpJiZ2b2lkIDAhPT1jP2M6bnVsbCksbCYmMCE9PWwudHJpbSgpLmxlbmd0aD9sOm51bGx9c2hvcnRjdXREZXNjcmlwdGlvbkZyb21Nb2RlbChlLHQpe3ZhciByO2xldCBuPW51bGw7cmV0dXJuIGUuZGVzY3JpcHRpb24mJmUuZGVzY3JpcHRpb24udHJpbSgpLmxlbmd0aD4wP249ZS5kZXNjcmlwdGlvbjp0PT09by5leHRlcm5hbCYmKG49bnVsbD09PShyPWUudXJsUHJldmlldyl8fHZvaWQgMD09PXI/dm9pZCAwOnIuZGVzY3JpcHRpb24pLG4mJjAhPT1uLnRyaW0oKS5sZW5ndGg/bjpudWxsfXNob3J0Y3V0UHJldmlld1VybEZyb21Nb2RlbChlKXt2YXIgdCxvLHIsbixpO3JldHVybiBudWxsIT09KGk9bnVsbCE9PShyPW51bGwhPT0odD1lLmFzc2V0VXJsKSYmdm9pZCAwIT09dD90Om51bGw9PT0obz1lLmFzc2V0KXx8dm9pZCAwPT09bz92b2lkIDA6by51cmwpJiZ2b2lkIDAhPT1yP3I6bnVsbD09PShuPWUudXJsUHJldmlldyl8fHZvaWQgMD09PW4/dm9pZCAwOm4udGh1bWJuYWlsVXJsKSYmdm9pZCAwIT09aT9pOm51bGx9fX0sNzQ3NjooZSx0KT0+e3ZhciBvLHI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5UZXh0QWxpZ25tZW50PXQuQWxpZ25tZW50PXZvaWQgMCxmdW5jdGlvbihlKXtlLmxlZnQ9XCJMZWZ0XCIsZS5jZW50ZXI9XCJDZW50ZXJcIixlLnN0cmV0Y2g9XCJTdHJldGNoXCJ9KG98fCh0LkFsaWdubWVudD1vPXt9KSksZnVuY3Rpb24oZSl7ZS5sZWZ0PVwiTGVmdFwiLGUuY2VudGVyPVwiQ2VudGVyXCIsZS5yaWdodD1cIlJpZ2h0XCJ9KHJ8fCh0LlRleHRBbGlnbm1lbnQ9cj17fSkpfSw4NzM4OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Bc3NldEZvcm1hdD12b2lkIDAsZnVuY3Rpb24oZSl7ZS5wbmc9XCJwbmdcIixlLnBkZj1cInBkZlwiLGUuc3ZnPVwic3ZnXCJ9KG98fCh0LkFzc2V0Rm9ybWF0PW89e30pKX0sOTE1OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Bc3NldFNjYWxlPXZvaWQgMCxmdW5jdGlvbihlKXtlLngxPVwieDFcIixlLngyPVwieDJcIixlLngzPVwieDNcIixlLng0PVwieDRcIn0ob3x8KHQuQXNzZXRTY2FsZT1vPXt9KSl9LDg5OTooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuQXNzZXRTY2FsZVR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuYXNwZWN0RmlsbD1cIkFzcGVjdEZpbGxcIixlLmFzcGVjdEZpdD1cIkFzcGVjdEZpdFwifShvfHwodC5Bc3NldFNjYWxlVHlwZT1vPXt9KSl9LDYxOTI6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkJsdXJUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLmxheWVyPVwiTGF5ZXJcIixlLmJhY2tncm91bmQ9XCJCYWNrZ3JvdW5kXCJ9KG98fCh0LkJsdXJUeXBlPW89e30pKX0sMTE2MDooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuQUxMX0JPUkRFUl9QT1NJVElPTlM9dC5Cb3JkZXJQb3NpdGlvbj12b2lkIDAsZnVuY3Rpb24oZSl7ZS5pbnNpZGU9XCJJbnNpZGVcIixlLmNlbnRlcj1cIkNlbnRlclwiLGUub3V0c2lkZT1cIk91dHNpZGVcIn0ob3x8KHQuQm9yZGVyUG9zaXRpb249bz17fSkpLHQuQUxMX0JPUkRFUl9QT1NJVElPTlM9W28uaW5zaWRlLG8uY2VudGVyLG8ub3V0c2lkZV19LDQ1NDY6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkFMTF9CT1JERVJfU1RZTEVTPXQuQm9yZGVyU3R5bGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuZGFzaGVkPVwiRGFzaGVkXCIsZS5kb3R0ZWQ9XCJEb3R0ZWRcIixlLnNvbGlkPVwiU29saWRcIixlLmdyb292ZT1cIkdyb292ZVwifShvfHwodC5Cb3JkZXJTdHlsZT1vPXt9KSksdC5BTExfQk9SREVSX1NUWUxFUz1bby5kYXNoZWQsby5kb3R0ZWQsby5zb2xpZCxvLmdyb292ZV19LDgwNDI6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkltcG9ydFdhcm5pbmdUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLlVuc3VwcG9ydGVkRmlsbD1cIlVuc3VwcG9ydGVkRmlsbFwiLGUuVW5zdXBwb3J0ZWRTdHJva2U9XCJVbnN1cHBvcnRlZFN0cm9rZVwiLGUuVW5zdXBwb3J0ZWRFZmZlY3Q9XCJVbnN1cHBvcnRlZEVmZmVjdFwiLGUuU3R5bGVOb3RBcHBsaWVkPVwiU3R5bGVOb3RBcHBsaWVkXCIsZS5Ob1B1Ymxpc2hlZFN0eWxlcz1cIk5vUHVibGlzaGVkU3R5bGVzXCIsZS5Ob1B1Ymxpc2hlZENvbXBvbmVudHM9XCJOb1B1Ymxpc2hlZENvbXBvbmVudHNcIixlLk5vUHVibGlzaGVkQXNzZXRzPVwiTm9QdWJsaXNoZWRBc3NldHNcIixlLk5vVmVyc2lvbkZvdW5kPVwiTm9WZXJzaW9uRm91bmRcIixlLkNvbXBvbmVudEhhc05vVGh1bWJuYWlsPVwiQ29tcG9uZW50SGFzTm9UaHVtYm5haWxcIixlLkR1cGxpY2F0ZUltcG9ydGVkU3R5bGVJZD1cIkR1cGxpY2F0ZUltcG9ydGVkU3R5bGVJZFwiLGUuRHVwbGljYXRlSW1wb3J0ZWRTdHlsZVBhdGg9XCJEdXBsaWNhdGVJbXBvcnRlZFN0eWxlUGF0aFwiLGUuTm9QdWJsaXNoZWRFbGVtZW50cz1cIk5vUHVibGlzaGVkRWxlbWVudHNcIixlLk5vVW5wdWJsaXNoZWRTdHlsZXM9XCJOb1VucHVibGlzaGVkU3R5bGVzXCJ9KG98fCh0LkltcG9ydFdhcm5pbmdUeXBlPW89e30pKX0sNTY5NTooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuQ3VzdG9tRG9tYWluRXJyb3JDb2RlPXZvaWQgMCxmdW5jdGlvbihlKXtlLmdlbmVyYWxFcnJvcj1cIkdlbmVyYWxFcnJvclwiLGUuZG5zTm90Q29uZmlndXJlZD1cIkROU05vdENvbmZpZ3VyZWRcIixlLm1haW50ZW5hbmNlPVwiTWFpbnRlbmFuY2VcIn0ob3x8KHQuQ3VzdG9tRG9tYWluRXJyb3JDb2RlPW89e30pKX0sNzczNzooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuQ3VzdG9tRG9tYWluU3RhdGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuaW5pdGlhbD1cIkluaXRpYWxcIixlLmRvbWFpblNldHVwSW5Qcm9ncmVzcz1cIkRvbWFpblNldHVwSW5Qcm9ncmVzc1wiLGUuZG9tYWluU2V0dXBGYWlsZWQ9XCJEb21haW5TZXR1cEZhaWxlZFwiLGUuZG9tYWluU2V0dXBzU3VjY2VzPVwiRG9tYWluU2V0dXBTdWNjZXNzXCIsZS5zc2xTZXR1cEluUHJvZ3Jlc3M9XCJTU0xTZXR1cEluUHJvZ3Jlc3NcIixlLnNzbFNldHVwRmFpbGVkPVwiU1NMU2V0dXBGYWlsZWRcIixlLnNzbFNldHVwU3VjY2Vzcz1cIlNTTFNldHVwU3VjY2Vzc1wifShvfHwodC5DdXN0b21Eb21haW5TdGF0ZT1vPXt9KSl9LDU2NTE6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3NCbG9ja0JlaGF2aW9yRGF0YVR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuaXRlbT1cIkl0ZW1cIixlLnRva2VuPVwiVG9rZW5cIixlLmFzc2V0PVwiQXNzZXRcIixlLmNvbXBvbmVudD1cIkNvbXBvbmVudFwiLGUuZmlnbWFOb2RlPVwiRmlnbWFOb2RlXCIsZS5maWdtYUNvbXBvbmVudD1cIkZpZ21hQ29tcG9uZW50XCJ9KG98fCh0LkRvY3NCbG9ja0JlaGF2aW9yRGF0YVR5cGU9bz17fSkpfSwzNzMzOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2NzQmxvY2tCZWhhdmlvclNlbGVjdGlvblR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuZW50aXR5PVwiRW50aXR5XCIsZS5ncm91cD1cIkdyb3VwXCIsZS5lbnRpdHlBbmRHcm91cD1cIkVudGl0eUFuZEdyb3VwXCJ9KG98fCh0LkRvY3NCbG9ja0JlaGF2aW9yU2VsZWN0aW9uVHlwZT1vPXt9KSl9LDg4OTA6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3NCbG9ja0ltYWdlUHJvcGVydHlBc3BlY3RSYXRpbz12b2lkIDAsZnVuY3Rpb24oZSl7ZS5hdXRvPVwiQXV0b1wiLGUuc3F1YXJlPVwiU3F1YXJlXCIsZS5sYW5kc2NhcGU9XCJMYW5kc2NhcGVcIixlLnBvcnRyYWl0PVwiUG9ydHJhaXRcIixlLndpZGU9XCJXaWRlXCJ9KG98fCh0LkRvY3NCbG9ja0ltYWdlUHJvcGVydHlBc3BlY3RSYXRpbz1vPXt9KSl9LDkzNzc6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3NCbG9ja0l0ZW1FbnRpdHlUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLnRva2VuPVwiVG9rZW5cIixlLnRva2VuR3JvdXA9XCJUb2tlbkdyb3VwXCIsZS5hc3NldD1cIkFzc2V0XCIsZS5hc3NldEdyb3VwPVwiQXNzZXRHcm91cFwiLGUuY29tcG9uZW50PVwiQ29tcG9uZW50XCIsZS5jb21wb25lbnRHcm91cD1cIkNvbXBvbmVudEdyb3VwXCJ9KG98fCh0LkRvY3NCbG9ja0l0ZW1FbnRpdHlUeXBlPW89e30pKX0sNTg4MzooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9jc0Jsb2NrSXRlbVByb3BlcnR5T3B0aW9uUmVuZGVyaW5nU3R5bGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2Uuc2VnbWVudGVkQ29udHJvbD1cIlNlZ21lbnRlZENvbnRyb2xcIixlLnRvZ2dsZUJ1dHRvbj1cIlRvZ2dsZUJ1dHRvblwiLGUuc2VsZWN0PVwiU2VsZWN0XCIsZS5jaGVja2JveD1cIkNoZWNrYm94XCJ9KG98fCh0LkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eU9wdGlvblJlbmRlcmluZ1N0eWxlPW89e30pKX0sODA2MTooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9jc0Jsb2NrSXRlbVByb3BlcnR5UmljaFRleHRTdHlsZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS50aXRsZTE9XCJUaXRsZTFcIixlLnRpdGxlMj1cIlRpdGxlMlwiLGUudGl0bGUzPVwiVGl0bGUzXCIsZS50aXRsZTQ9XCJUaXRsZTRcIixlLnRpdGxlNT1cIlRpdGxlNVwiLGUucXVvdGU9XCJRdW90ZVwiLGUuY2FsbG91dD1cIkNhbGxvdXRcIixlLm9sPVwiT0xcIixlLnVsPVwiVUxcIn0ob3x8KHQuRG9jc0Jsb2NrSXRlbVByb3BlcnR5UmljaFRleHRTdHlsZT1vPXt9KSl9LDc0Nzk6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eVRleHRTdHlsZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5zbWFsbD1cIlNtYWxsXCIsZS5yZWd1bGFyPVwiUmVndWxhclwiLGUuYm9sZD1cIkJvbGRcIn0ob3x8KHQuRG9jc0Jsb2NrSXRlbVByb3BlcnR5VGV4dFN0eWxlPW89e30pKX0sNjgzOTooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9jc0Jsb2NrSXRlbVByb3BlcnR5VHlwZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5yaWNoVGV4dD1cIlJpY2hUZXh0XCIsZS5tdWx0aVJpY2hUZXh0PVwiTXVsdGlSaWNoVGV4dFwiLGUudGV4dD1cIlRleHRcIixlLnJpY2hUZXh0RWRpdG9yPVwiUmljaFRleHRFZGl0b3JcIixlLmJvb2xlYW49XCJCb29sZWFuXCIsZS5udW1iZXI9XCJOdW1iZXJcIixlLnNpbmdsZVNlbGVjdD1cIlNpbmdsZVNlbGVjdFwiLGUubXVsdGlTZWxlY3Q9XCJNdWx0aVNlbGVjdFwiLGUuaW1hZ2U9XCJJbWFnZVwiLGUudG9rZW49XCJUb2tlblwiLGUudG9rZW5UeXBlPVwiVG9rZW5UeXBlXCIsZS50b2tlblByb3BlcnR5PVwiVG9rZW5Qcm9wZXJ0eVwiLGUuY29tcG9uZW50PVwiQ29tcG9uZW50XCIsZS5jb21wb25lbnRQcm9wZXJ0eT1cIkNvbXBvbmVudFByb3BlcnR5XCIsZS5hc3NldD1cIkFzc2V0XCIsZS5hc3NldFByb3BlcnR5PVwiQXNzZXRQcm9wZXJ0eVwiLGUuZW1iZWRVUkw9XCJFbWJlZFVSTFwiLGUudXJsPVwiVVJMXCIsZS5tYXJrZG93bj1cIk1hcmtkb3duXCIsZS5jb2RlPVwiQ29kZVwiLGUuY29kZVNhbmRib3g9XCJDb2RlU2FuZGJveFwiLGUudGFibGU9XCJUYWJsZVwiLGUuZGl2aWRlcj1cIkRpdmlkZXJcIixlLnN0b3J5Ym9vaz1cIlN0b3J5Ym9va1wiLGUuY29sb3I9XCJDb2xvclwiLGUuZmlnbWFOb2RlPVwiRmlnbWFOb2RlXCIsZS5maWdtYUNvbXBvbmVudD1cIkZpZ21hQ29tcG9uZW50XCJ9KG98fCh0LkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eVR5cGU9bz17fSkpfSw4MDk1OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2NzQmxvY2tJdGVtVmFyaWFudExheW91dFR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuY29sdW1uPVwiQ29sdW1uXCIsZS5yb3c9XCJSb3dcIn0ob3x8KHQuRG9jc0Jsb2NrSXRlbVZhcmlhbnRMYXlvdXRUeXBlPW89e30pKX0sNzI5MTooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9jc0Jsb2NrSXRlbVZhcmlhbnRMYXlvdXRXaWR0aD12b2lkIDAsZnVuY3Rpb24oZSl7ZS5jMT1cIjFcIixlLmMyPVwiMlwiLGUuYzM9XCIzXCIsZS5jND1cIjRcIixlLmM1PVwiNVwiLGUuYzY9XCI2XCIsZS5jNz1cIjdcIixlLmM4PVwiOFwiLGUuYzk9XCI5XCIsZS5jMTA9XCIxMFwiLGUuYzExPVwiMTFcIixlLmMxMj1cIjEyXCJ9KG98fCh0LkRvY3NCbG9ja0l0ZW1WYXJpYW50TGF5b3V0V2lkdGg9bz17fSkpfSw5MTMzOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2NzQmxvY2tPcHRpb25Db2xvcj12b2lkIDAsZnVuY3Rpb24oZSl7ZS5ncmVlbj1cIkdyZWVuXCIsZS5yZWQ9XCJSZWRcIixlLnllbGxvdz1cIlllbGxvd1wiLGUuYmx1ZT1cIkJsdWVcIixlLnB1cnBsZT1cIlB1cnBsZVwiLGUub3JhbmdlPVwiT3JhbmdlXCIsZS5waW5rPVwiUGlua1wiLGUudGVhbD1cIlRlYWxcIixlLmdyZXk9XCJHcmV5XCIsZS5saWdodEdyZXk9XCJMaWdodEdyZXlcIixlLmN5YW49XCJDeWFuXCIsZS5mdWNoc2lhPVwiRnVjaHNpYVwifShvfHwodC5Eb2NzQmxvY2tPcHRpb25Db2xvcj1vPXt9KSl9LDU5NjM6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3NCbG9ja09wdGlvblJlbmRlcmluZ1N0eWxlPXZvaWQgMCxmdW5jdGlvbihlKXtlLnNlZ21lbnRlZENvbnRyb2w9XCJTZWdtZW50ZWRDb250cm9sXCIsZS50b2dnbGVCdXR0b249XCJUb2dnbGVCdXR0b25cIixlLnNlbGVjdD1cIlNlbGVjdFwiLGUuY2hlY2tib3g9XCJDaGVja2JveFwifShvfHwodC5Eb2NzQmxvY2tPcHRpb25SZW5kZXJpbmdTdHlsZT1vPXt9KSl9LDY2NDQ6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3NCbG9ja1JpY2hUZXh0UHJvcGVydHlTdHlsZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS50aXRsZTE9XCJUaXRsZTFcIixlLnRpdGxlMj1cIlRpdGxlMlwiLGUudGl0bGUzPVwiVGl0bGUzXCIsZS50aXRsZTQ9XCJUaXRsZTRcIixlLnRpdGxlNT1cIlRpdGxlNVwiLGUucXVvdGU9XCJRdW90ZVwiLGUuY2FsbG91dD1cIkNhbGxvdXRcIixlLmRlZmF1bHQ9XCJEZWZhdWx0XCJ9KG98fCh0LkRvY3NCbG9ja1JpY2hUZXh0UHJvcGVydHlTdHlsZT1vPXt9KSl9LDMwNjooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9jc0Jsb2NrVGV4dFByb3BlcnR5U3R5bGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UudGl0bGUxPVwiVGl0bGUxXCIsZS50aXRsZTI9XCJUaXRsZTJcIixlLnRpdGxlMz1cIlRpdGxlM1wiLGUudGl0bGU0PVwiVGl0bGU0XCIsZS50aXRsZTU9XCJUaXRsZTVcIixlLmRlZmF1bHQ9XCJEZWZhdWx0XCIsZS5kZWZhdWx0Qm9sZD1cIkRlZmF1bHRCb2xkXCIsZS5kZWZhdWx0U2VtaWJvbGQ9XCJEZWZhdWx0U2VtaWJvbGRcIixlLnNtYWxsPVwiU21hbGxcIixlLnNtYWxsQm9sZD1cIlNtYWxsQm9sZFwiLGUuc21hbGxTZW1pYm9sZD1cIlNtYWxsU2VtaWJvbGRcIixlLmN1c3RvbT1cIkN1c3RvbVwifShvfHwodC5Eb2NzQmxvY2tUZXh0UHJvcGVydHlTdHlsZT1vPXt9KSl9LDQwNjg6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3NFbnRpdHlHcm91cEJlaGF2aW9yPXZvaWQgMCxmdW5jdGlvbihlKXtlLmdyb3VwPVwiR3JvdXBcIixlLnRhYnM9XCJUYWJzXCJ9KG98fCh0LkRvY3NFbnRpdHlHcm91cEJlaGF2aW9yPW89e30pKX0sMTIzMzooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9jc0VudGl0eVR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuZ3JvdXA9XCJHcm91cFwiLGUucGFnZT1cIlBhZ2VcIn0ob3x8KHQuRG9jc0VudGl0eVR5cGU9bz17fSkpfSw3OTcxOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2NzU2VjdGlvblR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UucGxhaW49XCJQbGFpblwiLGUudGFicz1cIlRhYnNcIn0ob3x8KHQuRG9jc1NlY3Rpb25UeXBlPW89e30pKX0sNTEwMjooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9jdW1lbnRhdGlvbkxlZ2FjeUNhbGxvdXRUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLmluZm89XCJJbmZvXCIsZS5zdWNjZXNzPVwiU3VjY2Vzc1wiLGUud2FybmluZz1cIldhcm5pbmdcIixlLmVycm9yPVwiRXJyb3JcIn0ob3x8KHQuRG9jdW1lbnRhdGlvbkxlZ2FjeUNhbGxvdXRUeXBlPW89e30pKX0sMjEyMzooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9jdW1lbnRhdGlvbkxlZ2FjeUdyb3VwQmVoYXZpb3I9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuZ3JvdXA9XCJHcm91cFwiLGUudGFicz1cIlRhYnNcIn0ob3x8KHQuRG9jdW1lbnRhdGlvbkxlZ2FjeUdyb3VwQmVoYXZpb3I9bz17fSkpfSw5ODk2OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2N1bWVudGF0aW9uTGVnYWN5SGVhZGluZ1R5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2VbZS5oMT0xXT1cImgxXCIsZVtlLmgyPTJdPVwiaDJcIixlW2UuaDM9M109XCJoM1wifShvfHwodC5Eb2N1bWVudGF0aW9uTGVnYWN5SGVhZGluZ1R5cGU9bz17fSkpfSw3Mzc5OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2N1bWVudGF0aW9uTGVnYWN5SXRlbVR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuZ3JvdXA9XCJHcm91cFwiLGUucGFnZT1cIlBhZ2VcIn0ob3x8KHQuRG9jdW1lbnRhdGlvbkxlZ2FjeUl0ZW1UeXBlPW89e30pKX0sMTQyMzooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VBc3NldFR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuaW1hZ2U9XCJpbWFnZVwiLGUuZmlnbWFGcmFtZT1cImZpZ21hRnJhbWVcIn0ob3x8KHQuRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VBc3NldFR5cGU9bz17fSkpfSwxNjAxOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrVGhlbWVUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLm92ZXJyaWRlPVwiT3ZlcnJpZGVcIixlLmNvbXBhcmlzb249XCJDb21wYXJpc29uXCJ9KG98fCh0LkRvY3VtZW50YXRpb25MZWdhY3lQYWdlQmxvY2tUaGVtZVR5cGU9bz17fSkpfSwxODQ2OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrVHlwZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS50ZXh0PVwiVGV4dFwiLGUuaGVhZGluZz1cIkhlYWRpbmdcIixlLmNvZGU9XCJDb2RlXCIsZS51bm9yZGVyZWRMaXN0PVwiVW5vcmRlcmVkTGlzdFwiLGUub3JkZXJlZExpc3Q9XCJPcmRlcmVkTGlzdFwiLGUucXVvdGU9XCJRdW90ZVwiLGUuY2FsbG91dD1cIkNhbGxvdXRcIixlLmRpdmlkZXI9XCJEaXZpZGVyXCIsZS5pbWFnZT1cIkltYWdlXCIsZS50b2tlbj1cIlRva2VuXCIsZS50b2tlbkxpc3Q9XCJUb2tlbkxpc3RcIixlLnRva2VuR3JvdXA9XCJUb2tlbkdyb3VwXCIsZS5zaG9ydGN1dHM9XCJTaG9ydGN1dHNcIixlLmxpbms9XCJMaW5rXCIsZS5maWdtYUVtYmVkPVwiRmlnbWFFbWJlZFwiLGUueW91dHViZUVtYmVkPVwiWW91dHViZUVtYmVkXCIsZS5zdG9yeWJvb2tFbWJlZD1cIlN0b3J5Ym9va0VtYmVkXCIsZS5nZW5lcmljRW1iZWQ9XCJFbWJlZFwiLGUuZmlnbWFGcmFtZXM9XCJGaWdtYUZyYW1lc1wiLGUuY3VzdG9tPVwiQ3VzdG9tXCIsZS5yZW5kZXJDb2RlPVwiUmVuZGVyQ29kZVwiLGUuY29tcG9uZW50QXNzZXRzPVwiQ29tcG9uZW50QXNzZXRzXCIsZS5jb2x1bW49XCJDb2x1bW5cIixlLmNvbHVtbkl0ZW09XCJDb2x1bW5JdGVtXCIsZS50YWJzPVwiVGFic1wiLGUudGFiSXRlbT1cIlRhYkl0ZW1cIixlLnRhYmxlPVwiVGFibGVcIixlLnRhYmxlQ2VsbD1cIlRhYmxlQ2VsbFwiLGUudGFibGVSb3c9XCJUYWJsZVJvd1wifShvfHwodC5Eb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrVHlwZT1vPXt9KSl9LDEyNTU6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkZyYW1lQWxpZ25tZW50PXZvaWQgMCxmdW5jdGlvbihlKXtlLmZyYW1lSGVpZ2h0PVwiRnJhbWVIZWlnaHRcIixlLmNlbnRlcj1cIkNlbnRlclwifShvfHwodC5GcmFtZUFsaWdubWVudD1vPXt9KSl9LDM3MTg6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkZyYW1lTGF5b3V0PXZvaWQgMCxmdW5jdGlvbihlKXtlLmM4PVwiQzhcIixlLmM3PVwiQzdcIixlLmM2PVwiQzZcIixlLmM1PVwiQzVcIixlLmM0PVwiQzRcIixlLmMzPVwiQzNcIixlLmMyPVwiQzJcIixlLmMxPVwiQzFcIixlLmMxNzU9XCJDMV83NVwifShvfHwodC5GcmFtZUxheW91dD1vPXt9KSl9LDE6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkdyYWRpZW50VHlwZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5saW5lYXI9XCJMaW5lYXJcIixlLnJhZGlhbD1cIlJhZGlhbFwiLGUuYW5ndWxhcj1cIkFuZ3VsYXJcIn0ob3x8KHQuR3JhZGllbnRUeXBlPW89e30pKX0sOTM0OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5JY29uU2V0PXZvaWQgMCxmdW5jdGlvbihlKXtlLmNoZWNrQ2lyY2xlPVwiQ2hlY2tDaXJjbGVcIixlLmNyb3NzQ2lyY2xlPVwiQ3Jvc3NDaXJjbGVcIixlLmFsZXJ0PVwiQWxlcnRcIn0ob3x8KHQuSWNvblNldD1vPXt9KSl9LDI2NzQ6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LlJpY2hUZXh0U3BhbkF0dHJpYnV0ZVR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuYm9sZD1cIkJvbGRcIixlLml0YWxpYz1cIkl0YWxpY1wiLGUubGluaz1cIkxpbmtcIixlLnN0cmlrZXRocm91Z2g9XCJTdHJpa2V0aHJvdWdoXCIsZS5jb2RlPVwiQ29kZVwifShvfHwodC5SaWNoVGV4dFNwYW5BdHRyaWJ1dGVUeXBlPW89e30pKX0sOTEyNTooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuU2hhZG93VHlwZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5kcm9wPVwiRHJvcFwiLGUuaW5uZXI9XCJJbm5lclwifShvfHwodC5TaGFkb3dUeXBlPW89e30pKX0sNDY1MjooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuU291cmNlVHlwZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5maWdtYT1cIkZpZ21hXCIsZS50b2tlblN0dWRpbz1cIlRva2VuU3R1ZGlvXCIsZS5maWdtYVZhcmlhYmxlc1BsdWdpbj1cIkZpZ21hVmFyaWFibGVzUGx1Z2luXCJ9KG98fCh0LlNvdXJjZVR5cGU9bz17fSkpfSw5MjI6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LlRleHRDYXNlPXZvaWQgMCxmdW5jdGlvbihlKXtlLm9yaWdpbmFsPVwiT3JpZ2luYWxcIixlLnVwcGVyPVwiVXBwZXJcIixlLmxvd2VyPVwiTG93ZXJcIixlLmNhbWVsPVwiQ2FtZWxcIixlLnNtYWxsQ2Fwcz1cIlNtYWxsQ2Fwc1wifShvfHwodC5UZXh0Q2FzZT1vPXt9KSl9LDcwNDA6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LlRleHREZWNvcmF0aW9uPXZvaWQgMCxmdW5jdGlvbihlKXtlLm9yaWdpbmFsPVwiTm9uZVwiLGUudW5kZXJsaW5lPVwiVW5kZXJsaW5lXCIsZS5zdHJpa2V0aHJvdWdoPVwiU3RyaWtldGhyb3VnaFwifShvfHwodC5UZXh0RGVjb3JhdGlvbj1vPXt9KSl9LDM3ODg6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRUX1RPS0VOX1RZUEVTPXQudG9rZW5UeXBlSXNSZWZlcmVuY2FibGU9dC5SRUZFUkVOQ0FCTEVfVE9LRU5fVFlQRVM9dC5SRVBMQUNBQkxFX1RPS0VOX1RZUEVTPXQudG9rZW5UeXBlSXNOb25QdXJlPXQudG9rZW5UeXBlSXNQdXJlPXQuUFVSRV9UT0tFTl9UWVBFUz10LkFMTF9UT0tFTl9UWVBFUz10Lk1TX0RJTUVOU0lPTl9UT0tFTl9UWVBFUz10LlJBV19ESU1FTlNJT05fVE9LRU5fVFlQRVM9dC5ESU1FTlNJT05fVE9LRU5fVFlQRVM9dC5PUFRJT05fVE9LRU5fVFlQRVM9dC5TVFJJTkdfVE9LRU5fVFlQRVM9dC5Ub2tlblR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuY29sb3I9XCJDb2xvclwiLGUudHlwb2dyYXBoeT1cIlR5cG9ncmFwaHlcIixlLnNoYWRvdz1cIlNoYWRvd1wiLGUuYm9yZGVyPVwiQm9yZGVyXCIsZS5ncmFkaWVudD1cIkdyYWRpZW50XCIsZS5ibHVyPVwiQmx1clwiLGUucmFkaXVzPVwiQm9yZGVyUmFkaXVzXCIsZS5ib3JkZXJXaWR0aD1cIkJvcmRlcldpZHRoXCIsZS5kdXJhdGlvbj1cIkR1cmF0aW9uXCIsZS5mb250U2l6ZT1cIkZvbnRTaXplXCIsZS5kaW1lbnNpb249XCJEaW1lbnNpb25cIixlLmxldHRlclNwYWNpbmc9XCJMZXR0ZXJTcGFjaW5nXCIsZS5saW5lSGVpZ2h0PVwiTGluZUhlaWdodFwiLGUub3BhY2l0eT1cIk9wYWNpdHlcIixlLnBhcmFncmFwaFNwYWNpbmc9XCJQYXJhZ3JhcGhTcGFjaW5nXCIsZS5zaXplPVwiU2l6ZVwiLGUuc3BhY2U9XCJTcGFjZVwiLGUuekluZGV4PVwiWkluZGV4XCIsZS50ZXh0RGVjb3JhdGlvbj1cIlRleHREZWNvcmF0aW9uXCIsZS50ZXh0Q2FzZT1cIlRleHRDYXNlXCIsZS52aXNpYmlsaXR5PVwiVmlzaWJpbGl0eVwiLGUuZm9udEZhbWlseT1cIkZvbnRGYW1pbHlcIixlLmZvbnRXZWlnaHQ9XCJGb250V2VpZ2h0XCIsZS5zdHJpbmc9XCJTdHJpbmdcIixlLnByb2R1Y3RDb3B5PVwiUHJvZHVjdENvcHlcIn0ob3x8KHQuVG9rZW5UeXBlPW89e30pKSx0LlNUUklOR19UT0tFTl9UWVBFUz1bby5zdHJpbmcsby5wcm9kdWN0Q29weSxvLmZvbnRGYW1pbHksby5mb250V2VpZ2h0XSx0Lk9QVElPTl9UT0tFTl9UWVBFUz1bby50ZXh0Q2FzZSxvLnRleHREZWNvcmF0aW9uLG8udmlzaWJpbGl0eV0sdC5ESU1FTlNJT05fVE9LRU5fVFlQRVM9W28uZGltZW5zaW9uLG8uc2l6ZSxvLnNwYWNlLG8ub3BhY2l0eSxvLmZvbnRTaXplLG8ubGluZUhlaWdodCxvLmxldHRlclNwYWNpbmcsby5wYXJhZ3JhcGhTcGFjaW5nLG8uYm9yZGVyV2lkdGgsby5yYWRpdXMsby5kdXJhdGlvbixvLnpJbmRleF0sdC5SQVdfRElNRU5TSU9OX1RPS0VOX1RZUEVTPVtvLm9wYWNpdHksby56SW5kZXhdLHQuTVNfRElNRU5TSU9OX1RPS0VOX1RZUEVTPVtvLmR1cmF0aW9uXSx0LkFMTF9UT0tFTl9UWVBFUz1bLi4udC5ESU1FTlNJT05fVE9LRU5fVFlQRVMsLi4udC5TVFJJTkdfVE9LRU5fVFlQRVMsLi4udC5PUFRJT05fVE9LRU5fVFlQRVMsby5jb2xvcixvLmdyYWRpZW50LG8uYm9yZGVyLG8ucmFkaXVzLG8uc2hhZG93LG8udHlwb2dyYXBoeSxvLmJsdXJdLHQuUFVSRV9UT0tFTl9UWVBFUz1bLi4udC5ESU1FTlNJT05fVE9LRU5fVFlQRVMsLi4udC5TVFJJTkdfVE9LRU5fVFlQRVMsLi4udC5PUFRJT05fVE9LRU5fVFlQRVNdLHQudG9rZW5UeXBlSXNQdXJlPWU9PnQuUFVSRV9UT0tFTl9UWVBFUy5pbmNsdWRlcyhlKSx0LnRva2VuVHlwZUlzTm9uUHVyZT1lPT4hKDAsdC50b2tlblR5cGVJc1B1cmUpKGUpLHQuUkVQTEFDQUJMRV9UT0tFTl9UWVBFUz1bby5jb2xvciwuLi50LkRJTUVOU0lPTl9UT0tFTl9UWVBFUywuLi50LlNUUklOR19UT0tFTl9UWVBFUywuLi50Lk9QVElPTl9UT0tFTl9UWVBFU10sdC5SRUZFUkVOQ0FCTEVfVE9LRU5fVFlQRVM9W28uY29sb3IsLi4udC5ESU1FTlNJT05fVE9LRU5fVFlQRVMsby5mb250RmFtaWx5LG8uZm9udFdlaWdodCxvLnRleHRDYXNlLG8udGV4dERlY29yYXRpb25dLHQudG9rZW5UeXBlSXNSZWZlcmVuY2FibGU9ZT0+dC5SRUZFUkVOQ0FCTEVfVE9LRU5fVFlQRVMuaW5jbHVkZXMoZSksdC5EVF9UT0tFTl9UWVBFUz1bby5jb2xvcixvLnNoYWRvdyxvLmdyYWRpZW50LG8udHlwb2dyYXBoeSxvLmJvcmRlciwuLi50LkRJTUVOU0lPTl9UT0tFTl9UWVBFUyxvLmZvbnRGYW1pbHksby5mb250V2VpZ2h0LG8uc3RyaW5nLC4uLnQuT1BUSU9OX1RPS0VOX1RZUEVTXX0sODYwNzooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuTVNfVU5JVFM9dC5QWF9VTklUUz10LlJBV19VTklUUz10LkxJTkVfSEVJR0hUX1VOSVRTPXQuU0laRV9VTklUUz10LlVuaXQ9dm9pZCAwLGZ1bmN0aW9uKGUpe2UucGl4ZWxzPVwiUGl4ZWxzXCIsZS5wZXJjZW50PVwiUGVyY2VudFwiLGUucmVtPVwiUmVtXCIsZS5tcz1cIk1zXCIsZS5yYXc9XCJSYXdcIn0ob3x8KHQuVW5pdD1vPXt9KSksdC5TSVpFX1VOSVRTPVtvLnBpeGVscyxvLnBlcmNlbnQsby5yZW1dLHQuTElORV9IRUlHSFRfVU5JVFM9W28ucGl4ZWxzLG8ucGVyY2VudCxvLnJlbSxvLnJhd10sdC5SQVdfVU5JVFM9W28ucmF3XSx0LlBYX1VOSVRTPVtvLnBpeGVsc10sdC5NU19VTklUUz1bby5tc119LDk0Nzg6KGUsdCxvKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuY29udmVydFJlbW90ZVRvVXNlclJvbGU9dC5Vc2VyUm9sZT12b2lkIDA7Y29uc3Qgcj1vKDQzNzkpO3ZhciBuOyFmdW5jdGlvbihlKXtlLm93bmVyPVwiT3duZXJcIixlLmFkbWluPVwiQWRtaW5cIixlLmNyZWF0b3I9XCJDcmVhdG9yXCIsZS5jb250cmlidXRvcj1cIkNvbnRyaWJ1dG9yXCIsZS5iaWxsaW5nPVwiQmlsbGluZ1wiLGUudmlld2VyPVwiVmlld2VyXCJ9KG58fCh0LlVzZXJSb2xlPW49e30pKSx0LmNvbnZlcnRSZW1vdGVUb1VzZXJSb2xlPWU9Pntzd2l0Y2goZSl7Y2FzZVwiT3duZXJcIjpyZXR1cm4gbi5vd25lcjtjYXNlXCJBZG1pblwiOnJldHVybiBuLmFkbWluO2Nhc2VcIkNyZWF0b3JcIjpyZXR1cm4gbi5jcmVhdG9yO2Nhc2VcIkNvbnRyaWJ1dG9yXCI6cmV0dXJuIG4uY29udHJpYnV0b3I7Y2FzZVwiQmlsbGluZ1wiOnJldHVybiBuLmJpbGxpbmc7Y2FzZVwiVmlld2VyXCI6cmV0dXJuIG4udmlld2VyO2RlZmF1bHQ6dGhyb3cgci5TdXBlcm5vdmFFcnJvci5mcm9tTWVzc2FnZShgVW5rbm93biByb2xlOiAke2V9YCl9fX0sNjE0MTooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuVmlzaWJpbGl0eVR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UudmlzaWJsZT1cIlZpc2libGVcIixlLmhpZGRlbj1cIkhpZGRlblwifShvfHwodC5WaXNpYmlsaXR5VHlwZT1vPXt9KSl9LDYyOTg6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LldvcmtzcGFjZU5QTVJlZ2lzdHJ5QXV0aFR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuYmFzaWM9XCJCYXNpY1wiLGUuYmVhcmVyPVwiQmVhcmVyXCJ9KG98fCh0LldvcmtzcGFjZU5QTVJlZ2lzdHJ5QXV0aFR5cGU9bz17fSkpfSw3OTY4OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Xb3Jrc3BhY2VOUE1SZWdpc3RyeVR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UubnBtSlM9XCJOUE1KU1wiLGUuZ2l0SHViPVwiR2l0SHViXCIsZS5henVyZURldk9wcz1cIkF6dXJlRGV2T3BzXCIsZS5hcnRpZmFjdG9yeT1cIkFydGlmYWN0b3J5XCIsZS5jdXN0b209XCJDdXN0b21cIn0ob3x8KHQuV29ya3NwYWNlTlBNUmVnaXN0cnlUeXBlPW89e30pKX0sNTUwMzooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuV29ya3NwYWNlU3Vic2NyaXB0aW9uUGxhbkludGVydmFsPXZvaWQgMCxmdW5jdGlvbihlKXtlLnllYXJseT1cInllYXJseVwiLGUubW9udGhseT1cIm1vbnRobHlcIn0ob3x8KHQuV29ya3NwYWNlU3Vic2NyaXB0aW9uUGxhbkludGVydmFsPW89e30pKX0sNDI5MDooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuV29ya3NwYWNlU3Vic2NyaXB0aW9uUHJvZHVjdENvZGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuZnJlZT1cImZyZWVcIixlLnRlYW09XCJ0ZWFtXCIsZS50ZWFtVGVzdD1cInRlYW1fdGVzdFwiLGUuY29tcGFueT1cImNvbXBhbnlcIixlLmVudGVycHJpc2U9XCJlbnRlcnByaXNlXCJ9KG98fCh0LldvcmtzcGFjZVN1YnNjcmlwdGlvblByb2R1Y3RDb2RlPW89e30pKX0sMzYwNzooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuV29ya3NwYWNlU3Vic2NyaXB0aW9uU3RhdHVzPXZvaWQgMCxmdW5jdGlvbihlKXtlLmFjdGl2ZT1cImFjdGl2ZVwiLGUuZ3JhY2VQZXJpb2Q9XCJncmFjZVBlcmlvZFwiLGUuY2FuY2VsbGVkPVwiY2FuY2VsbGVkXCIsZS5zdXNwZW5kZWQ9XCJzdXNwZW5kZWRcIn0ob3x8KHQuV29ya3NwYWNlU3Vic2NyaXB0aW9uU3RhdHVzPW89e30pKX0sMjgwMjooZSx0KT0+e3ZhciBvLHI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5QdWxzYXJFeGVjdXRvcj10Lk91dHB1dEZpbGVUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLmNvcHlSZW1vdGVVcmw9XCJjb3B5UmVtb3RlVXJsXCIsZS50ZXh0PVwidGV4dFwiLGUuYmluYXJ5PVwiYmluYXJ5XCJ9KG98fCh0Lk91dHB1dEZpbGVUeXBlPW89e30pKSxmdW5jdGlvbihlKXtlLnN1cGVybm92YT1cInN1cGVybm92YVwiLGUubG9jYWw9XCJsb2NhbFwifShyfHwodC5QdWxzYXJFeGVjdXRvcj1yPXt9KSl9fSx0PXt9O2Z1bmN0aW9uIG8ocil7dmFyIG49dFtyXTtpZih2b2lkIDAhPT1uKXJldHVybiBuLmV4cG9ydHM7dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07cmV0dXJuIGVbcl0oaSxpLmV4cG9ydHMsbyksaS5leHBvcnRzfXZhciByPXt9OygoKT0+e3ZhciBlPXI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZS5Ub2tlblR5cGU9ZS5UZXh0RGVjb3JhdGlvbj1lLlRleHRDYXNlPWUuU2hhZG93VHlwZT1lLlJpY2hUZXh0U3BhbkF0dHJpYnV0ZVR5cGU9ZS5HcmFkaWVudFR5cGU9ZS5GcmFtZUxheW91dD1lLkZyYW1lQWxpZ25tZW50PWUuSWNvblNldD1lLlNvdXJjZVR5cGU9ZS5Eb2NzSW1hZ2VSZWZUeXBlPWUuRG9jc0xpbmtSZWZUeXBlPWUuRG9jc1NlY3Rpb25UeXBlPWUuRG9jc0VudGl0eVR5cGU9ZS5Eb2NzRW50aXR5R3JvdXBCZWhhdmlvcj1lLkRvY3NCbG9ja1RleHRQcm9wZXJ0eVN0eWxlPWUuRG9jc0Jsb2NrUmljaFRleHRQcm9wZXJ0eVN0eWxlPWUuRG9jc0Jsb2NrT3B0aW9uQ29sb3I9ZS5Eb2NzQmxvY2tPcHRpb25SZW5kZXJpbmdTdHlsZT1lLkRvY3NCbG9ja0l0ZW1WYXJpYW50TGF5b3V0V2lkdGg9ZS5Eb2NzQmxvY2tJdGVtVmFyaWFudExheW91dFR5cGU9ZS5Eb2NzQmxvY2tJdGVtUHJvcGVydHlUeXBlPWUuRG9jc0Jsb2NrSXRlbVByb3BlcnR5VGV4dFN0eWxlPWUuRG9jc0Jsb2NrSXRlbVByb3BlcnR5UmljaFRleHRTdHlsZT1lLkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eU9wdGlvblJlbmRlcmluZ1N0eWxlPWUuRG9jc0Jsb2NrSXRlbUVudGl0eVR5cGU9ZS5Eb2NzQmxvY2tJbWFnZVByb3BlcnR5QXNwZWN0UmF0aW89ZS5Eb2NzQmxvY2tCZWhhdmlvclNlbGVjdGlvblR5cGU9ZS5Eb2NzQmxvY2tCZWhhdmlvckRhdGFUeXBlPWUuRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VCbG9ja1Nob3J0Y3V0VHlwZT1lLkRvY3VtZW50YXRpb25MZWdhY3lQYWdlQmxvY2tUaGVtZVR5cGU9ZS5Eb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrVHlwZT1lLkRvY3VtZW50YXRpb25MZWdhY3lQYWdlQXNzZXRUeXBlPWUuRG9jdW1lbnRhdGlvbkxlZ2FjeUl0ZW1UeXBlPWUuRG9jdW1lbnRhdGlvbkxlZ2FjeUhlYWRpbmdUeXBlPWUuRG9jdW1lbnRhdGlvbkxlZ2FjeUdyb3VwQmVoYXZpb3I9ZS5Eb2N1bWVudGF0aW9uTGVnYWN5Q2FsbG91dFR5cGU9ZS5Cb3JkZXJTdHlsZT1lLkJvcmRlclBvc2l0aW9uPWUuQmx1clR5cGU9ZS5Bc3NldFNjYWxlVHlwZT1lLkFzc2V0U2NhbGU9ZS5Bc3NldEZvcm1hdD1lLkFsaWdubWVudD1lLkFMTF9UT0tFTl9UWVBFUz1lLkFMTF9CT1JERVJfU1RZTEVTPWUuQUxMX0JPUkRFUl9QT1NJVElPTlM9ZS5PUFRJT05fVE9LRU5fVFlQRVM9ZS5TVFJJTkdfVE9LRU5fVFlQRVM9ZS5ESU1FTlNJT05fVE9LRU5fVFlQRVM9dm9pZCAwLGUuUHVsc2FyRXhlY3V0b3I9ZS5PdXRwdXRGaWxlVHlwZT1lLkN1c3RvbURvbWFpblN0YXRlPWUuQ3VzdG9tRG9tYWluRXJyb3JDb2RlPWUuSW1wb3J0V2FybmluZ1R5cGU9ZS5Xb3Jrc3BhY2VOUE1SZWdpc3RyeVR5cGU9ZS5Xb3Jrc3BhY2VOUE1SZWdpc3RyeUF1dGhUeXBlPWUuV29ya3NwYWNlU3Vic2NyaXB0aW9uU3RhdHVzPWUuV29ya3NwYWNlU3Vic2NyaXB0aW9uUHJvZHVjdENvZGU9ZS5Xb3Jrc3BhY2VTdWJzY3JpcHRpb25QbGFuSW50ZXJ2YWw9ZS5WaXNpYmlsaXR5VHlwZT1lLlVzZXJSb2xlPWUuVW5pdD12b2lkIDA7dmFyIHQ9bygzNzg4KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRJTUVOU0lPTl9UT0tFTl9UWVBFU1wiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0LkRJTUVOU0lPTl9UT0tFTl9UWVBFU319KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIlNUUklOR19UT0tFTl9UWVBFU1wiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0LlNUUklOR19UT0tFTl9UWVBFU319KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIk9QVElPTl9UT0tFTl9UWVBFU1wiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0Lk9QVElPTl9UT0tFTl9UWVBFU319KTt2YXIgbj1vKDExNjApO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiQUxMX0JPUkRFUl9QT1NJVElPTlNcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbi5BTExfQk9SREVSX1BPU0lUSU9OU319KTt2YXIgaT1vKDQ1NDYpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiQUxMX0JPUkRFUl9TVFlMRVNcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gaS5BTExfQk9SREVSX1NUWUxFU319KTt2YXIgYT1vKDM3ODgpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiQUxMX1RPS0VOX1RZUEVTXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGEuQUxMX1RPS0VOX1RZUEVTfX0pO3ZhciBjPW8oNzQ3Nik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJBbGlnbm1lbnRcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYy5BbGlnbm1lbnR9fSk7dmFyIGw9byg4NzM4KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkFzc2V0Rm9ybWF0XCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGwuQXNzZXRGb3JtYXR9fSk7dmFyIHU9byg5MTUpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiQXNzZXRTY2FsZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB1LkFzc2V0U2NhbGV9fSk7dmFyIHM9byg4OTkpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiQXNzZXRTY2FsZVR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcy5Bc3NldFNjYWxlVHlwZX19KTt2YXIgZD1vKDYxOTIpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiQmx1clR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZC5CbHVyVHlwZX19KTt2YXIgcD1vKDExNjApO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiQm9yZGVyUG9zaXRpb25cIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcC5Cb3JkZXJQb3NpdGlvbn19KTt2YXIgeT1vKDQ1NDYpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiQm9yZGVyU3R5bGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4geS5Cb3JkZXJTdHlsZX19KTt2YXIgbT1vKDUxMDIpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jdW1lbnRhdGlvbkxlZ2FjeUNhbGxvdXRUeXBlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0uRG9jdW1lbnRhdGlvbkxlZ2FjeUNhbGxvdXRUeXBlfX0pO3ZhciBUPW8oMjEyMyk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2N1bWVudGF0aW9uTGVnYWN5R3JvdXBCZWhhdmlvclwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBULkRvY3VtZW50YXRpb25MZWdhY3lHcm91cEJlaGF2aW9yfX0pO3ZhciB2PW8oOTg5Nik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2N1bWVudGF0aW9uTGVnYWN5SGVhZGluZ1R5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdi5Eb2N1bWVudGF0aW9uTGVnYWN5SGVhZGluZ1R5cGV9fSk7dmFyIGY9byg3Mzc5KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3VtZW50YXRpb25MZWdhY3lJdGVtVHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBmLkRvY3VtZW50YXRpb25MZWdhY3lJdGVtVHlwZX19KTt2YXIgZz1vKDE0MjMpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VBc3NldFR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZy5Eb2N1bWVudGF0aW9uTGVnYWN5UGFnZUFzc2V0VHlwZX19KTt2YXIgUD1vKDE4NDYpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VCbG9ja1R5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUC5Eb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrVHlwZX19KTt2YXIgYj1vKDE2MDEpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VCbG9ja1RoZW1lVHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBiLkRvY3VtZW50YXRpb25MZWdhY3lQYWdlQmxvY2tUaGVtZVR5cGV9fSk7dmFyIFM9bygyNjU3KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3VtZW50YXRpb25MZWdhY3lQYWdlQmxvY2tTaG9ydGN1dFR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUy5Eb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrU2hvcnRjdXRUeXBlfX0pO3ZhciBPPW8oNTY1MSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2NzQmxvY2tCZWhhdmlvckRhdGFUeXBlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIE8uRG9jc0Jsb2NrQmVoYXZpb3JEYXRhVHlwZX19KTt2YXIgXz1vKDM3MzMpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jc0Jsb2NrQmVoYXZpb3JTZWxlY3Rpb25UeXBlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIF8uRG9jc0Jsb2NrQmVoYXZpb3JTZWxlY3Rpb25UeXBlfX0pO3ZhciBEPW8oODg5MCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2NzQmxvY2tJbWFnZVByb3BlcnR5QXNwZWN0UmF0aW9cIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gRC5Eb2NzQmxvY2tJbWFnZVByb3BlcnR5QXNwZWN0UmF0aW99fSk7dmFyIEk9byg5Mzc3KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3NCbG9ja0l0ZW1FbnRpdHlUeXBlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEkuRG9jc0Jsb2NrSXRlbUVudGl0eVR5cGV9fSk7dmFyIEU9byg1ODgzKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eU9wdGlvblJlbmRlcmluZ1N0eWxlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEUuRG9jc0Jsb2NrSXRlbVByb3BlcnR5T3B0aW9uUmVuZGVyaW5nU3R5bGV9fSk7dmFyIGg9byg4MDYxKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eVJpY2hUZXh0U3R5bGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gaC5Eb2NzQmxvY2tJdGVtUHJvcGVydHlSaWNoVGV4dFN0eWxlfX0pO3ZhciBrPW8oNzQ3OSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2NzQmxvY2tJdGVtUHJvcGVydHlUZXh0U3R5bGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gay5Eb2NzQmxvY2tJdGVtUHJvcGVydHlUZXh0U3R5bGV9fSk7dmFyIE49byg2ODM5KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eVR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gTi5Eb2NzQmxvY2tJdGVtUHJvcGVydHlUeXBlfX0pO3ZhciBCPW8oODA5NSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2NzQmxvY2tJdGVtVmFyaWFudExheW91dFR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gQi5Eb2NzQmxvY2tJdGVtVmFyaWFudExheW91dFR5cGV9fSk7dmFyIEw9byg3MjkxKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3NCbG9ja0l0ZW1WYXJpYW50TGF5b3V0V2lkdGhcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gTC5Eb2NzQmxvY2tJdGVtVmFyaWFudExheW91dFdpZHRofX0pO3ZhciBSPW8oNTk2Myk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2NzQmxvY2tPcHRpb25SZW5kZXJpbmdTdHlsZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBSLkRvY3NCbG9ja09wdGlvblJlbmRlcmluZ1N0eWxlfX0pO3ZhciBqPW8oOTEzMyk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2NzQmxvY2tPcHRpb25Db2xvclwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBqLkRvY3NCbG9ja09wdGlvbkNvbG9yfX0pO3ZhciBDPW8oNjY0NCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2NzQmxvY2tSaWNoVGV4dFByb3BlcnR5U3R5bGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gQy5Eb2NzQmxvY2tSaWNoVGV4dFByb3BlcnR5U3R5bGV9fSk7dmFyIE09bygzMDYpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jc0Jsb2NrVGV4dFByb3BlcnR5U3R5bGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gTS5Eb2NzQmxvY2tUZXh0UHJvcGVydHlTdHlsZX19KTt2YXIgeD1vKDQwNjgpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jc0VudGl0eUdyb3VwQmVoYXZpb3JcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4geC5Eb2NzRW50aXR5R3JvdXBCZWhhdmlvcn19KTt2YXIgQT1vKDEyMzMpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jc0VudGl0eVR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gQS5Eb2NzRW50aXR5VHlwZX19KTt2YXIgRj1vKDc5NzEpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jc1NlY3Rpb25UeXBlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEYuRG9jc1NlY3Rpb25UeXBlfX0pO3ZhciB3PW8oNTY3Myk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2NzTGlua1JlZlR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdy5Eb2NzTGlua1JlZlR5cGV9fSk7dmFyIFU9byg5OTMyKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3NJbWFnZVJlZlR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gVS5Eb2NzSW1hZ2VSZWZUeXBlfX0pO3ZhciBZPW8oNDY1Mik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJTb3VyY2VUeXBlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFkuU291cmNlVHlwZX19KTt2YXIgVz1vKDkzNCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJJY29uU2V0XCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFcuSWNvblNldH19KTt2YXIgRz1vKDEyNTUpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRnJhbWVBbGlnbm1lbnRcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gRy5GcmFtZUFsaWdubWVudH19KTt2YXIgSz1vKDM3MTgpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRnJhbWVMYXlvdXRcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gSy5GcmFtZUxheW91dH19KTt2YXIgSD1vKDEpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiR3JhZGllbnRUeXBlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEguR3JhZGllbnRUeXBlfX0pO3ZhciBWPW8oMjY3NCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJSaWNoVGV4dFNwYW5BdHRyaWJ1dGVUeXBlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFYuUmljaFRleHRTcGFuQXR0cmlidXRlVHlwZX19KTt2YXIgJD1vKDkxMjUpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiU2hhZG93VHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiAkLlNoYWRvd1R5cGV9fSk7dmFyIHE9byg5MjIpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiVGV4dENhc2VcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcS5UZXh0Q2FzZX19KTt2YXIgej1vKDcwNDApO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiVGV4dERlY29yYXRpb25cIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gei5UZXh0RGVjb3JhdGlvbn19KTt2YXIgSj1vKDM3ODgpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiVG9rZW5UeXBlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEouVG9rZW5UeXBlfX0pO3ZhciBRPW8oODYwNyk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJVbml0XCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFEuVW5pdH19KTt2YXIgWj1vKDk0NzgpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiVXNlclJvbGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gWi5Vc2VyUm9sZX19KTt2YXIgWD1vKDYxNDEpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiVmlzaWJpbGl0eVR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gWC5WaXNpYmlsaXR5VHlwZX19KTt2YXIgZWU9byg1NTAzKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIldvcmtzcGFjZVN1YnNjcmlwdGlvblBsYW5JbnRlcnZhbFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlZS5Xb3Jrc3BhY2VTdWJzY3JpcHRpb25QbGFuSW50ZXJ2YWx9fSk7dmFyIHRlPW8oNDI5MCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJXb3Jrc3BhY2VTdWJzY3JpcHRpb25Qcm9kdWN0Q29kZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0ZS5Xb3Jrc3BhY2VTdWJzY3JpcHRpb25Qcm9kdWN0Q29kZX19KTt2YXIgb2U9bygzNjA3KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIldvcmtzcGFjZVN1YnNjcmlwdGlvblN0YXR1c1wiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBvZS5Xb3Jrc3BhY2VTdWJzY3JpcHRpb25TdGF0dXN9fSk7dmFyIHJlPW8oNjI5OCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJXb3Jrc3BhY2VOUE1SZWdpc3RyeUF1dGhUeXBlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHJlLldvcmtzcGFjZU5QTVJlZ2lzdHJ5QXV0aFR5cGV9fSk7dmFyIG5lPW8oNzk2OCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJXb3Jrc3BhY2VOUE1SZWdpc3RyeVR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbmUuV29ya3NwYWNlTlBNUmVnaXN0cnlUeXBlfX0pO3ZhciBpZT1vKDgwNDIpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiSW1wb3J0V2FybmluZ1R5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gaWUuSW1wb3J0V2FybmluZ1R5cGV9fSk7dmFyIGFlPW8oNTY5NSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJDdXN0b21Eb21haW5FcnJvckNvZGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYWUuQ3VzdG9tRG9tYWluRXJyb3JDb2RlfX0pO3ZhciBjZT1vKDc3MzcpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiQ3VzdG9tRG9tYWluU3RhdGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gY2UuQ3VzdG9tRG9tYWluU3RhdGV9fSk7dmFyIGxlPW8oMjgwMik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJPdXRwdXRGaWxlVHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBsZS5PdXRwdXRGaWxlVHlwZX19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIlB1bHNhckV4ZWN1dG9yXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGxlLlB1bHNhckV4ZWN1dG9yfX0pfSkoKTt2YXIgbj1leHBvcnRzO2Zvcih2YXIgaSBpbiByKW5baV09cltpXTtyLl9fZXNNb2R1bGUmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShuLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfSkoKTsiLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVGhlbWVFeHBvcnRTdHlsZSA9IHZvaWQgMDtcbi8qKlxuICogTWFpbiBjb25maWd1cmF0aW9uIG9mIHRoZSBleHBvcnRlciAtIHR5cGUgaW50ZXJmYWNlLiBEZWZhdWx0IHZhbHVlcyBmb3IgaXQgY2FuIGJlIHNldCB0aHJvdWdoIGBjb25maWcuanNvbmAgYW5kIHVzZXJzIGNhbiBvdmVycmlkZSB0aGUgYmVoYXZpb3Igd2hlbiBjcmVhdGluZyB0aGUgcGlwZWxpbmVzLlxuICovXG52YXIgVGhlbWVFeHBvcnRTdHlsZTtcbihmdW5jdGlvbiAoVGhlbWVFeHBvcnRTdHlsZSkge1xuICAgIFRoZW1lRXhwb3J0U3R5bGVbXCJBcHBseURpcmVjdGx5XCJdID0gXCJhcHBseURpcmVjdGx5XCI7XG4gICAgVGhlbWVFeHBvcnRTdHlsZVtcIlNlcGFyYXRlRmlsZXNcIl0gPSBcInNlcGFyYXRlRmlsZXNcIjtcbiAgICBUaGVtZUV4cG9ydFN0eWxlW1wiTWVyZ2VkVGhlbWVcIl0gPSBcIm1lcmdlZFRoZW1lXCI7XG59KShUaGVtZUV4cG9ydFN0eWxlIHx8IChleHBvcnRzLlRoZW1lRXhwb3J0U3R5bGUgPSBUaGVtZUV4cG9ydFN0eWxlID0ge30pKTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UQUlMV0lORF9BTExPV0VEX0NVU1RPTUlaQVRJT04gPSBleHBvcnRzLlRBSUxXSU5EX1RPS0VOX1BSRUZJWEVTID0gdm9pZCAwO1xuY29uc3Qgc2RrX2V4cG9ydGVyc18xID0gcmVxdWlyZShcIkBzdXBlcm5vdmFpby9zZGstZXhwb3J0ZXJzXCIpO1xuZXhwb3J0cy5UQUlMV0lORF9UT0tFTl9QUkVGSVhFUyA9IHtcbiAgICBDb2xvcjogXCJjb2xvclwiLFxuICAgIFR5cG9ncmFwaHk6IFwidGV4dFwiLFxuICAgIERpbWVuc2lvbjogXCJzaXplXCIsXG4gICAgU2l6ZTogXCJzaXplXCIsXG4gICAgU3BhY2U6IFwic3BhY2luZ1wiLFxuICAgIE9wYWNpdHk6IFwib3BhY2l0eVwiLFxuICAgIEZvbnRTaXplOiBcInRleHRcIixcbiAgICBMaW5lSGVpZ2h0OiBcImxlYWRpbmdcIixcbiAgICBMZXR0ZXJTcGFjaW5nOiBcInRyYWNraW5nXCIsXG4gICAgUGFyYWdyYXBoU3BhY2luZzogXCJwYXJhZ3JhcGhcIixcbiAgICBCb3JkZXJXaWR0aDogXCJib3JkZXJcIixcbiAgICBCb3JkZXJSYWRpdXM6IFwicmFkaXVzXCIsXG4gICAgRHVyYXRpb246IFwiZHVyYXRpb25cIixcbiAgICBaSW5kZXg6IFwielwiLFxuICAgIFNoYWRvdzogXCJzaGFkb3dcIixcbiAgICBCb3JkZXI6IFwiYm9yZGVyXCIsXG4gICAgR3JhZGllbnQ6IFwiZ3JhZGllbnRcIixcbiAgICBTdHJpbmc6IFwic3RyaW5nXCIsXG4gICAgUHJvZHVjdENvcHk6IFwicHJvZHVjdC1jb3B5XCIsXG4gICAgRm9udEZhbWlseTogXCJmb250XCIsXG4gICAgRm9udFdlaWdodDogXCJmb250LXdlaWdodFwiLFxuICAgIFRleHRDYXNlOiBcInRleHQtY2FzZVwiLFxuICAgIFRleHREZWNvcmF0aW9uOiBcInRleHQtZGVjb3JhdGlvblwiLFxuICAgIFZpc2liaWxpdHk6IFwidmlzaWJpbGl0eVwiLFxuICAgIEJsdXI6IFwiYmx1clwiXG59O1xuLyoqXG4gKiBMaXN0IG9mIHRva2VuIHR5cGVzIHRoYXQgY2FuIGJlIGN1c3RvbWl6ZWQgaW4gVGFpbHdpbmQgNFxuICogVGhlc2UgYXJlIHRoZSB0b2tlbiB0eXBlcyBzdXBwb3J0ZWQgYnkgVGFpbHdpbmQgQ1NTIGNvbmZpZ3VyYXRpb25cbiAqXG4gKiBVbnN1cHBvcnRlZCB0b2tlbiB0eXBlcyB0aGF0IHdpbGwgYmUgZmlsdGVyZWQgb3V0OlxuICogLSBEaW1lbnNpb24gKHVzZSBzaXplIG9yIHNwYWNlIGluc3RlYWQpXG4gKiAtIFBhcmFncmFwaFNwYWNpbmcgKG5vdCBkaXJlY3RseSBzdXBwb3J0ZWQgYnkgVGFpbHdpbmQpXG4gKiAtIEdyYWRpZW50IChub3QgYSBjb3JlIFRhaWx3aW5kIHByb3BlcnR5KVxuICogLSBTdHJpbmcgKG5vdCByZWxldmFudCBmb3IgQ1NTIHZhcmlhYmxlcylcbiAqIC0gUHJvZHVjdENvcHkgKG5vdCByZWxldmFudCBmb3IgQ1NTIHZhcmlhYmxlcylcbiAqIC0gVGV4dENhc2UgKHVzZSBUYWlsd2luZCB0ZXh0LWNhc2UgdXRpbGl0aWVzIGluc3RlYWQpXG4gKiAtIFRleHREZWNvcmF0aW9uICh1c2UgVGFpbHdpbmQgdGV4dC1kZWNvcmF0aW9uIHV0aWxpdGllcyBpbnN0ZWFkKVxuICogLSBWaXNpYmlsaXR5ICh1c2UgVGFpbHdpbmQgdmlzaWJpbGl0eSB1dGlsaXRpZXMgaW5zdGVhZClcbiAqL1xuZXhwb3J0cy5UQUlMV0lORF9BTExPV0VEX0NVU1RPTUlaQVRJT04gPSBbXG4gICAgc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS5jb2xvcixcbiAgICBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLnNwYWNlLFxuICAgIHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUuc2l6ZSxcbiAgICBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLmZvbnRTaXplLFxuICAgIHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUubGluZUhlaWdodCxcbiAgICBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLmxldHRlclNwYWNpbmcsXG4gICAgc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS5yYWRpdXMsXG4gICAgc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS5ib3JkZXJXaWR0aCxcbiAgICBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLmZvbnRGYW1pbHksXG4gICAgc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS5mb250V2VpZ2h0LFxuICAgIHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUuc2hhZG93LFxuICAgIHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUub3BhY2l0eSxcbiAgICBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLmR1cmF0aW9uLFxuICAgIHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUuekluZGV4LFxuICAgIHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUuYmx1cixcbiAgICBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLnR5cG9ncmFwaHksXG4gICAgc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS5ib3JkZXIsXG5dO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFRva2VuUHJlZml4ID0gZ2V0VG9rZW5QcmVmaXg7XG5leHBvcnRzLmlzQWxsb3dlZFRva2VuVHlwZSA9IGlzQWxsb3dlZFRva2VuVHlwZTtcbmV4cG9ydHMuY29udmVydGVkVG9rZW4gPSBjb252ZXJ0ZWRUb2tlbjtcbmV4cG9ydHMudG9rZW5WYXJpYWJsZU5hbWUgPSB0b2tlblZhcmlhYmxlTmFtZTtcbmNvbnN0IGV4cG9ydF91dGlsc18xID0gcmVxdWlyZShcIkBzdXBlcm5vdmFpby9leHBvcnQtdXRpbHNcIik7XG5jb25zdCBzZGtfZXhwb3J0ZXJzXzEgPSByZXF1aXJlKFwiQHN1cGVybm92YWlvL3Nkay1leHBvcnRlcnNcIik7XG5jb25zdCBfXzEgPSByZXF1aXJlKFwiLi5cIik7XG5jb25zdCBkZWZhdWx0c18xID0gcmVxdWlyZShcIi4uL2NvbnN0YW50cy9kZWZhdWx0c1wiKTtcbi8qKlxuICogR2V0cyB0aGUgcHJlZml4IGZvciBhIHNwZWNpZmljIHRva2VuIHR5cGUgYmFzZWQgb24gY29uZmlndXJhdGlvbi5cbiAqIFVzZXMgZWl0aGVyIGN1c3RvbSBwcmVmaXhlcyBmcm9tIGNvbmZpZ3VyYXRpb24gb3IgZGVmYXVsdCBwcmVmaXhlcy5cbiAqIEBwYXJhbSB0b2tlblR5cGUgLSBUaGUgdHlwZSBvZiB0b2tlbiAoZS5nLiwgY29sb3IsIHR5cG9ncmFwaHksIGV0Yy4pXG4gKiBAcmV0dXJucyBUaGUgcHJlZml4IHN0cmluZyB0byB1c2UgZm9yIHRoaXMgdG9rZW4gdHlwZVxuICovXG5mdW5jdGlvbiBnZXRUb2tlblByZWZpeCh0b2tlblR5cGUpIHtcbiAgICByZXR1cm4gZGVmYXVsdHNfMS5UQUlMV0lORF9UT0tFTl9QUkVGSVhFU1t0b2tlblR5cGVdO1xufVxuLyoqXG4gKiBDaGVjayBpZiBhIHRva2VuIHR5cGUgaXMgYWxsb3dlZCBmb3IgY3VzdG9taXphdGlvbiBpbiBUYWlsd2luZFxuICogQHBhcmFtIHRva2VuVHlwZSBUaGUgdG9rZW4gdHlwZSB0byBjaGVja1xuICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgdG9rZW4gdHlwZSBpcyBhbGxvd2VkIGluIFRhaWx3aW5kIGN1c3RvbWl6YXRpb25cbiAqL1xuZnVuY3Rpb24gaXNBbGxvd2VkVG9rZW5UeXBlKHRva2VuVHlwZSkge1xuICAgIHJldHVybiBkZWZhdWx0c18xLlRBSUxXSU5EX0FMTE9XRURfQ1VTVE9NSVpBVElPTi5pbmNsdWRlcyh0b2tlblR5cGUpO1xufVxuLyoqXG4gKiBDb252ZXJ0cyBhIGRlc2lnbiB0b2tlbiBpbnRvIGl0cyBDU1MgY3VzdG9tIHByb3BlcnR5IHJlcHJlc2VudGF0aW9uLlxuICogSGFuZGxlcyBmb3JtYXR0aW5nIG9mIHRoZSB0b2tlbiB2YWx1ZSwgcmVmZXJlbmNlcywgYW5kIG9wdGlvbmFsIGRlc2NyaXB0aW9uIGNvbW1lbnRzLlxuICpcbiAqIEBwYXJhbSB0b2tlbiAtIFRoZSBkZXNpZ24gdG9rZW4gdG8gY29udmVydFxuICogQHBhcmFtIG1hcHBlZFRva2VucyAtIE1hcCBvZiBhbGwgdG9rZW5zIGZvciByZXNvbHZpbmcgcmVmZXJlbmNlc1xuICogQHBhcmFtIHRva2VuR3JvdXBzIC0gQXJyYXkgb2YgdG9rZW4gZ3JvdXBzIGZvciBkZXRlcm1pbmluZyB0b2tlbiBoaWVyYXJjaHlcbiAqIEByZXR1cm5zIEZvcm1hdHRlZCBDU1MgY3VzdG9tIHByb3BlcnR5IHN0cmluZyB3aXRoIG9wdGlvbmFsIGRlc2NyaXB0aW9uIGNvbW1lbnQgb3IgbnVsbCBpZiB0b2tlbiB0eXBlIGlzIG5vdCBhbGxvd2VkXG4gKi9cbmZ1bmN0aW9uIGNvbnZlcnRlZFRva2VuKHRva2VuLCBtYXBwZWRUb2tlbnMsIHRva2VuR3JvdXBzKSB7XG4gICAgLy8gU2tpcCB0b2tlbnMgdGhhdCBhcmUgbm90IGFsbG93ZWQgZm9yIFRhaWx3aW5kIGN1c3RvbWl6YXRpb25cbiAgICBpZiAoIWlzQWxsb3dlZFRva2VuVHlwZSh0b2tlbi50b2tlblR5cGUpKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICAvLyBHZW5lcmF0ZSB0aGUgQ1NTIHZhcmlhYmxlIG5hbWUgYmFzZWQgb24gdG9rZW4gcHJvcGVydGllcyBhbmQgY29uZmlndXJhdGlvblxuICAgIGxldCBuYW1lID0gdG9rZW5WYXJpYWJsZU5hbWUodG9rZW4sIHRva2VuR3JvdXBzKTtcbiAgICAvLyBDb252ZXJ0IHRva2VuIHZhbHVlIHRvIENTUywgaGFuZGxpbmcgcmVmZXJlbmNlcyBhbmQgZm9ybWF0dGluZyBhY2NvcmRpbmcgdG8gY29uZmlndXJhdGlvblxuICAgIGNvbnN0IHZhbHVlID0gZXhwb3J0X3V0aWxzXzEuQ1NTSGVscGVyLnRva2VuVG9DU1ModG9rZW4sIG1hcHBlZFRva2Vucywge1xuICAgICAgICBhbGxvd1JlZmVyZW5jZXM6IF9fMS5leHBvcnRDb25maWd1cmF0aW9uLnVzZVJlZmVyZW5jZXMsXG4gICAgICAgIGRlY2ltYWxzOiBfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5jb2xvclByZWNpc2lvbixcbiAgICAgICAgY29sb3JGb3JtYXQ6IF9fMS5leHBvcnRDb25maWd1cmF0aW9uLmNvbG9yRm9ybWF0LFxuICAgICAgICBmb3JjZVJlbVVuaXQ6IF9fMS5leHBvcnRDb25maWd1cmF0aW9uLmZvcmNlUmVtVW5pdCxcbiAgICAgICAgcmVtQmFzZTogX18xLmV4cG9ydENvbmZpZ3VyYXRpb24ucmVtQmFzZSxcbiAgICAgICAgLy8gQ3VzdG9tIGhhbmRsZXIgZm9yIHRva2VuIHJlZmVyZW5jZXMgLSBjb252ZXJ0cyB0aGVtIHRvIENTUyB2YXIoKSBzeW50YXhcbiAgICAgICAgdG9rZW5Ub1ZhcmlhYmxlUmVmOiAodCkgPT4ge1xuICAgICAgICAgICAgLy8gU2tpcCByZWZlcmVuY2VzIHRvIHRva2VucyB0aGF0IGFyZSBub3QgYWxsb3dlZCBmb3IgVGFpbHdpbmQgY3VzdG9taXphdGlvblxuICAgICAgICAgICAgaWYgKCFpc0FsbG93ZWRUb2tlblR5cGUodC50b2tlblR5cGUpKSB7XG4gICAgICAgICAgICAgICAgLy8gUmV0dXJuIHRoZSByYXcgdmFsdWUgaW5zdGVhZCBvZiBhIHJlZmVyZW5jZVxuICAgICAgICAgICAgICAgIHJldHVybiBleHBvcnRfdXRpbHNfMS5DU1NIZWxwZXIudG9rZW5Ub0NTUyh0LCBtYXBwZWRUb2tlbnMsIHtcbiAgICAgICAgICAgICAgICAgICAgYWxsb3dSZWZlcmVuY2VzOiBmYWxzZSwgLy8gRG9uJ3QgZm9sbG93IG5lc3RlZCByZWZlcmVuY2VzXG4gICAgICAgICAgICAgICAgICAgIGRlY2ltYWxzOiBfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5jb2xvclByZWNpc2lvbixcbiAgICAgICAgICAgICAgICAgICAgY29sb3JGb3JtYXQ6IF9fMS5leHBvcnRDb25maWd1cmF0aW9uLmNvbG9yRm9ybWF0LFxuICAgICAgICAgICAgICAgICAgICBmb3JjZVJlbVVuaXQ6IF9fMS5leHBvcnRDb25maWd1cmF0aW9uLmZvcmNlUmVtVW5pdCxcbiAgICAgICAgICAgICAgICAgICAgcmVtQmFzZTogX18xLmV4cG9ydENvbmZpZ3VyYXRpb24ucmVtQmFzZSxcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5Ub1ZhcmlhYmxlUmVmOiAoKSA9PiBcIlwiLCAvLyBTdHViIGZ1bmN0aW9uIHRoYXQgbmV2ZXIgZ2V0cyBjYWxsZWQgc2luY2UgYWxsb3dSZWZlcmVuY2VzIGlzIGZhbHNlXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlVHJhbnNmb3JtZXI6IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGB2YXIoLS0ke3Rva2VuVmFyaWFibGVOYW1lKHQsIHRva2VuR3JvdXBzKX0pYDtcbiAgICAgICAgfSxcbiAgICAgICAgLy8gSGFuZGxlIGJsdXIgdmFsdWVzIC0gZXh0cmFjdCBqdXN0IHRoZSBkaW1lbnNpb25cbiAgICAgICAgdmFsdWVUcmFuc2Zvcm1lcjogKHZhbHVlLCB0KSA9PiB7XG4gICAgICAgICAgICBpZiAodC50b2tlblR5cGUgPT09IHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUuYmx1cikge1xuICAgICAgICAgICAgICAgIC8vIEZvciBibHVyKDEycHgpIC0+IGV4dHJhY3QgMTJweFxuICAgICAgICAgICAgICAgIGNvbnN0IG1hdGNoID0gdmFsdWUubWF0Y2goL15ibHVyXFwoKC4qKVxcKSQvKTtcbiAgICAgICAgICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1hdGNoWzFdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBGb3IgZGlyZWN0IHZhbHVlcyAoYmFja2dyb3VuZCBibHVyKSBqdXN0IHJldHVybiBhcyBpc1xuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBjb25zdCBpbmRlbnRTdHJpbmcgPSBleHBvcnRfdXRpbHNfMS5HZW5lcmFsSGVscGVyLmluZGVudChfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5pbmRlbnQpO1xuICAgIGxldCBvdXRwdXQgPSBcIlwiO1xuICAgIGNvbnN0IHRva2VuUGF0aCA9IHRva2VuLnRva2VuUGF0aCB8fCBbXTtcbiAgICBjb25zdCBmdWxsUGF0aCA9IFsuLi50b2tlblBhdGgsIHRva2VuLm5hbWVdLmpvaW4oJy8nKTtcbiAgICAvLyBBZGQgZGVidWcgaW5mbyBvbmx5IGlmIGRlYnVnIG1vZGUgaXMgZW5hYmxlZFxuICAgIGlmIChfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5kZWJ1Zykge1xuICAgICAgICAvLyBBZGQgZGV0YWlsZWQgZGVidWcgaW5mb3JtYXRpb25cbiAgICAgICAgb3V0cHV0ICs9IGAke2luZGVudFN0cmluZ30vKiBQYXRoOiAke2Z1bGxQYXRofSAqL1xcbmA7XG4gICAgICAgIG91dHB1dCArPSBgJHtpbmRlbnRTdHJpbmd9LyogVG9rZW46ICR7SlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgbmFtZTogdG9rZW4ubmFtZSxcbiAgICAgICAgICAgIHR5cGU6IHRva2VuLnRva2VuVHlwZSxcbiAgICAgICAgICAgIHBhdGg6IHRva2VuLnRva2VuUGF0aCxcbiAgICAgICAgICAgIHByZWZpeDogZ2V0VG9rZW5QcmVmaXgodG9rZW4udG9rZW5UeXBlKVxuICAgICAgICB9KX0gKi9cXG5gO1xuICAgIH1cbiAgICAvLyBBZGQgZGVzY3JpcHRpb24gaWYgZW5hYmxlZFxuICAgIGlmIChfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5zaG93RGVzY3JpcHRpb25zICYmIHRva2VuLmRlc2NyaXB0aW9uKSB7XG4gICAgICAgIG91dHB1dCArPSBgJHtpbmRlbnRTdHJpbmd9LyogJHt0b2tlbi5kZXNjcmlwdGlvbi50cmltKCl9ICovXFxuYDtcbiAgICB9XG4gICAgLy8gU3BlY2lhbCBoYW5kbGluZyBmb3IgYmx1ciB0b2tlbnNcbiAgICBpZiAodG9rZW4udG9rZW5UeXBlID09PSBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLmJsdXIpIHtcbiAgICAgICAgY29uc3QgaXNCYWNrZHJvcEJsdXIgPSBmdWxsUGF0aC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKCdiYWNrZ3JvdW5kJyk7XG4gICAgICAgIGNvbnN0IGJsdXJOYW1lID0gaXNCYWNrZHJvcEJsdXIgPyAnYmFja2Ryb3AtYmx1cicgOiAodG9rZW4ubmFtZS50b0xvd2VyQ2FzZSgpID09PSAnYmx1cicgPyAnYmx1ci1kZWZhdWx0JyA6IGBibHVyLSR7dG9rZW4ubmFtZX1gKTtcbiAgICAgICAgbmFtZSA9IGV4cG9ydF91dGlsc18xLk5hbWluZ0hlbHBlci5jb2RlU2FmZVZhcmlhYmxlTmFtZShibHVyTmFtZSwgZXhwb3J0X3V0aWxzXzEuU3RyaW5nQ2FzZS5rZWJhYkNhc2UpO1xuICAgIH1cbiAgICBvdXRwdXQgKz0gYCR7aW5kZW50U3RyaW5nfS0tJHtuYW1lfTogJHt2YWx1ZX07YDtcbiAgICByZXR1cm4gb3V0cHV0O1xufVxuLyoqXG4gKiBCdWlsZHMgYSBjb21wbGV0ZSBwYXRoIGJ5IHRyYXZlcnNpbmcgdXAgdGhyb3VnaCBwYXJlbnQgZ3JvdXBzXG4gKi9cbmZ1bmN0aW9uIGJ1aWxkRnVsbFBhdGgoZ3JvdXBJZCwgdG9rZW5Hcm91cHMpIHtcbiAgICBjb25zdCBwYXRoID0gW107XG4gICAgbGV0IGN1cnJlbnRHcm91cElkID0gZ3JvdXBJZDtcbiAgICB3aGlsZSAoY3VycmVudEdyb3VwSWQpIHtcbiAgICAgICAgY29uc3QgZ3JvdXAgPSB0b2tlbkdyb3Vwcy5maW5kKGcgPT4gZy5pZCA9PT0gY3VycmVudEdyb3VwSWQpO1xuICAgICAgICBpZiAoIWdyb3VwKVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIHBhdGgudW5zaGlmdChncm91cC5uYW1lKTtcbiAgICAgICAgY3VycmVudEdyb3VwSWQgPSBncm91cC5wYXJlbnRHcm91cElkO1xuICAgIH1cbiAgICByZXR1cm4gcGF0aDtcbn1cbi8qKlxuICogR2VuZXJhdGVzIGEgY29kZS1zYWZlIHZhcmlhYmxlIG5hbWUgZm9yIGEgdG9rZW4gYmFzZWQgb24gaXRzIHByb3BlcnRpZXMgYW5kIGNvbmZpZ3VyYXRpb24uXG4gKiBJbmNsdWRlcyB0eXBlLXNwZWNpZmljIHByZWZpeCBhbmQgY29uc2lkZXJzIHRva2VuIGhpZXJhcmNoeS5cbiAqXG4gKiBAcGFyYW0gdG9rZW4gLSBUaGUgdG9rZW4gdG8gZ2VuZXJhdGUgYSBuYW1lIGZvclxuICogQHBhcmFtIHRva2VuR3JvdXBzIC0gQXJyYXkgb2YgdG9rZW4gZ3JvdXBzIGZvciBkZXRlcm1pbmluZyB0b2tlbiBoaWVyYXJjaHlcbiAqIEByZXR1cm5zIEZvcm1hdHRlZCB2YXJpYWJsZSBuYW1lIHN0cmluZ1xuICovXG5mdW5jdGlvbiB0b2tlblZhcmlhYmxlTmFtZSh0b2tlbiwgdG9rZW5Hcm91cHMpIHtcbiAgICBsZXQgcHJlZml4ID0gZ2V0VG9rZW5QcmVmaXgodG9rZW4udG9rZW5UeXBlKTtcbiAgICAvLyBEZWJ1ZyBsb2dnaW5nIGlmIGRlYnVnIG1vZGUgaXMgZW5hYmxlZFxuICAgIGlmIChfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5kZWJ1Zykge1xuICAgICAgICBjb25zb2xlLmxvZygnVG9rZW46Jywge1xuICAgICAgICAgICAgbmFtZTogdG9rZW4ubmFtZSxcbiAgICAgICAgICAgIHR5cGU6IHRva2VuLnRva2VuVHlwZSxcbiAgICAgICAgICAgIHBhdGg6IHRva2VuLnRva2VuUGF0aCxcbiAgICAgICAgICAgIHByZWZpeCxcbiAgICAgICAgICAgIGZpbmRSZXBsYWNlOiBfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5maW5kUmVwbGFjZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLy8gSGFuZGxlIGNvbG9yIHV0aWxpdHkgcHJlZml4ZXMgaWYgZW5hYmxlZCBhbmQgdG9rZW4gaXMgYSBjb2xvclxuICAgIGlmIChfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi51c2VDb2xvclV0aWxpdHlQcmVmaXhlcyAmJiB0b2tlbi50b2tlblR5cGUgPT09IHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUuY29sb3IpIHtcbiAgICAgICAgLy8gR2V0IHRoZSBwYXJlbnQgb25jZSBhbmQgcmV1c2UgaXRcbiAgICAgICAgY29uc3QgcGFyZW50ID0gdG9rZW5Hcm91cHMuZmluZCgoZ3JvdXApID0+IGdyb3VwLmlkID09PSB0b2tlbi5wYXJlbnRHcm91cElkKTtcbiAgICAgICAgLy8gVXNlIHRoZSB0b2tlbidzIGJ1aWx0LWluIHBhdGggYW5kIGFkZCB0b2tlbiBuYW1lXG4gICAgICAgIGNvbnN0IHRva2VuUGF0aCA9IHRva2VuLnRva2VuUGF0aCB8fCBbXTtcbiAgICAgICAgY29uc3QgZnVsbFBhdGggPSBbLi4udG9rZW5QYXRoLCB0b2tlbi5uYW1lXS5qb2luKCcvJykudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgLy8gRGVidWcgbG9nZ2luZyBmb3IgY29sb3IgdG9rZW4gcGF0aHMgaWYgZGVidWcgbW9kZSBpcyBlbmFibGVkXG4gICAgICAgIGlmIChfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5kZWJ1Zykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0NvbG9yIHRva2VuIHBhdGg6Jywge1xuICAgICAgICAgICAgICAgIHRva2VuUGF0aCxcbiAgICAgICAgICAgICAgICBmdWxsUGF0aCxcbiAgICAgICAgICAgICAgICBmaW5kUmVwbGFjZTogX18xLmV4cG9ydENvbmZpZ3VyYXRpb24uZmluZFJlcGxhY2VcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIC8vIENoZWNrIHRva2VuIHBhdGggYWdhaW5zdCBlYWNoIHV0aWxpdHkgcGF0dGVyblxuICAgICAgICBmb3IgKGNvbnN0IFt1dGlsaXR5TmFtZSwgcGF0dGVyblN0cmluZ10gb2YgT2JqZWN0LmVudHJpZXMoX18xLmV4cG9ydENvbmZpZ3VyYXRpb24uY29sb3JVdGlsaXR5UHJlZml4ZXMpKSB7XG4gICAgICAgICAgICAvLyBTcGxpdCBwYXR0ZXJuIGJ5IGNvbW1hIHRvIHN1cHBvcnQgbXVsdGlwbGUgcGF0dGVybnMgZm9yIGEgc2luZ2xlIHV0aWxpdHlcbiAgICAgICAgICAgIGNvbnN0IHBhdHRlcm5zID0gcGF0dGVyblN0cmluZy5zcGxpdCgnLCcpLm1hcChwID0+IHAudHJpbSgpLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgYW55IG9mIHRoZSBwYXR0ZXJucyBtYXRjaCB0aGUgcGF0aFxuICAgICAgICAgICAgY29uc3QgbWF0Y2hpbmdQYXR0ZXJuID0gcGF0dGVybnMuZmluZChwYXR0ZXJuID0+IGZ1bGxQYXRoLmluY2x1ZGVzKHBhdHRlcm4pKTtcbiAgICAgICAgICAgIGlmIChtYXRjaGluZ1BhdHRlcm4pIHtcbiAgICAgICAgICAgICAgICAvLyBEZWJ1ZyBsb2dnaW5nIGZvciBtYXRjaGVkIHBhdHRlcm5zIGlmIGRlYnVnIG1vZGUgaXMgZW5hYmxlZFxuICAgICAgICAgICAgICAgIGlmIChfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5kZWJ1Zykge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQ29sb3IgdXRpbGl0eSBwYXR0ZXJuIG1hdGNoOicsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxpdHlOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGF0dGVyblN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hdGNoaW5nUGF0dGVybixcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdHRlcm5zLFxuICAgICAgICAgICAgICAgICAgICAgICAgZnVsbFBhdGhcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIEZpbmQgd2hlcmUgdGhlIHBhdHRlcm4gbWF0Y2hlcyBpbiB0aGUgcGF0aFxuICAgICAgICAgICAgICAgIGNvbnN0IHBhdHRlcm5JbmRleCA9IHRva2VuUGF0aC5maW5kSW5kZXgocCA9PiBwLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMobWF0Y2hpbmdQYXR0ZXJuKSk7XG4gICAgICAgICAgICAgICAgLy8gR2V0IHRoZSByZW1haW5pbmcgcGF0aCBzZWdtZW50cyBhZnRlciB0aGUgcGF0dGVybiBtYXRjaFxuICAgICAgICAgICAgICAgIGNvbnN0IHJlbWFpbmluZ1BhdGggPSBwYXR0ZXJuSW5kZXggPj0gMFxuICAgICAgICAgICAgICAgICAgICA/IHRva2VuUGF0aC5zbGljZShwYXR0ZXJuSW5kZXggKyAxKVxuICAgICAgICAgICAgICAgICAgICA6IHRva2VuUGF0aDtcbiAgICAgICAgICAgICAgICAvLyBDb21iaW5lIHJlbWFpbmluZyBwYXRoIHdpdGggdG9rZW4gbmFtZVxuICAgICAgICAgICAgICAgIGNvbnN0IHNlZ21lbnRzID0gWy4uLnJlbWFpbmluZ1BhdGgsIHRva2VuLm5hbWVdO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNsZWFuTmFtZSA9IHNlZ21lbnRzLmpvaW4oJy0nKS50b0xvd2VyQ2FzZSgpXG4gICAgICAgICAgICAgICAgICAgIC50cmltKClcbiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL15bLVxcc10rfFstXFxzXSskL2csICcnKTsgLy8gUmVtb3ZlIGxlYWRpbmcvdHJhaWxpbmcgaHlwaGVucyBhbmQgc3BhY2VzXG4gICAgICAgICAgICAgICAgLy8gRGVidWcgbG9nZ2luZyBmb3IgdXRpbGl0eSBtYXRjaGVzIGlmIGRlYnVnIG1vZGUgaXMgZW5hYmxlZFxuICAgICAgICAgICAgICAgIGlmIChfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5kZWJ1Zykge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQ29sb3IgdXRpbGl0eSBtYXRjaDonLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1dGlsaXR5TmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hdGNoaW5nUGF0dGVybixcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdHRlcm5JbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZ1BhdGgsXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWdtZW50cyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFuTmFtZVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gQ29uc3RydWN0IHRoZSBuYW1lIGFzOiB1dGlsaXR5LWNvbG9yLXBhdGgtbmFtZVxuICAgICAgICAgICAgICAgIHJldHVybiBleHBvcnRfdXRpbHNfMS5OYW1pbmdIZWxwZXIuY29kZVNhZmVWYXJpYWJsZU5hbWUoYCR7dXRpbGl0eU5hbWV9LWNvbG9yLSR7Y2xlYW5OYW1lfWAsIGV4cG9ydF91dGlsc18xLlN0cmluZ0Nhc2Uua2ViYWJDYXNlLCBfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5maW5kUmVwbGFjZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgbm8gdXRpbGl0eSBtYXRjaCwgdXNlIHN0YW5kYXJkIG5hbWluZ1xuICAgICAgICBjb25zdCBuYW1lID0gZXhwb3J0X3V0aWxzXzEuTmFtaW5nSGVscGVyLmNvZGVTYWZlVmFyaWFibGVOYW1lRm9yVG9rZW4odG9rZW4sIGV4cG9ydF91dGlsc18xLlN0cmluZ0Nhc2Uua2ViYWJDYXNlLCBwYXJlbnQgfHwgbnVsbCwgcHJlZml4LCBfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5maW5kUmVwbGFjZSk7XG4gICAgICAgIC8vIERlYnVnIGxvZ2dpbmcgZm9yIHN0YW5kYXJkIG5hbWluZyBpZiBkZWJ1ZyBtb2RlIGlzIGVuYWJsZWRcbiAgICAgICAgaWYgKF9fMS5leHBvcnRDb25maWd1cmF0aW9uLmRlYnVnKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnU3RhbmRhcmQgY29sb3IgbmFtaW5nOicsIHtcbiAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgIHRva2VuLFxuICAgICAgICAgICAgICAgIHBhcmVudCxcbiAgICAgICAgICAgICAgICBwcmVmaXgsXG4gICAgICAgICAgICAgICAgZmluZFJlcGxhY2U6IF9fMS5leHBvcnRDb25maWd1cmF0aW9uLmZpbmRSZXBsYWNlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmFtZTtcbiAgICB9XG4gICAgLy8gRm9yIG5vbi1jb2xvciB0b2tlbnMgb3Igd2hlbiBjb2xvciB1dGlsaXR5IHByZWZpeGVzIGFyZSBkaXNhYmxlZFxuICAgIGNvbnN0IHBhcmVudCA9IHRva2VuR3JvdXBzLmZpbmQoKGdyb3VwKSA9PiBncm91cC5pZCA9PT0gdG9rZW4ucGFyZW50R3JvdXBJZCk7XG4gICAgY29uc3QgbmFtZSA9IGV4cG9ydF91dGlsc18xLk5hbWluZ0hlbHBlci5jb2RlU2FmZVZhcmlhYmxlTmFtZUZvclRva2VuKHRva2VuLCBleHBvcnRfdXRpbHNfMS5TdHJpbmdDYXNlLmtlYmFiQ2FzZSwgcGFyZW50IHx8IG51bGwsIHByZWZpeCwgX18xLmV4cG9ydENvbmZpZ3VyYXRpb24uZmluZFJlcGxhY2UpO1xuICAgIC8vIERlYnVnIGxvZ2dpbmcgZm9yIG5vbi1jb2xvciB0b2tlbnMgaWYgZGVidWcgbW9kZSBpcyBlbmFibGVkXG4gICAgaWYgKF9fMS5leHBvcnRDb25maWd1cmF0aW9uLmRlYnVnKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdOb24tY29sb3IgdG9rZW4gbmFtaW5nOicsIHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICB0b2tlbixcbiAgICAgICAgICAgIHBhcmVudCxcbiAgICAgICAgICAgIHByZWZpeCxcbiAgICAgICAgICAgIGZpbmRSZXBsYWNlOiBfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5maW5kUmVwbGFjZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5hbWU7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc3R5bGVPdXRwdXRGaWxlID0gc3R5bGVPdXRwdXRGaWxlO1xuY29uc3QgZXhwb3J0X3V0aWxzXzEgPSByZXF1aXJlKFwiQHN1cGVybm92YWlvL2V4cG9ydC11dGlsc1wiKTtcbmNvbnN0IF9fMSA9IHJlcXVpcmUoXCIuLlwiKTtcbmNvbnN0IHRva2VuXzEgPSByZXF1aXJlKFwiLi4vY29udGVudC90b2tlblwiKTtcbi8qKlxuICogR2VuZXJhdGVzIGEgc2luZ2xlIENTUyBvdXRwdXQgZmlsZSBjb250YWluaW5nIGFsbCB0b2tlbiBzdHlsZXMgaW4gVGFpbHdpbmQgZm9ybWF0XG4gKi9cbmZ1bmN0aW9uIHN0eWxlT3V0cHV0RmlsZSh0b2tlbnMsIHRva2VuR3JvdXBzLCB0aGVtZVBhdGggPSAnJywgdGhlbWUpIHtcbiAgICAvLyBTa2lwIGlmIG5vIHRva2VucyBhbmQgZW1wdHkgZmlsZXMgYXJlIGRpc2FibGVkXG4gICAgaWYgKCFfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5nZW5lcmF0ZUVtcHR5RmlsZXMgJiYgdG9rZW5zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgLy8gRm9yIHRoZW1lIGZpbGVzOiBmaWx0ZXIgdG9rZW5zIHRvIG9ubHkgaW5jbHVkZSB0aG9zZSB0aGF0IGFyZSB0aGVtZWRcbiAgICBsZXQgcHJvY2Vzc2VkVG9rZW5zID0gdG9rZW5zO1xuICAgIGlmICh0aGVtZVBhdGggJiYgdGhlbWUgJiYgX18xLmV4cG9ydENvbmZpZ3VyYXRpb24uZXhwb3J0T25seVRoZW1lZFRva2Vucykge1xuICAgICAgICBwcm9jZXNzZWRUb2tlbnMgPSBleHBvcnRfdXRpbHNfMS5UaGVtZUhlbHBlci5maWx0ZXJUaGVtZWRUb2tlbnModG9rZW5zLCB0aGVtZSk7XG4gICAgICAgIGlmIChwcm9jZXNzZWRUb2tlbnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBGaWx0ZXIgb3V0IHRva2VucyBub3QgYWxsb3dlZCBmb3IgVGFpbHdpbmQgY3VzdG9taXphdGlvblxuICAgIHByb2Nlc3NlZFRva2VucyA9IHByb2Nlc3NlZFRva2Vucy5maWx0ZXIodG9rZW4gPT4gKDAsIHRva2VuXzEuaXNBbGxvd2VkVG9rZW5UeXBlKSh0b2tlbi50b2tlblR5cGUpKTtcbiAgICBpZiAocHJvY2Vzc2VkVG9rZW5zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgLy8gR3JvdXAgdG9rZW5zIGJ5IHR5cGUgZm9yIG9yZ2FuaXplZCBvdXRwdXRcbiAgICBjb25zdCB0b2tlbnNCeVR5cGUgPSBuZXcgTWFwKCk7XG4gICAgcHJvY2Vzc2VkVG9rZW5zLmZvckVhY2godG9rZW4gPT4ge1xuICAgICAgICBjb25zdCB0eXBlID0gdG9rZW4udG9rZW5UeXBlO1xuICAgICAgICBpZiAoIXRva2Vuc0J5VHlwZS5oYXModHlwZSkpIHtcbiAgICAgICAgICAgIHRva2Vuc0J5VHlwZS5zZXQodHlwZSwgW10pO1xuICAgICAgICB9XG4gICAgICAgIHRva2Vuc0J5VHlwZS5nZXQodHlwZSkucHVzaCh0b2tlbik7XG4gICAgfSk7XG4gICAgLy8gQ3JlYXRlIGEgbWFwIG9mIGFsbCB0b2tlbnMgYnkgSUQgZm9yIHJlZmVyZW5jZSByZXNvbHV0aW9uXG4gICAgY29uc3QgbWFwcGVkVG9rZW5zID0gbmV3IE1hcCh0b2tlbnMubWFwKCh0b2tlbikgPT4gW3Rva2VuLmlkLCB0b2tlbl0pKTtcbiAgICAvLyBTdGFydCB3aXRoIFRhaWx3aW5kIGltcG9ydCB3aXRoIHByZWZpeCBpZiBjb25maWd1cmVkXG4gICAgbGV0IGNvbnRlbnQgPSBfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5nbG9iYWxQcmVmaXhcbiAgICAgICAgPyBgQGltcG9ydCBcInRhaWx3aW5kY3NzXCIgcHJlZml4KCR7X18xLmV4cG9ydENvbmZpZ3VyYXRpb24uZ2xvYmFsUHJlZml4fSk7XFxuXFxuYFxuICAgICAgICA6ICdAaW1wb3J0IFwidGFpbHdpbmRjc3NcIjtcXG5cXG4nO1xuICAgIC8vIEFkZCBkZWJ1ZyBpbmZvcm1hdGlvbiBhdCB0aGUgdG9wIGlmIGVuYWJsZWRcbiAgICBpZiAoX18xLmV4cG9ydENvbmZpZ3VyYXRpb24uZGVidWcpIHtcbiAgICAgICAgY29udGVudCArPSBgLyogRGVidWcgSW5mb3JtYXRpb25cXG5gO1xuICAgICAgICBjb250ZW50ICs9IGAgKiBFeHBvcnRlcjogVGFpbHdpbmQgQ1NTIGJ5IFN1cGVybm92YVxcbmA7XG4gICAgICAgIGNvbnRlbnQgKz0gYCAqIFRoZW1lOiAke3RoZW1lUGF0aCB8fCAnQmFzZSd9XFxuYDtcbiAgICAgICAgY29udGVudCArPSBgICogVG9rZW4gQ291bnQ6ICR7cHJvY2Vzc2VkVG9rZW5zLmxlbmd0aH1cXG5gO1xuICAgICAgICBjb250ZW50ICs9IGAgKiBUb2tlbiBUeXBlczogJHtBcnJheS5mcm9tKHRva2Vuc0J5VHlwZS5rZXlzKCkpLmpvaW4oJywgJyl9XFxuYDtcbiAgICAgICAgY29udGVudCArPSBgICogQ29sb3IgRm9ybWF0OiAke19fMS5leHBvcnRDb25maWd1cmF0aW9uLmNvbG9yRm9ybWF0fVxcbmA7XG4gICAgICAgIGNvbnRlbnQgKz0gYCAqIFByZWZpeDogJHtfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5nbG9iYWxQcmVmaXggfHwgJ05vbmUnfVxcbmA7XG4gICAgICAgIGNvbnRlbnQgKz0gYCAqIEZpbmQvUmVwbGFjZSBSdWxlczogJHtKU09OLnN0cmluZ2lmeShfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5maW5kUmVwbGFjZSl9XFxuYDtcbiAgICAgICAgLy8gQWRkIGRldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IGNvbG9yIHV0aWxpdHkgcHJlZml4ZXNcbiAgICAgICAgaWYgKF9fMS5leHBvcnRDb25maWd1cmF0aW9uLnVzZUNvbG9yVXRpbGl0eVByZWZpeGVzKSB7XG4gICAgICAgICAgICBjb250ZW50ICs9IGAgKiBDb2xvciBVdGlsaXR5IFByZWZpeGVzOlxcbmA7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IFt1dGlsaXR5TmFtZSwgcGF0dGVybnNdIG9mIE9iamVjdC5lbnRyaWVzKF9fMS5leHBvcnRDb25maWd1cmF0aW9uLmNvbG9yVXRpbGl0eVByZWZpeGVzKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhdHRlcm5BcnJheSA9IHBhdHRlcm5zLnNwbGl0KCcsJykubWFwKHAgPT4gcC50cmltKCkpO1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgKz0gYCAgICAtICR7dXRpbGl0eU5hbWV9OiAke3BhdHRlcm5BcnJheS5qb2luKCcsICcpfVxcbmA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb250ZW50ICs9IGAgKiBDb2xvciBVdGlsaXR5IFByZWZpeGVzOiBEaXNhYmxlZFxcbmA7XG4gICAgICAgIH1cbiAgICAgICAgY29udGVudCArPSBgICogR2VuZXJhdGVkOiAke25ldyBEYXRlKCkudG9JU09TdHJpbmcoKX1cXG5gO1xuICAgICAgICBjb250ZW50ICs9IGAgKi9cXG5cXG5gO1xuICAgIH1cbiAgICAvLyBHZW5lcmF0ZSBDU1MgdmFyaWFibGVzIGdyb3VwZWQgYnkgdG9rZW4gdHlwZVxuICAgIGxldCBjc3NWYXJpYWJsZXMgPSAnJztcbiAgICAvLyBBZGQgcmVzZXQgcnVsZXMgaWYgYW55IGFyZSBlbmFibGVkXG4gICAgY29uc3QgaW5kZW50U3RyaW5nID0gZXhwb3J0X3V0aWxzXzEuR2VuZXJhbEhlbHBlci5pbmRlbnQoX18xLmV4cG9ydENvbmZpZ3VyYXRpb24uaW5kZW50KTtcbiAgICBjb25zdCByZXNldFJ1bGVzID0gW107XG4gICAgaWYgKF9fMS5leHBvcnRDb25maWd1cmF0aW9uLmRpc2FibGVBbmltYXRlRGVmYXVsdHMpXG4gICAgICAgIHJlc2V0UnVsZXMucHVzaCgnLS1hbmltYXRlLSo6IGluaXRpYWw7Jyk7XG4gICAgaWYgKF9fMS5leHBvcnRDb25maWd1cmF0aW9uLmRpc2FibGVCbHVyRGVmYXVsdHMpXG4gICAgICAgIHJlc2V0UnVsZXMucHVzaCgnLS1ibHVyLSo6IGluaXRpYWw7Jyk7XG4gICAgaWYgKF9fMS5leHBvcnRDb25maWd1cmF0aW9uLmRpc2FibGVCb3JkZXJSYWRpdXNEZWZhdWx0cylcbiAgICAgICAgcmVzZXRSdWxlcy5wdXNoKCctLXJhZGl1cy0qOiBpbml0aWFsOycpO1xuICAgIGlmIChfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5kaXNhYmxlQnJlYWtwb2ludERlZmF1bHRzKVxuICAgICAgICByZXNldFJ1bGVzLnB1c2goJy0tYnJlYWtwb2ludC0qOiBpbml0aWFsOycpO1xuICAgIGlmIChfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5kaXNhYmxlQ29sb3JEZWZhdWx0cylcbiAgICAgICAgcmVzZXRSdWxlcy5wdXNoKCctLWNvbG9yLSo6IGluaXRpYWw7Jyk7XG4gICAgaWYgKF9fMS5leHBvcnRDb25maWd1cmF0aW9uLmRpc2FibGVDb250YWluZXJEZWZhdWx0cylcbiAgICAgICAgcmVzZXRSdWxlcy5wdXNoKCctLWNvbnRhaW5lci0qOiBpbml0aWFsOycpO1xuICAgIGlmIChfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5kaXNhYmxlRHJvcFNoYWRvd0RlZmF1bHRzKVxuICAgICAgICByZXNldFJ1bGVzLnB1c2goJy0tZHJvcC1zaGFkb3ctKjogaW5pdGlhbDsnKTtcbiAgICBpZiAoX18xLmV4cG9ydENvbmZpZ3VyYXRpb24uZGlzYWJsZUZvbnREZWZhdWx0cylcbiAgICAgICAgcmVzZXRSdWxlcy5wdXNoKCctLWZvbnQtKjogaW5pdGlhbDsnKTtcbiAgICBpZiAoX18xLmV4cG9ydENvbmZpZ3VyYXRpb24uZGlzYWJsZUZvbnRXZWlnaHREZWZhdWx0cylcbiAgICAgICAgcmVzZXRSdWxlcy5wdXNoKCctLWZvbnQtd2VpZ2h0LSo6IGluaXRpYWw7Jyk7XG4gICAgaWYgKF9fMS5leHBvcnRDb25maWd1cmF0aW9uLmRpc2FibGVJbnNldERlZmF1bHRzKVxuICAgICAgICByZXNldFJ1bGVzLnB1c2goJy0taW5zZXQtKjogaW5pdGlhbDsnKTtcbiAgICBpZiAoX18xLmV4cG9ydENvbmZpZ3VyYXRpb24uZGlzYWJsZUxlYWRpbmdEZWZhdWx0cylcbiAgICAgICAgcmVzZXRSdWxlcy5wdXNoKCctLWxlYWRpbmctKjogaW5pdGlhbDsnKTtcbiAgICBpZiAoX18xLmV4cG9ydENvbmZpZ3VyYXRpb24uZGlzYWJsZVBlcnNwZWN0aXZlRGVmYXVsdHMpXG4gICAgICAgIHJlc2V0UnVsZXMucHVzaCgnLS1wZXJzcGVjdGl2ZS0qOiBpbml0aWFsOycpO1xuICAgIGlmIChfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5kaXNhYmxlU2hhZG93RGVmYXVsdHMpXG4gICAgICAgIHJlc2V0UnVsZXMucHVzaCgnLS1zaGFkb3ctKjogaW5pdGlhbDsnKTtcbiAgICBpZiAoX18xLmV4cG9ydENvbmZpZ3VyYXRpb24uZGlzYWJsZVNwYWNpbmdEZWZhdWx0cylcbiAgICAgICAgcmVzZXRSdWxlcy5wdXNoKCctLXNwYWNpbmctKjogaW5pdGlhbDsnKTtcbiAgICBpZiAoX18xLmV4cG9ydENvbmZpZ3VyYXRpb24uZGlzYWJsZVRleHREZWZhdWx0cylcbiAgICAgICAgcmVzZXRSdWxlcy5wdXNoKCctLXRleHQtKjogaW5pdGlhbDsnKTtcbiAgICBpZiAoX18xLmV4cG9ydENvbmZpZ3VyYXRpb24uZGlzYWJsZVRyYWNraW5nRGVmYXVsdHMpXG4gICAgICAgIHJlc2V0UnVsZXMucHVzaCgnLS10cmFja2luZy0qOiBpbml0aWFsOycpO1xuICAgIGlmIChyZXNldFJ1bGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgY3NzVmFyaWFibGVzICs9IGBcXG4ke2luZGVudFN0cmluZ30vKiBSZXNldCBkZWZhdWx0IHZhbHVlcyAqL1xcbiR7aW5kZW50U3RyaW5nfSR7cmVzZXRSdWxlcy5qb2luKGBcXG4ke2luZGVudFN0cmluZ31gKX1cXG5gO1xuICAgIH1cbiAgICB0b2tlbnNCeVR5cGUuZm9yRWFjaCgodG9rZW5zT2ZUeXBlLCB0eXBlKSA9PiB7XG4gICAgICAgIC8vIEFkZCBzZWN0aW9uIGNvbW1lbnQgZm9yIHRva2VuIHR5cGVcbiAgICAgICAgY3NzVmFyaWFibGVzICs9IGBcXG4ke2luZGVudFN0cmluZ30vKiAke3R5cGV9ICovXFxuYDtcbiAgICAgICAgLy8gQWRkIGRlYnVnIGNvdW50IGluZm9ybWF0aW9uIGlmIGRlYnVnIGlzIGVuYWJsZWRcbiAgICAgICAgaWYgKF9fMS5leHBvcnRDb25maWd1cmF0aW9uLmRlYnVnKSB7XG4gICAgICAgICAgICBjc3NWYXJpYWJsZXMgKz0gYCR7aW5kZW50U3RyaW5nfS8qICR7dG9rZW5zT2ZUeXBlLmxlbmd0aH0gJHt0eXBlfSB0b2tlbnMgKi9cXG5gO1xuICAgICAgICB9XG4gICAgICAgIC8vIENvbnZlcnQgdG9rZW5zIHRvIENTUyB2YXJpYWJsZSBkZWNsYXJhdGlvbnNcbiAgICAgICAgY29uc3QgY3NzRGVjbGFyYXRpb25zID0gdG9rZW5zT2ZUeXBlXG4gICAgICAgICAgICAubWFwKCh0b2tlbikgPT4gKDAsIHRva2VuXzEuY29udmVydGVkVG9rZW4pKHRva2VuLCBtYXBwZWRUb2tlbnMsIHRva2VuR3JvdXBzKSlcbiAgICAgICAgICAgIC5maWx0ZXIoKGRlY2xhcmF0aW9uKSA9PiBkZWNsYXJhdGlvbiAhPT0gbnVsbCkgLy8gRmlsdGVyIG91dCBudWxsIHJldHVybnNcbiAgICAgICAgICAgIC5qb2luKFwiXFxuXCIpO1xuICAgICAgICBjc3NWYXJpYWJsZXMgKz0gY3NzRGVjbGFyYXRpb25zICsgXCJcXG5cIjtcbiAgICB9KTtcbiAgICAvLyBVc2UgQHRoZW1lIGRpcmVjdGl2ZSBmb3IgVGFpbHdpbmQgNFxuICAgIGNvbnRlbnQgKz0gYEB0aGVtZSB7XFxuJHtjc3NWYXJpYWJsZXN9fWA7XG4gICAgLy8gQWRkIGRpc2NsYWltZXIgaWYgZW5hYmxlZFxuICAgIGlmIChfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5zaG93R2VuZXJhdGVkRmlsZURpc2NsYWltZXIpIHtcbiAgICAgICAgY29udGVudCA9IGV4cG9ydF91dGlsc18xLkdlbmVyYWxIZWxwZXIuYWRkRGlzY2xhaW1lcihfXzEuZXhwb3J0Q29uZmlndXJhdGlvbi5kaXNjbGFpbWVyLCBjb250ZW50KTtcbiAgICB9XG4gICAgLy8gQ3JlYXRlIGFuZCByZXR1cm4gdGhlIG91dHB1dCBmaWxlXG4gICAgY29uc3QgZmlsZU5hbWUgPSB0aGVtZVBhdGggPyBgdGFpbHdpbmQuJHt0aGVtZVBhdGh9LmNzc2AgOiBcInRhaWx3aW5kLmNzc1wiO1xuICAgIHJldHVybiBleHBvcnRfdXRpbHNfMS5GaWxlSGVscGVyLmNyZWF0ZVRleHRGaWxlKHtcbiAgICAgICAgcmVsYXRpdmVQYXRoOiBcIi4vXCIsXG4gICAgICAgIGZpbGVOYW1lOiBmaWxlTmFtZSxcbiAgICAgICAgY29udGVudDogY29udGVudCxcbiAgICB9KTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5leHBvcnRDb25maWd1cmF0aW9uID0gdm9pZCAwO1xuZXhwb3J0cy5nZW5lcmF0ZUZpbGVzID0gZ2VuZXJhdGVGaWxlcztcbmNvbnN0IGNvbmZpZ18xID0gcmVxdWlyZShcIi4uL2NvbmZpZ1wiKTtcbmNvbnN0IHRhaWx3aW5kX2ZpbGVfMSA9IHJlcXVpcmUoXCIuL2ZpbGVzL3RhaWx3aW5kLWZpbGVcIik7XG5jb25zdCBleHBvcnRfdXRpbHNfMSA9IHJlcXVpcmUoXCJAc3VwZXJub3ZhaW8vZXhwb3J0LXV0aWxzXCIpO1xuLyoqIEV4cG9ydGVyIGNvbmZpZ3VyYXRpb24gZnJvbSB0aGUgcmVzb2x2ZWQgZGVmYXVsdCBjb25maWd1cmF0aW9uIGFuZCB1c2VyIG92ZXJyaWRlcyAqL1xuZXhwb3J0cy5leHBvcnRDb25maWd1cmF0aW9uID0gUHVsc2FyLmV4cG9ydENvbmZpZygpO1xuLyoqXG4gKiBGaWx0ZXJzIG91dCBudWxsIHZhbHVlcyBmcm9tIGFuIGFycmF5IG9mIG91dHB1dCBmaWxlc1xuICogQHBhcmFtIGZpbGVzIEFycmF5IG9mIG91dHB1dCBmaWxlcyB0aGF0IG1heSBjb250YWluIG51bGwgdmFsdWVzXG4gKiBAcmV0dXJucyBBcnJheSBvZiBub24tbnVsbCBvdXRwdXQgZmlsZXNcbiAqL1xuZnVuY3Rpb24gcHJvY2Vzc091dHB1dEZpbGVzKGZpbGVzKSB7XG4gICAgcmV0dXJuIGZpbGVzLmZpbHRlcigoZmlsZSkgPT4gZmlsZSAhPT0gbnVsbCk7XG59XG4vKipcbiAqIE1haW4gZXhwb3J0IGZ1bmN0aW9uIHRoYXQgZ2VuZXJhdGVzIFRhaWx3aW5kIENTUyBmaWxlcyBmcm9tIGRlc2lnbiB0b2tlbnNcbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGhhbmRsZXM6XG4gKiAtIEZldGNoaW5nIHRva2VucyBhbmQgdG9rZW4gZ3JvdXBzIGZyb20gdGhlIGRlc2lnbiBzeXN0ZW1cbiAqIC0gRmlsdGVyaW5nIHRva2VucyBieSBicmFuZCBpZiBzcGVjaWZpZWRcbiAqIC0gUHJvY2Vzc2luZyB0aGVtZXMgaW4gZGlmZmVyZW50IG1vZGVzIChkaXJlY3QsIHNlcGFyYXRlIGZpbGVzLCBvciBjb21iaW5lZClcbiAqXG4gKiBAcGFyYW0gc2RrIC0gU3VwZXJub3ZhIFNESyBpbnN0YW5jZVxuICogQHBhcmFtIGNvbnRleHQgLSBFeHBvcnQgY29udGV4dCBjb250YWluaW5nIGRlc2lnbiBzeXN0ZW0gaW5mb3JtYXRpb25cbiAqIEByZXR1cm5zIFByb21pc2UgcmVzb2x2aW5nIHRvIGFuIGFycmF5IG9mIG91dHB1dCBmaWxlc1xuICovXG5QdWxzYXIuZXhwb3J0KGFzeW5jIChzZGssIGNvbnRleHQpID0+IHtcbiAgICAvLyBGZXRjaCBkYXRhIGZyb20gZGVzaWduIHN5c3RlbSB0aGF0IGlzIGN1cnJlbnRseSBiZWluZyBleHBvcnRlZFxuICAgIGNvbnN0IHJlbW90ZVZlcnNpb25JZGVudGlmaWVyID0ge1xuICAgICAgICBkZXNpZ25TeXN0ZW1JZDogY29udGV4dC5kc0lkLFxuICAgICAgICB2ZXJzaW9uSWQ6IGNvbnRleHQudmVyc2lvbklkLFxuICAgIH07XG4gICAgLy8gRmV0Y2ggdG9rZW5zIGFuZCB0b2tlbiBncm91cHNcbiAgICBsZXQgdG9rZW5zID0gYXdhaXQgc2RrLnRva2Vucy5nZXRUb2tlbnMocmVtb3RlVmVyc2lvbklkZW50aWZpZXIpO1xuICAgIGxldCB0b2tlbkdyb3VwcyA9IGF3YWl0IHNkay50b2tlbnMuZ2V0VG9rZW5Hcm91cHMocmVtb3RlVmVyc2lvbklkZW50aWZpZXIpO1xuICAgIC8vIEZpbHRlciBieSBicmFuZCBpZiBzcGVjaWZpZWRcbiAgICBpZiAoY29udGV4dC5icmFuZElkKSB7XG4gICAgICAgIGNvbnN0IGJyYW5kcyA9IGF3YWl0IHNkay5icmFuZHMuZ2V0QnJhbmRzKHJlbW90ZVZlcnNpb25JZGVudGlmaWVyKTtcbiAgICAgICAgY29uc3QgYnJhbmQgPSBicmFuZHMuZmluZCgoYnJhbmQpID0+IGJyYW5kLmlkID09PSBjb250ZXh0LmJyYW5kSWQgfHwgYnJhbmQuaWRJblZlcnNpb24gPT09IGNvbnRleHQuYnJhbmRJZCk7XG4gICAgICAgIGlmICghYnJhbmQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIGZpbmQgYnJhbmQgJHtjb250ZXh0LmJyYW5kSWR9LmApO1xuICAgICAgICB9XG4gICAgICAgIHRva2VucyA9IHRva2Vucy5maWx0ZXIoKHRva2VuKSA9PiB0b2tlbi5icmFuZElkID09PSBicmFuZC5pZCk7XG4gICAgICAgIHRva2VuR3JvdXBzID0gdG9rZW5Hcm91cHMuZmlsdGVyKCh0b2tlbkdyb3VwKSA9PiB0b2tlbkdyb3VwLmJyYW5kSWQgPT09IGJyYW5kLmlkKTtcbiAgICB9XG4gICAgLy8gUHJvY2VzcyB0aGVtZXMgaWYgc3BlY2lmaWVkXG4gICAgaWYgKGNvbnRleHQudGhlbWVJZHMgJiYgY29udGV4dC50aGVtZUlkcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnN0IHRoZW1lcyA9IGF3YWl0IHNkay50b2tlbnMuZ2V0VG9rZW5UaGVtZXMocmVtb3RlVmVyc2lvbklkZW50aWZpZXIpO1xuICAgICAgICAvLyBGaW5kIGFuZCB2YWxpZGF0ZSByZXF1ZXN0ZWQgdGhlbWVzXG4gICAgICAgIGNvbnN0IHRoZW1lc1RvQXBwbHkgPSBjb250ZXh0LnRoZW1lSWRzLm1hcCgodGhlbWVJZCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGhlbWUgPSB0aGVtZXMuZmluZCgodGhlbWUpID0+IHRoZW1lLmlkID09PSB0aGVtZUlkIHx8IHRoZW1lLmlkSW5WZXJzaW9uID09PSB0aGVtZUlkKTtcbiAgICAgICAgICAgIGlmICghdGhlbWUpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byBmaW5kIHRoZW1lICR7dGhlbWVJZH0uYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhlbWU7XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBIYW5kbGUgZGlmZmVyZW50IHRoZW1lIGV4cG9ydCBtb2Rlc1xuICAgICAgICBzd2l0Y2ggKGV4cG9ydHMuZXhwb3J0Q29uZmlndXJhdGlvbi5leHBvcnRUaGVtZXNBcykge1xuICAgICAgICAgICAgY2FzZSBjb25maWdfMS5UaGVtZUV4cG9ydFN0eWxlLkFwcGx5RGlyZWN0bHk6XG4gICAgICAgICAgICAgICAgdG9rZW5zID0gc2RrLnRva2Vucy5jb21wdXRlVG9rZW5zQnlBcHBseWluZ1RoZW1lcyh0b2tlbnMsIHRva2VucywgdGhlbWVzVG9BcHBseSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb2Nlc3NPdXRwdXRGaWxlcyhbXG4gICAgICAgICAgICAgICAgICAgICgwLCB0YWlsd2luZF9maWxlXzEuc3R5bGVPdXRwdXRGaWxlKSh0b2tlbnMsIHRva2VuR3JvdXBzKVxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgY2FzZSBjb25maWdfMS5UaGVtZUV4cG9ydFN0eWxlLlNlcGFyYXRlRmlsZXM6XG4gICAgICAgICAgICAgICAgY29uc3QgdGhlbWVGaWxlcyA9IHRoZW1lc1RvQXBwbHkuZmxhdE1hcCgodGhlbWUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGhlbWVkVG9rZW5zID0gc2RrLnRva2Vucy5jb21wdXRlVG9rZW5zQnlBcHBseWluZ1RoZW1lcyh0b2tlbnMsIHRva2VucywgW3RoZW1lXSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoMCwgdGFpbHdpbmRfZmlsZV8xLnN0eWxlT3V0cHV0RmlsZSkodGhlbWVkVG9rZW5zLCB0b2tlbkdyb3VwcywgZXhwb3J0X3V0aWxzXzEuVGhlbWVIZWxwZXIuZ2V0VGhlbWVJZGVudGlmaWVyKHRoZW1lKSwgdGhlbWUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IGJhc2VGaWxlcyA9IGV4cG9ydHMuZXhwb3J0Q29uZmlndXJhdGlvbi5leHBvcnRCYXNlVmFsdWVzXG4gICAgICAgICAgICAgICAgICAgID8gKDAsIHRhaWx3aW5kX2ZpbGVfMS5zdHlsZU91dHB1dEZpbGUpKHRva2VucywgdG9rZW5Hcm91cHMpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbDtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvY2Vzc091dHB1dEZpbGVzKFtiYXNlRmlsZXMsIC4uLnRoZW1lRmlsZXNdKTtcbiAgICAgICAgICAgIGNhc2UgY29uZmlnXzEuVGhlbWVFeHBvcnRTdHlsZS5NZXJnZWRUaGVtZTpcbiAgICAgICAgICAgICAgICBjb25zdCBiYXNlVG9rZW5GaWxlcyA9IGV4cG9ydHMuZXhwb3J0Q29uZmlndXJhdGlvbi5leHBvcnRCYXNlVmFsdWVzXG4gICAgICAgICAgICAgICAgICAgID8gKDAsIHRhaWx3aW5kX2ZpbGVfMS5zdHlsZU91dHB1dEZpbGUpKHRva2VucywgdG9rZW5Hcm91cHMpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbDtcbiAgICAgICAgICAgICAgICBjb25zdCB0aGVtZWRUb2tlbnMgPSBzZGsudG9rZW5zLmNvbXB1dGVUb2tlbnNCeUFwcGx5aW5nVGhlbWVzKHRva2VucywgdG9rZW5zLCB0aGVtZXNUb0FwcGx5KTtcbiAgICAgICAgICAgICAgICBjb25zdCBtZXJnZWRUaGVtZUZpbGVzID0gKDAsIHRhaWx3aW5kX2ZpbGVfMS5zdHlsZU91dHB1dEZpbGUpKHRoZW1lZFRva2VucywgdG9rZW5Hcm91cHMsICd0aGVtZWQnLCB0aGVtZXNUb0FwcGx5WzBdKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvY2Vzc091dHB1dEZpbGVzKFtiYXNlVG9rZW5GaWxlcywgbWVyZ2VkVGhlbWVGaWxlc10pO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIERlZmF1bHQgY2FzZTogR2VuZXJhdGUgZmlsZXMgd2l0aG91dCB0aGVtZXNcbiAgICByZXR1cm4gcHJvY2Vzc091dHB1dEZpbGVzKFtcbiAgICAgICAgZXhwb3J0cy5leHBvcnRDb25maWd1cmF0aW9uLmV4cG9ydEJhc2VWYWx1ZXMgPyAoMCwgdGFpbHdpbmRfZmlsZV8xLnN0eWxlT3V0cHV0RmlsZSkodG9rZW5zLCB0b2tlbkdyb3VwcykgOiBudWxsXG4gICAgXSk7XG59KTtcbmZ1bmN0aW9uIGdlbmVyYXRlRmlsZXModG9rZW5zLCB0b2tlbkdyb3VwcywgdGhlbWVzID0gW10pIHtcbiAgICBjb25zdCBmaWxlcyA9IFtdO1xuICAgIC8vIEdlbmVyYXRlIHRoZSBtYWluIFRhaWx3aW5kIENTUyBmaWxlXG4gICAgY29uc3QgbWFpbkZpbGUgPSAoMCwgdGFpbHdpbmRfZmlsZV8xLnN0eWxlT3V0cHV0RmlsZSkodG9rZW5zLCB0b2tlbkdyb3Vwcyk7XG4gICAgaWYgKG1haW5GaWxlKSB7XG4gICAgICAgIGZpbGVzLnB1c2gobWFpbkZpbGUpO1xuICAgIH1cbiAgICAvLyBHZW5lcmF0ZSB0aGVtZWQgZmlsZXMgaWYgbmVlZGVkXG4gICAgdGhlbWVzLmZvckVhY2godGhlbWUgPT4ge1xuICAgICAgICBjb25zdCB0aGVtZWRGaWxlID0gKDAsIHRhaWx3aW5kX2ZpbGVfMS5zdHlsZU91dHB1dEZpbGUpKHRva2VucywgdG9rZW5Hcm91cHMsIGV4cG9ydF91dGlsc18xLlRoZW1lSGVscGVyLmdldFRoZW1lSWRlbnRpZmllcih0aGVtZSksIHRoZW1lKTtcbiAgICAgICAgaWYgKHRoZW1lZEZpbGUpIHtcbiAgICAgICAgICAgIGZpbGVzLnB1c2godGhlbWVkRmlsZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gZmlsZXM7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29sb3JGb3JtYXQgPSB2b2lkIDA7XG52YXIgQ29sb3JGb3JtYXQ7XG4oZnVuY3Rpb24gKENvbG9yRm9ybWF0KSB7XG4gICAgLyoqIEV4YW1wbGU6IHJnYigyNTUsIDAsIDApICovXG4gICAgQ29sb3JGb3JtYXRbXCJyZ2JcIl0gPSBcInJnYlwiO1xuICAgIC8qKiBFeGFtcGxlOiByZ2JhKDI1NSwgMCwgMCwgMSkgKi9cbiAgICBDb2xvckZvcm1hdFtcInJnYmFcIl0gPSBcInJnYmFcIjtcbiAgICAvKiogQXV0b21hdGljYWxseSBjaG9vc2UgYmV0d2VlbiByZ2IoKSBhbmQgcmdiYSgpICovXG4gICAgQ29sb3JGb3JtYXRbXCJzbWFydFJnYmFcIl0gPSBcInNtYXJ0UmdiYVwiO1xuICAgIC8qKiBIRVggLSBmZmZmZmYgKi9cbiAgICBDb2xvckZvcm1hdFtcImhleDZcIl0gPSBcImhleDZcIjtcbiAgICAvKiogSEVYQSAtIGZmZmZmZjAwICovXG4gICAgQ29sb3JGb3JtYXRbXCJoZXg4XCJdID0gXCJoZXg4XCI7XG4gICAgLyoqIEV4YW1wbGU6ICNmZjAwMDAgKi9cbiAgICBDb2xvckZvcm1hdFtcImhhc2hIZXg2XCJdID0gXCJoYXNoSGV4NlwiO1xuICAgIC8qKiBFeGFtcGxlOiAjZmYwMDAwZmYgKi9cbiAgICBDb2xvckZvcm1hdFtcImhhc2hIZXg4XCJdID0gXCJoYXNoSGV4OFwiO1xuICAgIC8qKiBBdXRvbWF0aWNhbGx5IGNob29zZSBiZXR3ZWVuICNSUkdHQkIgYW5kICNSUkdHQkJBQSAqL1xuICAgIENvbG9yRm9ybWF0W1wic21hcnRIYXNoSGV4XCJdID0gXCJzbWFydEhhc2hIZXhcIjtcbiAgICAvKiogU2VsZWN0cyBiZXR3ZWVuIGhleCBhbmQgaGV4YSBtb2RlcyBiYXNlZCBvbiBub24tb3BhcXVlIGFscGhhICovXG4gICAgQ29sb3JGb3JtYXRbXCJzbWFydEhleFwiXSA9IFwic21hcnRIZXhcIjtcbiAgICAvKiogRXhhbXBsZTogaHNsKDAsIDEwMCUsIDUwJSkgKi9cbiAgICBDb2xvckZvcm1hdFtcImhzbFwiXSA9IFwiaHNsXCI7XG4gICAgLyoqIEV4YW1wbGU6IGhzbGEoMCwgMTAwJSwgNTAlLCAxKSAqL1xuICAgIENvbG9yRm9ybWF0W1wiaHNsYVwiXSA9IFwiaHNsYVwiO1xuICAgIC8qKiBBdXRvbWF0aWNhbGx5IGNob29zZSBiZXR3ZWVuIGhzbCgpIGFuZCBoc2xhKCkgKi9cbiAgICBDb2xvckZvcm1hdFtcInNtYXJ0SHNsYVwiXSA9IFwic21hcnRIc2xhXCI7XG4gICAgLyoqIGlPUyBVSUNvbG9yIGNyZWF0ZWQgYXMgVUlDb2xvcihyZ2I6IDB4MDAwMDAwKS53aXRoQWxwaGFDb21wb25lbnQoMC41KS4gQWxwaGEgY29tcG9uZW50IHdpbGwgYmUgb21taXRlZCBpZiBmdWxseSBvcGFxdWUgKi9cbiAgICBDb2xvckZvcm1hdFtcInNtYXJ0VUlDb2xvclwiXSA9IFwic21hcnRVSUNvbG9yXCI7XG4gICAgLyoqIEV4YW1wbGU6IG9rbGNoKDAuNiAwLjE1IDMwKSAqL1xuICAgIENvbG9yRm9ybWF0W1wib2tsY2hcIl0gPSBcIm9rbGNoXCI7XG4gICAgLyoqIEV4YW1wbGU6IG9rbGNoKDAuNiAwLjE1IDMwIC8gMSkgKi9cbiAgICBDb2xvckZvcm1hdFtcIm9rbGNoYVwiXSA9IFwib2tsY2hhXCI7XG4gICAgLyoqIEF1dG9tYXRpY2FsbHkgY2hvb3NlIGJldHdlZW4gb2tsY2goKSBhbmQgb2tsY2goKSB3aXRoIGFscGhhICovXG4gICAgQ29sb3JGb3JtYXRbXCJzbWFydE9rbGNoXCJdID0gXCJzbWFydE9rbGNoXCI7XG59KShDb2xvckZvcm1hdCB8fCAoZXhwb3J0cy5Db2xvckZvcm1hdCA9IENvbG9yRm9ybWF0ID0ge30pKTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TdHJpbmdDYXNlID0gdm9pZCAwO1xuLyoqXG4gKiBFbnVtIHJlcHJlc2VudGluZyBkaWZmZXJlbnQgc3RyaW5nIGNhc2UgZm9ybWF0cyB1c2VkIGZvciBuYW1pbmcgdG9rZW5zIGFuZCB2YXJpYWJsZXNcbiAqIEV4YW1wbGVzIGFyZSBzaG93biBmb3IgdGhlIGlucHV0OiBcImhlbGxvIHdvcmxkIGV4YW1wbGUgMTIzXCJcbiAqL1xudmFyIFN0cmluZ0Nhc2U7XG4oZnVuY3Rpb24gKFN0cmluZ0Nhc2UpIHtcbiAgICAvKiogRXhhbXBsZTogXCJoZWxsb1dvcmxkRXhhbXBsZTEyM1wiICovXG4gICAgU3RyaW5nQ2FzZVtcImNhbWVsQ2FzZVwiXSA9IFwiY2FtZWxDYXNlXCI7XG4gICAgLyoqIEV4YW1wbGU6IFwiSGVsbG8gV29ybGQgRXhhbXBsZSAxMjNcIiAqL1xuICAgIFN0cmluZ0Nhc2VbXCJjYXBpdGFsQ2FzZVwiXSA9IFwiY2FwaXRhbENhc2VcIjtcbiAgICAvKiogRXhhbXBsZTogXCJIRUxMT19XT1JMRF9FWEFNUExFXzEyM1wiICovXG4gICAgU3RyaW5nQ2FzZVtcImNvbnN0YW50Q2FzZVwiXSA9IFwiY29uc3RhbnRDYXNlXCI7XG4gICAgLyoqIEV4YW1wbGU6IFwiaGVsbG8ud29ybGQuZXhhbXBsZS4xMjNcIiAqL1xuICAgIFN0cmluZ0Nhc2VbXCJkb3RDYXNlXCJdID0gXCJkb3RDYXNlXCI7XG4gICAgLyoqIEV4YW1wbGU6IFwiSGVsbG8tV29ybGQtRXhhbXBsZS0xMjNcIiAqL1xuICAgIFN0cmluZ0Nhc2VbXCJ0cmFpbkNhc2VcIl0gPSBcInRyYWluQ2FzZVwiO1xuICAgIC8qKiBFeGFtcGxlOiBcImhlbGxvIHdvcmxkIGV4YW1wbGUgMTIzXCIgKi9cbiAgICBTdHJpbmdDYXNlW1wibm9DYXNlXCJdID0gXCJub0Nhc2VcIjtcbiAgICAvKiogRXhhbXBsZTogXCJoZWxsby13b3JsZC1leGFtcGxlLTEyM1wiICovXG4gICAgU3RyaW5nQ2FzZVtcImtlYmFiQ2FzZVwiXSA9IFwia2ViYWJDYXNlXCI7XG4gICAgLyoqIEV4YW1wbGU6IFwiSGVsbG9Xb3JsZEV4YW1wbGUxMjNcIiAqL1xuICAgIFN0cmluZ0Nhc2VbXCJwYXNjYWxDYXNlXCJdID0gXCJwYXNjYWxDYXNlXCI7XG4gICAgLyoqIEV4YW1wbGU6IFwiaGVsbG8vd29ybGQvZXhhbXBsZS8xMjNcIiAqL1xuICAgIFN0cmluZ0Nhc2VbXCJwYXRoQ2FzZVwiXSA9IFwicGF0aENhc2VcIjtcbiAgICAvKiogRXhhbXBsZTogXCJIZWxsbyB3b3JsZCBleGFtcGxlIDEyM1wiICovXG4gICAgU3RyaW5nQ2FzZVtcInNlbnRlbmNlQ2FzZVwiXSA9IFwic2VudGVuY2VDYXNlXCI7XG4gICAgLyoqIEV4YW1wbGU6IFwiaGVsbG9fd29ybGRfZXhhbXBsZV8xMjNcIiAqL1xuICAgIFN0cmluZ0Nhc2VbXCJzbmFrZUNhc2VcIl0gPSBcInNuYWtlQ2FzZVwiO1xuICAgIC8qKiBFeGFtcGxlOiBcImhlbGxvd29ybGRleGFtcGxlMTIzXCIgKi9cbiAgICBTdHJpbmdDYXNlW1wiZmxhdENhc2VcIl0gPSBcImZsYXRDYXNlXCI7XG59KShTdHJpbmdDYXNlIHx8IChleHBvcnRzLlN0cmluZ0Nhc2UgPSBTdHJpbmdDYXNlID0ge30pKTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DU1NIZWxwZXIgPSB2b2lkIDA7XG5jb25zdCBzZGtfZXhwb3J0ZXJzXzEgPSByZXF1aXJlKFwiQHN1cGVybm92YWlvL3Nkay1leHBvcnRlcnNcIik7XG5jb25zdCBUb2tlbkhlbHBlcl8xID0gcmVxdWlyZShcIi4vVG9rZW5IZWxwZXJcIik7XG5jb25zdCBDb2xvckhlbHBlcl8xID0gcmVxdWlyZShcIi4vQ29sb3JIZWxwZXJcIik7XG4vKiogQSB1dGlsaXR5IGNsYXNzIHRvIGhlbHAgd2l0aCB0cmFuc2Zvcm1hdGlvbiBvZiB0b2tlbnMgYW5kIFN1cGVybm92YSB0b2tlbi1saWtlIHZhbHVlcyB0byB2YXJpb3VzIGZvcm1hdHMgKi9cbmNsYXNzIENTU0hlbHBlciB7XG4gICAgc3RhdGljIHRva2VuVG9DU1ModG9rZW4sIGFsbFRva2Vucywgb3B0aW9ucykge1xuICAgICAgICAvKiogVXNlIHN1YnJvdXRpbmVzIHRvIGNvbnZlcnQgc3BlY2lmaWMgdG9rZW4gdHlwZXMgdG8gZGlmZmVyZW50IGNzcyByZXByZXNlbnRhdGlvbnMuIE1hbnkgdG9rZW5zIGFyZSBvZiB0aGUgc2FtZSB0eXBlICovXG4gICAgICAgIGxldCBjc3NWYWx1ZTtcbiAgICAgICAgc3dpdGNoICh0b2tlbi50b2tlblR5cGUpIHtcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS5jb2xvcjpcbiAgICAgICAgICAgICAgICBjc3NWYWx1ZSA9IHRoaXMuY29sb3JUb2tlblZhbHVlVG9DU1ModG9rZW4udmFsdWUsIGFsbFRva2Vucywgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUuYm9yZGVyOlxuICAgICAgICAgICAgICAgIGNzc1ZhbHVlID0gdGhpcy5ib3JkZXJUb2tlblZhbHVlVG9DU1ModG9rZW4udmFsdWUsIGFsbFRva2Vucywgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUuZ3JhZGllbnQ6XG4gICAgICAgICAgICAgICAgY3NzVmFsdWUgPSB0aGlzLmdyYWRpZW50VG9rZW5WYWx1ZVRvQ1NTKHRva2VuLnZhbHVlLCBhbGxUb2tlbnMsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLmRpbWVuc2lvbjpcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS5zaXplOlxuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLnNwYWNlOlxuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLm9wYWNpdHk6XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUuZm9udFNpemU6XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUubGluZUhlaWdodDpcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS5sZXR0ZXJTcGFjaW5nOlxuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLnBhcmFncmFwaFNwYWNpbmc6XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUuYm9yZGVyV2lkdGg6XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUucmFkaXVzOlxuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLmR1cmF0aW9uOlxuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLnpJbmRleDpcbiAgICAgICAgICAgICAgICBjc3NWYWx1ZSA9IHRoaXMuZGltZW5zaW9uVG9rZW5WYWx1ZVRvQ1NTKHRva2VuLnZhbHVlLCBhbGxUb2tlbnMsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLnNoYWRvdzpcbiAgICAgICAgICAgICAgICBjc3NWYWx1ZSA9IHRoaXMuc2hhZG93VG9rZW5WYWx1ZVRvQ1NTKHRva2VuLnZhbHVlLCBhbGxUb2tlbnMsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLmZvbnRXZWlnaHQ6XG4gICAgICAgICAgICAgICAgY3NzVmFsdWUgPSB0aGlzLmZvbnRXZWlnaHRUb2tlblZhbHVlVG9DU1ModG9rZW4udmFsdWUsIGFsbFRva2Vucywgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUuZm9udEZhbWlseTpcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS5wcm9kdWN0Q29weTpcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS5zdHJpbmc6XG4gICAgICAgICAgICAgICAgY3NzVmFsdWUgPSB0aGlzLnN0cmluZ1Rva2VuVmFsdWVUb0NTUyh0b2tlbi52YWx1ZSwgYWxsVG9rZW5zLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS50ZXh0Q2FzZTpcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS50ZXh0RGVjb3JhdGlvbjpcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS52aXNpYmlsaXR5OlxuICAgICAgICAgICAgICAgIGNzc1ZhbHVlID0gdGhpcy5vcHRpb25Ub2tlblZhbHVlVG9DU1ModG9rZW4udmFsdWUsIGFsbFRva2Vucywgb3B0aW9ucywgdG9rZW4udG9rZW5UeXBlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS5ibHVyOlxuICAgICAgICAgICAgICAgIGNzc1ZhbHVlID0gdGhpcy5ibHVyVG9rZW5WYWx1ZVRvQ1NTKHRva2VuLnZhbHVlLCBhbGxUb2tlbnMsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuVG9rZW5UeXBlLnR5cG9ncmFwaHk6XG4gICAgICAgICAgICAgICAgY3NzVmFsdWUgPSB0aGlzLnR5cG9ncmFwaHlUb2tlblZhbHVlVG9DU1ModG9rZW4udmFsdWUsIGFsbFRva2Vucywgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBzZGtfZXhwb3J0ZXJzXzEuVW5yZWFjaGFibGVDYXNlRXJyb3IodG9rZW4udG9rZW5UeXBlLCAnVW5zdXBwb3J0ZWQgdG9rZW4gdHlwZSBmb3IgdHJhbnNmb3JtYXRpb24gdG8gQ1NTOicpO1xuICAgICAgICB9XG4gICAgICAgIC8vIEFsbG93IHZhbHVlIHRyYW5zZm9ybWF0aW9uIGlmIHRyYW5zZm9ybWVyIGV4aXN0c1xuICAgICAgICBpZiAob3B0aW9ucy52YWx1ZVRyYW5zZm9ybWVyKSB7XG4gICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm1lZFZhbHVlID0gb3B0aW9ucy52YWx1ZVRyYW5zZm9ybWVyKGNzc1ZhbHVlLCB0b2tlbik7XG4gICAgICAgICAgICBpZiAodHJhbnNmb3JtZWRWYWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zZm9ybWVkVmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNzc1ZhbHVlO1xuICAgIH1cbiAgICBzdGF0aWMgY29sb3JUb2tlblZhbHVlVG9DU1MoY29sb3IsIGFsbFRva2Vucywgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gQ29sb3JIZWxwZXJfMS5Db2xvckhlbHBlci5mb3JtYXR0ZWRDb2xvck9yVmFyaWFibGVOYW1lKGNvbG9yLCBhbGxUb2tlbnMsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBzdGF0aWMgYm9yZGVyVG9rZW5WYWx1ZVRvQ1NTKGJvcmRlciwgYWxsVG9rZW5zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJlZmVyZW5jZSA9ICgwLCBUb2tlbkhlbHBlcl8xLnN1cmVPcHRpb25hbFJlZmVyZW5jZSkoYm9yZGVyLnJlZmVyZW5jZWRUb2tlbklkLCBhbGxUb2tlbnMsIG9wdGlvbnMuYWxsb3dSZWZlcmVuY2VzKTtcbiAgICAgICAgaWYgKHJlZmVyZW5jZSkge1xuICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMudG9rZW5Ub1ZhcmlhYmxlUmVmKHJlZmVyZW5jZSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGF0YSA9IHtcbiAgICAgICAgICAgIHdpZHRoOiB0aGlzLmRpbWVuc2lvblRva2VuVmFsdWVUb0NTUyhib3JkZXIud2lkdGgsIGFsbFRva2Vucywgb3B0aW9ucyksXG4gICAgICAgICAgICBzdHlsZTogdGhpcy5ib3JkZXJTdHlsZVRvQ1NTKGJvcmRlci5zdHlsZSksXG4gICAgICAgICAgICBjb2xvcjogdGhpcy5jb2xvclRva2VuVmFsdWVUb0NTUyhib3JkZXIuY29sb3IsIGFsbFRva2Vucywgb3B0aW9ucyksXG4gICAgICAgICAgICBwb3NpdGlvbjogdGhpcy5ib3JkZXJQb3NpdGlvblRvQ1NTKGJvcmRlci5wb3NpdGlvbikgLy8gTm90IHVzZWQgZm9yIG5vd1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gYCR7ZGF0YS53aWR0aH0gJHtkYXRhLnN0eWxlfSAke2RhdGEuY29sb3J9YDtcbiAgICB9XG4gICAgc3RhdGljIGdyYWRpZW50VG9rZW5WYWx1ZVRvQ1NTKGdyYWRpZW50cywgYWxsVG9rZW5zLCBvcHRpb25zKSB7XG4gICAgICAgIC8vIEV4cG9ydCBlYWNoIGxheWVyIG9mIHRoZSBncmFkaWVudCBzZXBhcmF0ZWx5LCB0aGVuIGpvaW4gdGhlIENTUyBiYWNrZ3JvdW5kXG4gICAgICAgIHJldHVybiBncmFkaWVudHMubWFwKChncmFkaWVudCkgPT4gdGhpcy5ncmFkaWVudExheWVyVG9DU1MoZ3JhZGllbnQsIGFsbFRva2Vucywgb3B0aW9ucykpLmpvaW4oJywgJyk7XG4gICAgfVxuICAgIC8qKiBDb252ZXJ0cyBncmFkaWVudCB0b2tlbiB2YWx1ZSB0byBjc3MgZGVmaW5pdGlvbiAqL1xuICAgIHN0YXRpYyBncmFkaWVudExheWVyVG9DU1ModmFsdWUsIGFsbFRva2Vucywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCByZWZlcmVuY2UgPSAoMCwgVG9rZW5IZWxwZXJfMS5zdXJlT3B0aW9uYWxSZWZlcmVuY2UpKHZhbHVlLnJlZmVyZW5jZWRUb2tlbklkLCBhbGxUb2tlbnMsIG9wdGlvbnMuYWxsb3dSZWZlcmVuY2VzKTtcbiAgICAgICAgaWYgKHJlZmVyZW5jZSkge1xuICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMudG9rZW5Ub1ZhcmlhYmxlUmVmKHJlZmVyZW5jZSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGVsdGFYID0gQ29sb3JIZWxwZXJfMS5Db2xvckhlbHBlci5yb3VuZFRvRGVjaW1hbHModmFsdWUudG8ueCwgb3B0aW9ucy5kZWNpbWFscykgLVxuICAgICAgICAgICAgQ29sb3JIZWxwZXJfMS5Db2xvckhlbHBlci5yb3VuZFRvRGVjaW1hbHModmFsdWUuZnJvbS54LCBvcHRpb25zLmRlY2ltYWxzKTtcbiAgICAgICAgY29uc3QgZGVsdGFZID0gQ29sb3JIZWxwZXJfMS5Db2xvckhlbHBlci5yb3VuZFRvRGVjaW1hbHModmFsdWUudG8ueSwgb3B0aW9ucy5kZWNpbWFscykgLVxuICAgICAgICAgICAgQ29sb3JIZWxwZXJfMS5Db2xvckhlbHBlci5yb3VuZFRvRGVjaW1hbHModmFsdWUuZnJvbS55LCBvcHRpb25zLmRlY2ltYWxzKTtcbiAgICAgICAgY29uc3QgcmFkID0gTWF0aC5hdGFuMihkZWx0YVksIGRlbHRhWCk7XG4gICAgICAgIGNvbnN0IGRlZyA9IHJhZCAqICgxODAgLyBNYXRoLlBJKTtcbiAgICAgICAgY29uc3QgZ2V0QW5nbGUgPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoZGVsdGFYID49IDAgJiYgZGVsdGFZID4gMCkge1xuICAgICAgICAgICAgICAgIC8vIHRvcCB0byBib3R0b20gaXMgOTBkZWcgYnV0IHNob3VsZCBiZSAxODBkZWdcbiAgICAgICAgICAgICAgICByZXR1cm4gOTAgKyBkZWc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZGVsdGFYID4gMCAmJiBkZWx0YVkgPD0gMCkge1xuICAgICAgICAgICAgICAgIC8vIGxlZnQgdG8gcmlnaHQgaXMgMGRlZyBidXQgc2hvdWxkIGJlIDkwZGVnXG4gICAgICAgICAgICAgICAgcmV0dXJuIDkwICsgZGVnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGRlbHRhWCA8PSAwICYmIGRlbHRhWSA8IDApIHtcbiAgICAgICAgICAgICAgICAvLyBib3R0b20gdG8gdG9wIGlzIC05MGRlZyBidXQgc2hvdWxkIGJlIDBkZWdcbiAgICAgICAgICAgICAgICByZXR1cm4gOTAgKyBkZWc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyByaWdodCB0byBsZWZ0IGlzIDE4MGRlZyBidXQgc2hvdWxkIGJlIC05MGRlZ1xuICAgICAgICAgICAgcmV0dXJuIGRlZyAtIDI3MDtcbiAgICAgICAgfTtcbiAgICAgICAgbGV0IGdyYWRpZW50VHlwZSA9ICcnO1xuICAgICAgICBzd2l0Y2ggKHZhbHVlLnR5cGUpIHtcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLkdyYWRpZW50VHlwZS5saW5lYXI6XG4gICAgICAgICAgICAgICAgZ3JhZGllbnRUeXBlID0gYGxpbmVhci1ncmFkaWVudCgke2dldEFuZ2xlKCl9ZGVnLCBgO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuR3JhZGllbnRUeXBlLnJhZGlhbDpcbiAgICAgICAgICAgICAgICBncmFkaWVudFR5cGUgPSAncmFkaWFsLWdyYWRpZW50KGNpcmNsZSwgJztcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLkdyYWRpZW50VHlwZS5hbmd1bGFyOlxuICAgICAgICAgICAgICAgIGdyYWRpZW50VHlwZSA9ICdjb25pYy1ncmFkaWVudCgnO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBncmFkaWVudFR5cGUgPSBgbGluZWFyLWdyYWRpZW50KCR7Z2V0QW5nbGUoKX1kZWcsIGA7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgLy8gRXhhbXBsZTogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSwgcmdiYSg2Myw5NCwyNTEsMSkgMCUsIHJnYmEoMjUyLDcwLDEwNywxKSAxMDAlKTtcbiAgICAgICAgY29uc3Qgc3RvcHMgPSB2YWx1ZS5zdG9wc1xuICAgICAgICAgICAgLm1hcCgoc3RvcCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGAke3RoaXMuY29sb3JUb2tlblZhbHVlVG9DU1Moc3RvcC5jb2xvciwgYWxsVG9rZW5zLCBvcHRpb25zKX0gJHtDb2xvckhlbHBlcl8xLkNvbG9ySGVscGVyLnJvdW5kVG9EZWNpbWFscyhzdG9wLnBvc2l0aW9uICogMTAwLCBvcHRpb25zLmRlY2ltYWxzKX0lYDtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5qb2luKCcsICcpO1xuICAgICAgICByZXR1cm4gYCR7Z3JhZGllbnRUeXBlfSR7c3RvcHN9KWA7XG4gICAgfVxuICAgIHN0YXRpYyBkaW1lbnNpb25Ub2tlblZhbHVlVG9DU1MoZGltZW5zaW9uLCBhbGxUb2tlbnMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgcmVmZXJlbmNlID0gKDAsIFRva2VuSGVscGVyXzEuc3VyZU9wdGlvbmFsUmVmZXJlbmNlKShkaW1lbnNpb24ucmVmZXJlbmNlZFRva2VuSWQsIGFsbFRva2Vucywgb3B0aW9ucy5hbGxvd1JlZmVyZW5jZXMpO1xuICAgICAgICBpZiAocmVmZXJlbmNlKSB7XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9ucy50b2tlblRvVmFyaWFibGVSZWYocmVmZXJlbmNlKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBIYW5kbGUgdW5pdCBjb252ZXJzaW9uIGlmIG5lZWRlZFxuICAgICAgICBpZiAob3B0aW9ucy5mb3JjZVJlbVVuaXQgJiYgZGltZW5zaW9uLnVuaXQgPT09IHNka19leHBvcnRlcnNfMS5Vbml0LnBpeGVscykge1xuICAgICAgICAgICAgY29uc3QgcmVtQmFzZSA9IG9wdGlvbnMucmVtQmFzZSB8fCAxNjtcbiAgICAgICAgICAgIGNvbnN0IHJlbVZhbHVlID0gZGltZW5zaW9uLm1lYXN1cmUgLyByZW1CYXNlO1xuICAgICAgICAgICAgcmV0dXJuIGAke0NvbG9ySGVscGVyXzEuQ29sb3JIZWxwZXIucm91bmRUb0RlY2ltYWxzKHJlbVZhbHVlLCBvcHRpb25zLmRlY2ltYWxzKX1yZW1gO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBgJHtDb2xvckhlbHBlcl8xLkNvbG9ySGVscGVyLnJvdW5kVG9EZWNpbWFscyhkaW1lbnNpb24ubWVhc3VyZSwgb3B0aW9ucy5kZWNpbWFscyl9JHt0aGlzLnVuaXRUb0NTUyhkaW1lbnNpb24udW5pdCl9YDtcbiAgICB9XG4gICAgc3RhdGljIHNoYWRvd1Rva2VuVmFsdWVUb0NTUyhzaGFkb3dzLCBhbGxUb2tlbnMsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHNoYWRvd3MubWFwKChsYXllcikgPT4gdGhpcy5zaGFkb3dMYXllclRvQ1NTKGxheWVyLCBhbGxUb2tlbnMsIG9wdGlvbnMpKS5qb2luKCcsICcpO1xuICAgIH1cbiAgICBzdGF0aWMgc2hhZG93TGF5ZXJUb0NTUyh2YWx1ZSwgYWxsVG9rZW5zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJlZmVyZW5jZSA9ICgwLCBUb2tlbkhlbHBlcl8xLnN1cmVPcHRpb25hbFJlZmVyZW5jZSkodmFsdWUucmVmZXJlbmNlZFRva2VuSWQsIGFsbFRva2Vucywgb3B0aW9ucy5hbGxvd1JlZmVyZW5jZXMpO1xuICAgICAgICBpZiAocmVmZXJlbmNlKSB7XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9ucy50b2tlblRvVmFyaWFibGVSZWYocmVmZXJlbmNlKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBDb252ZXJ0IHBpeGVsIHZhbHVlcyB0byByZW0gaWYgbmVlZGVkXG4gICAgICAgIGNvbnN0IGNvbnZlcnRUb1JlbSA9IChweCkgPT4ge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMuZm9yY2VSZW1Vbml0KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVtQmFzZSA9IG9wdGlvbnMucmVtQmFzZSB8fCAxNjtcbiAgICAgICAgICAgICAgICBjb25zdCByZW1WYWx1ZSA9IHB4IC8gcmVtQmFzZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gYCR7Q29sb3JIZWxwZXJfMS5Db2xvckhlbHBlci5yb3VuZFRvRGVjaW1hbHMocmVtVmFsdWUsIG9wdGlvbnMuZGVjaW1hbHMpfXJlbWA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYCR7cHh9cHhgO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gYCR7dmFsdWUudHlwZSA9PT0gc2RrX2V4cG9ydGVyc18xLlNoYWRvd1R5cGUuaW5uZXIgPyAnaW5zZXQgJyA6ICcnfSR7Y29udmVydFRvUmVtKHZhbHVlLngpfSAke2NvbnZlcnRUb1JlbSh2YWx1ZS55KX0gJHtjb252ZXJ0VG9SZW0odmFsdWUucmFkaXVzKX0gJHtjb252ZXJ0VG9SZW0odmFsdWUuc3ByZWFkKX0gJHt0aGlzLmNvbG9yVG9rZW5WYWx1ZVRvQ1NTKHtcbiAgICAgICAgICAgIC4uLnZhbHVlLmNvbG9yLFxuICAgICAgICAgICAgLi4uKHZhbHVlLm9wYWNpdHkgJiYgeyBvcGFjaXR5OiB2YWx1ZS5vcGFjaXR5IH0pXG4gICAgICAgIH0sIGFsbFRva2Vucywgb3B0aW9ucyl9YDtcbiAgICB9XG4gICAgc3RhdGljIGZvbnRXZWlnaHRUb2tlblZhbHVlVG9DU1ModmFsdWUsIGFsbFRva2Vucywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCByZWZlcmVuY2UgPSAoMCwgVG9rZW5IZWxwZXJfMS5zdXJlT3B0aW9uYWxSZWZlcmVuY2UpKHZhbHVlLnJlZmVyZW5jZWRUb2tlbklkLCBhbGxUb2tlbnMsIG9wdGlvbnMuYWxsb3dSZWZlcmVuY2VzKTtcbiAgICAgICAgaWYgKHJlZmVyZW5jZSkge1xuICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMudG9rZW5Ub1ZhcmlhYmxlUmVmKHJlZmVyZW5jZSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQ29udmVydCB0ZXh0IHdlaWdodHMgdG8gbnVtZXJpY2FsIHZhbHVlc1xuICAgICAgICBjb25zdCBub3JtYWxpemVkV2VpZ2h0ID0gdGhpcy5ub3JtYWxpemVUZXh0V2VpZ2h0KHZhbHVlLnRleHQpO1xuICAgICAgICByZXR1cm4gYCR7bm9ybWFsaXplZFdlaWdodH1gO1xuICAgIH1cbiAgICBzdGF0aWMgbm9ybWFsaXplVGV4dFdlaWdodCh3ZWlnaHQpIHtcbiAgICAgICAgLy8gQ29udmVydCB0byBsb3dlcmNhc2UgZm9yIGNhc2UtaW5zZW5zaXRpdmUgY29tcGFyaXNvblxuICAgICAgICBjb25zdCBub3JtYWxpemVkVGV4dCA9IHdlaWdodC50b0xvd2VyQ2FzZSgpLnRyaW0oKTtcbiAgICAgICAgLy8gRmlyc3QgY2hlY2sgaWYgaXQncyBhbHJlYWR5IGEgdmFsaWQgbnVtYmVyXG4gICAgICAgIGNvbnN0IG51bWVyaWNXZWlnaHQgPSBwYXJzZUludChub3JtYWxpemVkVGV4dCk7XG4gICAgICAgIGlmICghaXNOYU4obnVtZXJpY1dlaWdodCkpIHtcbiAgICAgICAgICAgIHJldHVybiBudW1lcmljV2VpZ2h0O1xuICAgICAgICB9XG4gICAgICAgIC8vIE1hcCBjb21tb24gd2VpZ2h0IG5hbWVzIHRvIHRoZWlyIG51bWVyaWMgdmFsdWVzXG4gICAgICAgIHN3aXRjaCAobm9ybWFsaXplZFRleHQpIHtcbiAgICAgICAgICAgIGNhc2UgJ3RoaW4nOlxuICAgICAgICAgICAgICAgIHJldHVybiAxMDA7XG4gICAgICAgICAgICBjYXNlICdoYWlybGluZSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIDEwMDtcbiAgICAgICAgICAgIGNhc2UgJ2V4dHJhIGxpZ2h0JzpcbiAgICAgICAgICAgIGNhc2UgJ2V4dHJhbGlnaHQnOlxuICAgICAgICAgICAgY2FzZSAndWx0cmEgbGlnaHQnOlxuICAgICAgICAgICAgY2FzZSAndWx0cmFsaWdodCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIDIwMDtcbiAgICAgICAgICAgIGNhc2UgJ2xpZ2h0JzpcbiAgICAgICAgICAgICAgICByZXR1cm4gMzAwO1xuICAgICAgICAgICAgY2FzZSAnbm9ybWFsJzpcbiAgICAgICAgICAgIGNhc2UgJ3JlZ3VsYXInOlxuICAgICAgICAgICAgY2FzZSAnYm9vayc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIDQwMDtcbiAgICAgICAgICAgIGNhc2UgJ21lZGl1bSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIDUwMDtcbiAgICAgICAgICAgIGNhc2UgJ3NlbWkgYm9sZCc6XG4gICAgICAgICAgICBjYXNlICdzZW1pYm9sZCc6XG4gICAgICAgICAgICBjYXNlICdkZW1pIGJvbGQnOlxuICAgICAgICAgICAgY2FzZSAnZGVtaWJvbGQnOlxuICAgICAgICAgICAgICAgIHJldHVybiA2MDA7XG4gICAgICAgICAgICBjYXNlICdib2xkJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gNzAwO1xuICAgICAgICAgICAgY2FzZSAnZXh0cmEgYm9sZCc6XG4gICAgICAgICAgICBjYXNlICdleHRyYWJvbGQnOlxuICAgICAgICAgICAgY2FzZSAndWx0cmEgYm9sZCc6XG4gICAgICAgICAgICBjYXNlICd1bHRyYWJvbGQnOlxuICAgICAgICAgICAgICAgIHJldHVybiA4MDA7XG4gICAgICAgICAgICBjYXNlICdibGFjayc6XG4gICAgICAgICAgICBjYXNlICdoZWF2eSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIDkwMDtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgLy8gRGVmYXVsdCB0byBub3JtYWwgd2VpZ2h0ICg0MDApIGlmIHRoZSB2YWx1ZSBpcyBub3QgcmVjb2duaXplZFxuICAgICAgICAgICAgICAgIHJldHVybiA0MDA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIHN0cmluZ1Rva2VuVmFsdWVUb0NTUyh2YWx1ZSwgYWxsVG9rZW5zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJlZmVyZW5jZSA9ICgwLCBUb2tlbkhlbHBlcl8xLnN1cmVPcHRpb25hbFJlZmVyZW5jZSkodmFsdWUucmVmZXJlbmNlZFRva2VuSWQsIGFsbFRva2Vucywgb3B0aW9ucy5hbGxvd1JlZmVyZW5jZXMpO1xuICAgICAgICBpZiAocmVmZXJlbmNlKSB7XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9ucy50b2tlblRvVmFyaWFibGVSZWYocmVmZXJlbmNlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYFwiJHt2YWx1ZS50ZXh0fVwiYDtcbiAgICB9XG4gICAgc3RhdGljIG9wdGlvblRva2VuVmFsdWVUb0NTUyhvcHRpb24sIGFsbFRva2Vucywgb3B0aW9ucywgdG9rZW5UeXBlKSB7XG4gICAgICAgIGNvbnN0IHJlZmVyZW5jZSA9ICgwLCBUb2tlbkhlbHBlcl8xLnN1cmVPcHRpb25hbFJlZmVyZW5jZSkob3B0aW9uLnJlZmVyZW5jZWRUb2tlbklkLCBhbGxUb2tlbnMsIG9wdGlvbnMuYWxsb3dSZWZlcmVuY2VzKTtcbiAgICAgICAgaWYgKHJlZmVyZW5jZSkge1xuICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMudG9rZW5Ub1ZhcmlhYmxlUmVmKHJlZmVyZW5jZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRva2VuVHlwZSA9PT0gc2RrX2V4cG9ydGVyc18xLlRva2VuVHlwZS50ZXh0Q2FzZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudGV4dENhc2VUb0NTUyhvcHRpb24udmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0b2tlblR5cGUgPT09IHNka19leHBvcnRlcnNfMS5Ub2tlblR5cGUudGV4dERlY29yYXRpb24pIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRleHREZWNvcmF0aW9uVG9DU1Mob3B0aW9uLnZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBWaXNpYmlsaXR5IHZhbHVlcyBhcmUgc3VwcG9ydGVkIGluIENTUyBhcyBpcyBvdXIgZGF0YSBtb2RlbFxuICAgICAgICByZXR1cm4gb3B0aW9uLnZhbHVlO1xuICAgIH1cbiAgICBzdGF0aWMgYmx1clRva2VuVmFsdWVUb0NTUyhibHVyLCBhbGxUb2tlbnMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgcmVmZXJlbmNlID0gKDAsIFRva2VuSGVscGVyXzEuc3VyZU9wdGlvbmFsUmVmZXJlbmNlKShibHVyLnJlZmVyZW5jZWRUb2tlbklkLCBhbGxUb2tlbnMsIG9wdGlvbnMuYWxsb3dSZWZlcmVuY2VzKTtcbiAgICAgICAgaWYgKHJlZmVyZW5jZSkge1xuICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMudG9rZW5Ub1ZhcmlhYmxlUmVmKHJlZmVyZW5jZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGBibHVyKCR7dGhpcy5kaW1lbnNpb25Ub2tlblZhbHVlVG9DU1MoYmx1ci5yYWRpdXMsIGFsbFRva2Vucywgb3B0aW9ucyl9KWA7XG4gICAgfVxuICAgIHN0YXRpYyB0eXBvZ3JhcGh5VG9rZW5WYWx1ZVRvQ1NTKHR5cG9ncmFwaHksIGFsbFRva2Vucywgb3B0aW9ucykge1xuICAgICAgICAvLyBSZWZlcmVuY2UgZnVsbCB0eXBvZ3JhcGh5IHRva2VuIGlmIHNldFxuICAgICAgICBjb25zdCByZWZlcmVuY2UgPSAoMCwgVG9rZW5IZWxwZXJfMS5zdXJlT3B0aW9uYWxSZWZlcmVuY2UpKHR5cG9ncmFwaHkucmVmZXJlbmNlZFRva2VuSWQsIGFsbFRva2Vucywgb3B0aW9ucy5hbGxvd1JlZmVyZW5jZXMpO1xuICAgICAgICBpZiAocmVmZXJlbmNlKSB7XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9ucy50b2tlblRvVmFyaWFibGVSZWYocmVmZXJlbmNlKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBSZXNvbHZlIHBhcnRpYWwgcmVmZXJlbmNlc1xuICAgICAgICBjb25zdCBmb250RmFtaWx5UmVmZXJlbmNlID0gKDAsIFRva2VuSGVscGVyXzEuc3VyZU9wdGlvbmFsUmVmZXJlbmNlKSh0eXBvZ3JhcGh5LmZvbnRGYW1pbHkucmVmZXJlbmNlZFRva2VuSWQsIGFsbFRva2Vucywgb3B0aW9ucy5hbGxvd1JlZmVyZW5jZXMpO1xuICAgICAgICBjb25zdCBmb250V2VpZ2h0UmVmZXJlbmNlID0gKDAsIFRva2VuSGVscGVyXzEuc3VyZU9wdGlvbmFsUmVmZXJlbmNlKSh0eXBvZ3JhcGh5LmZvbnRXZWlnaHQucmVmZXJlbmNlZFRva2VuSWQsIGFsbFRva2Vucywgb3B0aW9ucy5hbGxvd1JlZmVyZW5jZXMpO1xuICAgICAgICBjb25zdCBkZWNvcmF0aW9uUmVmZXJlbmNlID0gKDAsIFRva2VuSGVscGVyXzEuc3VyZU9wdGlvbmFsUmVmZXJlbmNlKSh0eXBvZ3JhcGh5LnRleHREZWNvcmF0aW9uLnJlZmVyZW5jZWRUb2tlbklkLCBhbGxUb2tlbnMsIG9wdGlvbnMuYWxsb3dSZWZlcmVuY2VzKTtcbiAgICAgICAgY29uc3QgY2FzZVJlZmVyZW5jZSA9ICgwLCBUb2tlbkhlbHBlcl8xLnN1cmVPcHRpb25hbFJlZmVyZW5jZSkodHlwb2dyYXBoeS50ZXh0Q2FzZS5yZWZlcmVuY2VkVG9rZW5JZCwgYWxsVG9rZW5zLCBvcHRpb25zLmFsbG93UmVmZXJlbmNlcyk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSB7XG4gICAgICAgICAgICBmb250RmFtaWx5OiBmb250RmFtaWx5UmVmZXJlbmNlID8gb3B0aW9ucy50b2tlblRvVmFyaWFibGVSZWYoZm9udEZhbWlseVJlZmVyZW5jZSkgOiB0eXBvZ3JhcGh5LmZvbnRGYW1pbHkudGV4dCxcbiAgICAgICAgICAgIGZvbnRXZWlnaHQ6IGZvbnRXZWlnaHRSZWZlcmVuY2VcbiAgICAgICAgICAgICAgICA/IG9wdGlvbnMudG9rZW5Ub1ZhcmlhYmxlUmVmKGZvbnRXZWlnaHRSZWZlcmVuY2UpXG4gICAgICAgICAgICAgICAgOiB0aGlzLm5vcm1hbGl6ZVRleHRXZWlnaHQodHlwb2dyYXBoeS5mb250V2VpZ2h0LnRleHQpLFxuICAgICAgICAgICAgdGV4dERlY29yYXRpb246IGRlY29yYXRpb25SZWZlcmVuY2VcbiAgICAgICAgICAgICAgICA/IG9wdGlvbnMudG9rZW5Ub1ZhcmlhYmxlUmVmKGRlY29yYXRpb25SZWZlcmVuY2UpXG4gICAgICAgICAgICAgICAgOiB0eXBvZ3JhcGh5LnRleHREZWNvcmF0aW9uLnZhbHVlID09PSBzZGtfZXhwb3J0ZXJzXzEuVGV4dERlY29yYXRpb24ub3JpZ2luYWxcbiAgICAgICAgICAgICAgICAgICAgPyB0aGlzLnRleHREZWNvcmF0aW9uVG9DU1ModHlwb2dyYXBoeS50ZXh0RGVjb3JhdGlvbi52YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB0ZXh0Q2FzZTogY2FzZVJlZmVyZW5jZVxuICAgICAgICAgICAgICAgID8gb3B0aW9ucy50b2tlblRvVmFyaWFibGVSZWYoY2FzZVJlZmVyZW5jZSlcbiAgICAgICAgICAgICAgICA6IHR5cG9ncmFwaHkudGV4dENhc2UudmFsdWUgPT09IHNka19leHBvcnRlcnNfMS5UZXh0Q2FzZS5vcmlnaW5hbFxuICAgICAgICAgICAgICAgICAgICA/IHRoaXMudGV4dENhc2VUb0NTUyh0eXBvZ3JhcGh5LnRleHRDYXNlLnZhbHVlKVxuICAgICAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGNhcHM6IHR5cG9ncmFwaHkudGV4dENhc2UudmFsdWUgPT09IHNka19leHBvcnRlcnNfMS5UZXh0Q2FzZS5zbWFsbENhcHMsXG4gICAgICAgICAgICBmb250U2l6ZTogdGhpcy5kaW1lbnNpb25Ub2tlblZhbHVlVG9DU1ModHlwb2dyYXBoeS5mb250U2l6ZSwgYWxsVG9rZW5zLCBvcHRpb25zKSxcbiAgICAgICAgICAgIGxpbmVIZWlnaHQ6IHR5cG9ncmFwaHkubGluZUhlaWdodFxuICAgICAgICAgICAgICAgID8gdGhpcy5kaW1lbnNpb25Ub2tlblZhbHVlVG9DU1ModHlwb2dyYXBoeS5saW5lSGVpZ2h0LCBhbGxUb2tlbnMsIG9wdGlvbnMpXG4gICAgICAgICAgICAgICAgOiB1bmRlZmluZWRcbiAgICAgICAgfTtcbiAgICAgICAgLy8gRm9ybWFsIENTUyBkZWZpbml0aW9uOiBmb250LXN0eWxlLCBmb250LXZhcmlhbnQsIGZvbnQtd2VpZ2h0LCBmb250LXN0cmV0Y2gsIGZvbnQtc2l6ZSwgbGluZS1oZWlnaHQsIGFuZCBmb250LWZhbWlseS5cbiAgICAgICAgLy8gRXhhbXBsZTogc21hbGwtY2FwcyBib2xkIDI0cHgvMXJlbSBcIldpbmdkaW5nc1wiXG4gICAgICAgIGNvbnN0IGZyYWdtZW50Q2FwcyA9IGRhdGEuY2FwcyA/ICdzbWFsbC1jYXBzICcgOiAnJztcbiAgICAgICAgY29uc3QgZnJhZ21lbnRXZWlnaHQgPSBkYXRhLmZvbnRXZWlnaHQ7XG4gICAgICAgIGNvbnN0IGZyYWdtZW50U2l6ZSA9IGRhdGEuZm9udFNpemU7XG4gICAgICAgIGNvbnN0IGZyYWdtZW50TGluZUhlaWdodCA9IGRhdGEubGluZUhlaWdodDtcbiAgICAgICAgY29uc3QgZnJhZ21lbnRTaXplQW5kTGluZUhlaWdodCA9IGRhdGEubGluZUhlaWdodCA/IGAke2ZyYWdtZW50U2l6ZX0vJHtmcmFnbWVudExpbmVIZWlnaHR9YCA6IGZyYWdtZW50U2l6ZTtcbiAgICAgICAgY29uc3QgZnJhZ21lbnRGYW1pbHkgPSBmb250RmFtaWx5UmVmZXJlbmNlID8gZGF0YS5mb250RmFtaWx5IDogYFxcXCIke2RhdGEuZm9udEZhbWlseX1cXFwiYDtcbiAgICAgICAgcmV0dXJuIGAke2ZyYWdtZW50Q2Fwc30ke2ZyYWdtZW50V2VpZ2h0fSAke2ZyYWdtZW50U2l6ZUFuZExpbmVIZWlnaHR9ICR7ZnJhZ21lbnRGYW1pbHl9YDtcbiAgICB9XG4gICAgc3RhdGljIGJvcmRlclN0eWxlVG9DU1MoYm9yZGVyU3R5bGUpIHtcbiAgICAgICAgc3dpdGNoIChib3JkZXJTdHlsZSkge1xuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuQm9yZGVyU3R5bGUuZGFzaGVkOlxuICAgICAgICAgICAgICAgIHJldHVybiAnZGFzaGVkJztcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLkJvcmRlclN0eWxlLmRvdHRlZDpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2RvdHRlZCc7XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5Cb3JkZXJTdHlsZS5zb2xpZDpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3NvbGlkJztcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLkJvcmRlclN0eWxlLmdyb292ZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2dyb292ZSc7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiAnc29saWQnO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBib3JkZXJQb3NpdGlvblRvQ1NTKGJvcmRlclBvc2l0aW9uKSB7XG4gICAgICAgIHN3aXRjaCAoYm9yZGVyUG9zaXRpb24pIHtcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLkJvcmRlclBvc2l0aW9uLmNlbnRlcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2NlbnRlcic7XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5Cb3JkZXJQb3NpdGlvbi5pbnNpZGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdpbnNpZGUnO1xuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuQm9yZGVyUG9zaXRpb24ub3V0c2lkZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ291dHNpZGUnO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ291dHNpZGUnO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyB1bml0VG9DU1ModW5pdCkge1xuICAgICAgICBzd2l0Y2ggKHVuaXQpIHtcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLlVuaXQucGVyY2VudDpcbiAgICAgICAgICAgICAgICByZXR1cm4gJyUnO1xuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuVW5pdC5waXhlbHM6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdweCc7XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5Vbml0LnJlbTpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3JlbSc7XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5Vbml0LnJhdzpcbiAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5Vbml0Lm1zOlxuICAgICAgICAgICAgICAgIHJldHVybiAnbXMnO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3B4JztcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgdGV4dENhc2VUb0NTUyh0ZXh0Q2FzZSkge1xuICAgICAgICBzd2l0Y2ggKHRleHRDYXNlKSB7XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5UZXh0Q2FzZS5vcmlnaW5hbDpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ25vbmUnO1xuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuVGV4dENhc2UudXBwZXI6XG4gICAgICAgICAgICAgICAgcmV0dXJuICd1cHBlcmNhc2UnO1xuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuVGV4dENhc2UubG93ZXI6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdsb3dlcmNhc2UnO1xuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuVGV4dENhc2UuY2FtZWw6XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5UZXh0Q2FzZS5zbWFsbENhcHM6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdjYXBpdGFsaXplJztcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgdGV4dERlY29yYXRpb25Ub0NTUyh0ZXh0RGVjb3JhdGlvbikge1xuICAgICAgICBzd2l0Y2ggKHRleHREZWNvcmF0aW9uKSB7XG4gICAgICAgICAgICBjYXNlIHNka19leHBvcnRlcnNfMS5UZXh0RGVjb3JhdGlvbi5vcmlnaW5hbDpcbiAgICAgICAgICAgICAgICByZXR1cm4gJ25vbmUnO1xuICAgICAgICAgICAgY2FzZSBzZGtfZXhwb3J0ZXJzXzEuVGV4dERlY29yYXRpb24udW5kZXJsaW5lOlxuICAgICAgICAgICAgICAgIHJldHVybiAndW5kZXJsaW5lJztcbiAgICAgICAgICAgIGNhc2Ugc2RrX2V4cG9ydGVyc18xLlRleHREZWNvcmF0aW9uLnN0cmlrZXRocm91Z2g6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdsaW5lLXRocm91Z2gnO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5DU1NIZWxwZXIgPSBDU1NIZWxwZXI7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29sb3JIZWxwZXIgPSB2b2lkIDA7XG5jb25zdCBDb2xvckZvcm1hdF8xID0gcmVxdWlyZShcIi4uL2VudW1zL0NvbG9yRm9ybWF0XCIpO1xuY29uc3QgVG9rZW5IZWxwZXJfMSA9IHJlcXVpcmUoXCIuL1Rva2VuSGVscGVyXCIpO1xuLyoqIEEgdXRpbGl0eSBjbGFzcyB0byBoZWxwIHdpdGggdHJhbnNmb3JtYXRpb24gb2YgY29sb3JzIHRvIHZhcmlvdXMgZm9ybWF0cyAqL1xuY2xhc3MgQ29sb3JIZWxwZXIge1xuICAgIC8qKlxuICAgICAqIEJlaGF2ZXMgbGlrZSBhIG5vcm1hbCBjb2xvciBmb3JtYXR0ZXIuIEhvd2V2ZXIsIGlmIHRoZSBjb2xvciBpcyByZWZlcmVuY2UsIGl0IHJldHVybnMgdGhlIHZhcmlhYmxlIG5hbWUgaW5zdGVhZCBvZiB0aGUgZm9ybWF0dGVkIGNvbG9yLlxuICAgICAqIFByZWNpc2UgYmVoYXZpb3IgaXMgYXMgZm9sbG93czpcbiAgICAgKiAtIElmIHRoZSBjb2xvciBpcyBmdWxsIHJlZmVyZW5jZSwgcmV0dXJucyB0aGUgdmFyaWFibGUgbmFtZVxuICAgICAqIC0gSWYgdGhlIGNvbG9yIGlzIHBhcnRpYWwgcmVmZXJlbmNlLCByZXR1cm5zIHRoZSBmb3JtYXR0ZWQgY29sb3Igd2l0aCByZWZlcmVuY2VzIHdoZXJlIHBvc3NpYmxlIGFuZCByYXcgdmFsdWVzIHdoZXJlIG5vdFxuICAgICAqIC0gT25seSBzdXBwb3J0ZWQgcGFydGlhbCByZWZlcmVuY2UgZm9ybWF0cyBhcmUgcmdiLCByZ2JhLCBzbWFydFJnYlxuICAgICAqIC0gVmFyaWFibGUgbmFtZXMgYXJlIGdlbmVyYXRlZCBieSB0aGUgcHJvdmlkZWQgZnVuY3Rpb25zXG4gICAgICovXG4gICAgc3RhdGljIGZvcm1hdHRlZENvbG9yT3JWYXJpYWJsZU5hbWUoY29sb3IsIGFsbFRva2Vucywgb3B0aW9ucykge1xuICAgICAgICBsZXQgZnVsbFJlZmVyZW5jZU5hbWUgPSB1bmRlZmluZWQ7XG4gICAgICAgIGxldCBjb2xvclJlZmVyZW5jZU5hbWUgPSBudWxsO1xuICAgICAgICBsZXQgb3BhY2l0eVJlZmVyZW5jZU5hbWUgPSBudWxsO1xuICAgICAgICAvLyBDaGVjayByZWZlcmVuY2VzIGZpcnN0XG4gICAgICAgIGNvbnN0IGZ1bGxUb2tlbiA9ICgwLCBUb2tlbkhlbHBlcl8xLnN1cmVPcHRpb25hbFJlZmVyZW5jZSkoY29sb3IucmVmZXJlbmNlZFRva2VuSWQsIGFsbFRva2Vucywgb3B0aW9ucy5hbGxvd1JlZmVyZW5jZXMpO1xuICAgICAgICBpZiAoZnVsbFRva2VuKSB7XG4gICAgICAgICAgICBmdWxsUmVmZXJlbmNlTmFtZSA9IG9wdGlvbnMudG9rZW5Ub1ZhcmlhYmxlUmVmKGZ1bGxUb2tlbik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBjb2xvclRva2VuID0gKDAsIFRva2VuSGVscGVyXzEuc3VyZU9wdGlvbmFsUmVmZXJlbmNlKShjb2xvci5jb2xvci5yZWZlcmVuY2VkVG9rZW5JZCwgYWxsVG9rZW5zLCBvcHRpb25zLmFsbG93UmVmZXJlbmNlcyk7XG4gICAgICAgICAgICBpZiAoY29sb3JUb2tlbikge1xuICAgICAgICAgICAgICAgIGNvbG9yUmVmZXJlbmNlTmFtZSA9IG9wdGlvbnMudG9rZW5Ub1ZhcmlhYmxlUmVmKGNvbG9yVG9rZW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgb3BhY2l0eVRva2VuID0gKDAsIFRva2VuSGVscGVyXzEuc3VyZU9wdGlvbmFsUmVmZXJlbmNlKShjb2xvci5vcGFjaXR5LnJlZmVyZW5jZWRUb2tlbklkLCBhbGxUb2tlbnMsIG9wdGlvbnMuYWxsb3dSZWZlcmVuY2VzKTtcbiAgICAgICAgICAgIGlmIChvcGFjaXR5VG9rZW4pIHtcbiAgICAgICAgICAgICAgICBvcGFjaXR5UmVmZXJlbmNlTmFtZSA9IG9wdGlvbnMudG9rZW5Ub1ZhcmlhYmxlUmVmKG9wYWNpdHlUb2tlbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgdGhlIGZ1bGwgdmFsdWUgaXMgcmVmZXJlbmNlLCByZXR1cm4gdGhlIHZhcmlhYmxlIG5hbWVcbiAgICAgICAgaWYgKGZ1bGxSZWZlcmVuY2VOYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gZnVsbFJlZmVyZW5jZU5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgdGhlcmUgYXJlIG5vIHJlZmVyZW5jZXMsIGZvcm1hdCB0aGUgY29sb3IgcmF3XG4gICAgICAgIGlmICghZnVsbFJlZmVyZW5jZU5hbWUgJiYgIWNvbG9yUmVmZXJlbmNlTmFtZSAmJiAhb3BhY2l0eVJlZmVyZW5jZU5hbWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZvcm1hdHRlZENvbG9yKGNvbG9yLCBvcHRpb25zLmNvbG9yRm9ybWF0LCBvcHRpb25zLmRlY2ltYWxzKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB0aGVyZSBhcmUgcGFydGlhbCByZWZlcmVuY2VzLCB3ZSdsbCB1c2UgdGhlIHJlZmVyZW5jZXMgd2hlcmUgcG9zc2libGUgYW5kIHJldHVybiB0aGUgcmF3IGZvcm1hdCBmb3IgdGhlIHJlc3RcbiAgICAgICAgc3dpdGNoIChvcHRpb25zLmNvbG9yRm9ybWF0KSB7XG4gICAgICAgICAgICBjYXNlIENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQucmdiOlxuICAgICAgICAgICAgY2FzZSBDb2xvckZvcm1hdF8xLkNvbG9yRm9ybWF0LnJnYmE6XG4gICAgICAgICAgICBjYXNlIENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQuc21hcnRSZ2JhOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbG9yVG9SZ2Iob3B0aW9ucy5jb2xvckZvcm1hdCwgdGhpcy5ub3JtYWxpemVkSW50Q29sb3IoY29sb3IpLCBjb2xvci5vcGFjaXR5Lm1lYXN1cmUsIG9wdGlvbnMuZGVjaW1hbHMsIGNvbG9yUmVmZXJlbmNlTmFtZSwgb3BhY2l0eVJlZmVyZW5jZU5hbWUpO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5mb3JtYXR0ZWRDb2xvcihjb2xvciwgb3B0aW9ucy5jb2xvckZvcm1hdCwgb3B0aW9ucy5kZWNpbWFscyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogRm9ybWF0cyBTdXBlcm5vdmEgY29sb3IgdG9rZW4gdmFsdWUgdG8gYSBzdHJpbmcgYmFzZWQgb24gdGhlIHNlbGVjdGVkIGZvcm1hdC4gRm9yIGZyYWN0aW9uYWwgZm9ybWF0cywgdGhlIG51bWJlciBvZiBkZWNpbWFscyBjYW4gYmUgc3BlY2lmaWVkLlxuICAgICAqL1xuICAgIHN0YXRpYyBmb3JtYXR0ZWRDb2xvcihjb2xvciwgZm9ybWF0LCBkZWNpbWFscyA9IDMpIHtcbiAgICAgICAgc3dpdGNoIChmb3JtYXQpIHtcbiAgICAgICAgICAgIGNhc2UgQ29sb3JGb3JtYXRfMS5Db2xvckZvcm1hdC5oZXg2OlxuICAgICAgICAgICAgY2FzZSBDb2xvckZvcm1hdF8xLkNvbG9yRm9ybWF0LmhleDg6XG4gICAgICAgICAgICBjYXNlIENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQuaGFzaEhleDY6XG4gICAgICAgICAgICBjYXNlIENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQuaGFzaEhleDg6XG4gICAgICAgICAgICBjYXNlIENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQuc21hcnRIZXg6XG4gICAgICAgICAgICBjYXNlIENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQuc21hcnRIYXNoSGV4OlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbG9yVG9IZXgoZm9ybWF0LCB0aGlzLm5vcm1hbGl6ZWRJbnRDb2xvcihjb2xvciksIGNvbG9yLm9wYWNpdHkubWVhc3VyZSk7XG4gICAgICAgICAgICBjYXNlIENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQucmdiOlxuICAgICAgICAgICAgY2FzZSBDb2xvckZvcm1hdF8xLkNvbG9yRm9ybWF0LnJnYmE6XG4gICAgICAgICAgICBjYXNlIENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQuc21hcnRSZ2JhOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbG9yVG9SZ2IoZm9ybWF0LCB0aGlzLm5vcm1hbGl6ZWRJbnRDb2xvcihjb2xvciksIGNvbG9yLm9wYWNpdHkubWVhc3VyZSwgZGVjaW1hbHMsIG51bGwsIG51bGwpO1xuICAgICAgICAgICAgY2FzZSBDb2xvckZvcm1hdF8xLkNvbG9yRm9ybWF0LmhzbDpcbiAgICAgICAgICAgIGNhc2UgQ29sb3JGb3JtYXRfMS5Db2xvckZvcm1hdC5oc2xhOlxuICAgICAgICAgICAgY2FzZSBDb2xvckZvcm1hdF8xLkNvbG9yRm9ybWF0LnNtYXJ0SHNsYTpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jb2xvclRvSHNsKGZvcm1hdCwgdGhpcy5ub3JtYWxpemVkRnJhY3Rpb25hbENvbG9yKGNvbG9yKSwgY29sb3Iub3BhY2l0eS5tZWFzdXJlLCBkZWNpbWFscyk7XG4gICAgICAgICAgICBjYXNlIENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQuc21hcnRVSUNvbG9yOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbG9yVG9VSUNvbG9yKHRoaXMubm9ybWFsaXplZEludENvbG9yKGNvbG9yKSwgY29sb3Iub3BhY2l0eS5tZWFzdXJlLCBkZWNpbWFscyk7XG4gICAgICAgICAgICBjYXNlIENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQub2tsY2g6XG4gICAgICAgICAgICBjYXNlIENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQub2tsY2hhOlxuICAgICAgICAgICAgY2FzZSBDb2xvckZvcm1hdF8xLkNvbG9yRm9ybWF0LnNtYXJ0T2tsY2g6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29sb3JUb09rbGNoKGZvcm1hdCwgdGhpcy5ub3JtYWxpemVkSW50Q29sb3IoY29sb3IpLCBjb2xvci5vcGFjaXR5Lm1lYXN1cmUsIGRlY2ltYWxzKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29sb3JUb0hleChDb2xvckZvcm1hdF8xLkNvbG9yRm9ybWF0LnNtYXJ0SGFzaEhleCwgdGhpcy5ub3JtYWxpemVkSW50Q29sb3IoY29sb3IpLCBjb2xvci5vcGFjaXR5Lm1lYXN1cmUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIENvbnZlcnQgY29sb3IgdG8gcmdiXG4gICAgc3RhdGljIGNvbG9yVG9SZ2IoZm9ybWF0LCBjb2xvciwgYWxwaGEsIGRlY2ltYWxzLCBjb2xvclJlZlJlcGxhY2UsIG9wYWNpdHlSZWZSZXBsYWNlKSB7XG4gICAgICAgIGxldCByZXN1bHRpbmdSZ2I7XG4gICAgICAgIGlmIChmb3JtYXQgPT09IENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQucmdiYSB8fCAoZm9ybWF0ID09PSBDb2xvckZvcm1hdF8xLkNvbG9yRm9ybWF0LnNtYXJ0UmdiYSAmJiBhbHBoYSA8IDEpKSB7XG4gICAgICAgICAgICByZXN1bHRpbmdSZ2IgPSBgcmdiYSgke2NvbG9yUmVmUmVwbGFjZSA/IGNvbG9yUmVmUmVwbGFjZSA6IGAke2NvbG9yLnJ9LCAke2NvbG9yLmd9LCAke2NvbG9yLmJ9YH0sICR7b3BhY2l0eVJlZlJlcGxhY2UgPyBvcGFjaXR5UmVmUmVwbGFjZSA6IHRoaXMucm91bmRUb0RlY2ltYWxzKGFscGhhLCBkZWNpbWFscyl9KWA7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXN1bHRpbmdSZ2IgPSBgcmdiKCR7Y29sb3JSZWZSZXBsYWNlID8gY29sb3JSZWZSZXBsYWNlIDogYCR7Y29sb3Iucn0sICR7Y29sb3IuZ30sICR7Y29sb3IuYn1gfSlgO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHRpbmdSZ2I7XG4gICAgfVxuICAgIC8vIENvbnZlcnQgY29sb3IgdG8gaGV4XG4gICAgc3RhdGljIGNvbG9yVG9IZXgoZm9ybWF0LCBjb2xvciwgYWxwaGEpIHtcbiAgICAgICAgLy8gQWx3YXlzIG5lZWQgaGV4NlxuICAgICAgICBsZXQgcmVzdWx0aW5nSGV4ID0gYCR7dGhpcy5wSGV4KGNvbG9yLnIpfSR7dGhpcy5wSGV4KGNvbG9yLmcpfSR7dGhpcy5wSGV4KGNvbG9yLmIpfWA7XG4gICAgICAgIGlmIChmb3JtYXQgPT09IENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQuaGV4OCB8fFxuICAgICAgICAgICAgZm9ybWF0ID09PSBDb2xvckZvcm1hdF8xLkNvbG9yRm9ybWF0Lmhhc2hIZXg4IHx8XG4gICAgICAgICAgICAoZm9ybWF0ID09PSBDb2xvckZvcm1hdF8xLkNvbG9yRm9ybWF0LnNtYXJ0SGV4ICYmIGFscGhhIDwgMSkgfHxcbiAgICAgICAgICAgIChmb3JtYXQgPT09IENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQuc21hcnRIYXNoSGV4ICYmIGFscGhhIDwgMSkpIHtcbiAgICAgICAgICAgIC8vIEFkZCBhbHBoYSBmb3IgOC1mb3JtYXRcbiAgICAgICAgICAgIHJlc3VsdGluZ0hleCArPSBgJHt0aGlzLnBIZXgoTWF0aC5yb3VuZChhbHBoYSAqIDI1NSkpfWA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZvcm1hdCA9PT0gQ29sb3JGb3JtYXRfMS5Db2xvckZvcm1hdC5oYXNoSGV4NiB8fCBmb3JtYXQgPT09IENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQuaGFzaEhleDggfHwgZm9ybWF0ID09PSBDb2xvckZvcm1hdF8xLkNvbG9yRm9ybWF0LnNtYXJ0SGFzaEhleCkge1xuICAgICAgICAgICAgLy8gQWRkIGhhc2ggZm9yIGhhc2gtZm9ybWF0XG4gICAgICAgICAgICByZXN1bHRpbmdIZXggPSBgIyR7cmVzdWx0aW5nSGV4fWA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdGluZ0hleDtcbiAgICB9XG4gICAgLy8gQ29udmVydCBjb2xvciB0byBIU0xcbiAgICBzdGF0aWMgY29sb3JUb0hzbChmb3JtYXQsIGNvbG9yLCBhbHBoYSwgZGVjaW1hbHMpIHtcbiAgICAgICAgLy8gQ2FsY3VsYXRlIEhTTCB2YWx1ZXNcbiAgICAgICAgY29uc3QgbWF4ID0gTWF0aC5tYXgoY29sb3IuciwgY29sb3IuZywgY29sb3IuYik7XG4gICAgICAgIGNvbnN0IG1pbiA9IE1hdGgubWluKGNvbG9yLnIsIGNvbG9yLmcsIGNvbG9yLmIpO1xuICAgICAgICBsZXQgaCA9IDA7XG4gICAgICAgIGxldCBzID0gMDtcbiAgICAgICAgbGV0IGwgPSAobWF4ICsgbWluKSAvIDI7XG4gICAgICAgIGlmIChtYXggPT09IG1pbikge1xuICAgICAgICAgICAgaCA9IHMgPSAwOyAvLyBhY2hyb21hdGljXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBkZWx0YSA9IG1heCAtIG1pbjtcbiAgICAgICAgICAgIHMgPSBsID4gMC41ID8gZGVsdGEgLyAoMiAtIG1heCAtIG1pbikgOiBkZWx0YSAvIChtYXggKyBtaW4pO1xuICAgICAgICAgICAgc3dpdGNoIChtYXgpIHtcbiAgICAgICAgICAgICAgICBjYXNlIGNvbG9yLnI6XG4gICAgICAgICAgICAgICAgICAgIGggPSAoY29sb3IuZyAtIGNvbG9yLmIpIC8gZGVsdGEgKyAoY29sb3IuZyA8IGNvbG9yLmIgPyA2IDogMCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgY29sb3IuZzpcbiAgICAgICAgICAgICAgICAgICAgaCA9IChjb2xvci5iIC0gY29sb3IucikgLyBkZWx0YSArIDI7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgY29sb3IuYjpcbiAgICAgICAgICAgICAgICAgICAgaCA9IChjb2xvci5yIC0gY29sb3IuZykgLyBkZWx0YSArIDQ7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaCAvPSA2O1xuICAgICAgICB9XG4gICAgICAgIGxldCByZXN1bHRpbmdIc2w7XG4gICAgICAgIGlmIChmb3JtYXQgPT09IENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQuaHNsYSB8fCAoZm9ybWF0ID09PSBDb2xvckZvcm1hdF8xLkNvbG9yRm9ybWF0LnNtYXJ0SHNsYSAmJiBhbHBoYSA8IDEpKSB7XG4gICAgICAgICAgICByZXN1bHRpbmdIc2wgPSBgaHNsYSgke01hdGgucm91bmQoaCAqIDM2MCl9JSwgJHtNYXRoLnJvdW5kKHMgKiAxMDApfSUsICR7TWF0aC5yb3VuZChsICogMTAwKX0lLCAke3RoaXMucm91bmRUb0RlY2ltYWxzKGFscGhhLCBkZWNpbWFscyl9KWA7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXN1bHRpbmdIc2wgPSBgaHNsKCR7TWF0aC5yb3VuZChoICogMzYwKX0lLCAke01hdGgucm91bmQocyAqIDEwMCl9JSwgJHtNYXRoLnJvdW5kKGwgKiAxMDApfSUpYDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0aW5nSHNsO1xuICAgIH1cbiAgICAvLyBDb252ZXJ0IGNvbG9yIHRvIFVJQ29sb3IgdXNpbmcgYmFzZSBjb25zdHJ1Y3RvclxuICAgIHN0YXRpYyBjb2xvclRvVUlDb2xvcihjb2xvciwgYWxwaGEsIGRlY2ltYWxzID0gMykge1xuICAgICAgICBsZXQgcmVzdWx0aW5nVUlDb2xvciA9IGBVSUNvbG9yKHJnYjogMHgke3RoaXMucEhleChjb2xvci5yKX0ke3RoaXMucEhleChjb2xvci5nKX0ke3RoaXMucEhleChjb2xvci5iKX0pYDtcbiAgICAgICAgaWYgKGFscGhhIDwgMSkge1xuICAgICAgICAgICAgcmVzdWx0aW5nVUlDb2xvciArPSBgLndpdGhBbHBoYUNvbXBvbmVudCgke2FscGhhfSlgO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHRpbmdVSUNvbG9yO1xuICAgIH1cbiAgICAvLyBDb252ZXJ0IGNvbG9yIHRvIG5vcm1hbGl6ZWQgMC0yNTUgZm9ybWF0XG4gICAgc3RhdGljIG5vcm1hbGl6ZWRJbnRDb2xvcihjb2xvcikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcjogTWF0aC5yb3VuZChjb2xvci5jb2xvci5yKSxcbiAgICAgICAgICAgIGc6IE1hdGgucm91bmQoY29sb3IuY29sb3IuZyksXG4gICAgICAgICAgICBiOiBNYXRoLnJvdW5kKGNvbG9yLmNvbG9yLmIpXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8vIENvbnZlcnQgY29sb3IgdG8gbm9ybWFsaXplZCAwLTEgZm9ybWF0XG4gICAgc3RhdGljIG5vcm1hbGl6ZWRGcmFjdGlvbmFsQ29sb3IoY29sb3IsIGRlY2ltYWxzID0gMykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcjogdGhpcy5yb3VuZFRvRGVjaW1hbHMoY29sb3IuY29sb3IuciAvIDI1NSwgZGVjaW1hbHMpLFxuICAgICAgICAgICAgZzogQ29sb3JIZWxwZXIucm91bmRUb0RlY2ltYWxzKGNvbG9yLmNvbG9yLmcgLyAyNTUsIGRlY2ltYWxzKSxcbiAgICAgICAgICAgIGI6IENvbG9ySGVscGVyLnJvdW5kVG9EZWNpbWFscyhjb2xvci5jb2xvci5iIC8gMjU1LCBkZWNpbWFscylcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLy8gUm91bmQgaGFsZiBhd2F5IGZyb20gemVybyB0byBhIHNwZWNpZmljIG51bWJlciBvZiBkZWNpbWFsc1xuICAgIHN0YXRpYyByb3VuZFRvRGVjaW1hbHModmFsdWUsIGRlY2ltYWxzLCBmb3JjZVRyYWlsaW5nWmVybyA9IGZhbHNlKSB7XG4gICAgICAgIGNvbnN0IG11bHRpcGxpZXIgPSBNYXRoLnBvdygxMCwgZGVjaW1hbHMpO1xuICAgICAgICBjb25zdCByb3VuZGVkID0gTWF0aC5yb3VuZCh2YWx1ZSAqIG11bHRpcGxpZXIpIC8gbXVsdGlwbGllcjtcbiAgICAgICAgaWYgKGZvcmNlVHJhaWxpbmdaZXJvKSB7XG4gICAgICAgICAgICAvLyBDb252ZXJ0IHRvIHN0cmluZyB3aXRoIGZpeGVkIGRlY2ltYWxzIGFuZCBwYXJzZSBiYWNrIHRvIG51bWJlclxuICAgICAgICAgICAgcmV0dXJuIE51bWJlcihyb3VuZGVkLnRvRml4ZWQoZGVjaW1hbHMpKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBDb252ZXJ0IHRvIHN0cmluZyBhbmQgcGFyc2UgYmFjayB0byBudW1iZXIgdG8gcmVtb3ZlIHVubmVjZXNzYXJ5IHRyYWlsaW5nIHplcm9lc1xuICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChyb3VuZGVkLnRvRml4ZWQoZGVjaW1hbHMpKTtcbiAgICB9XG4gICAgLy8gUmV0dXJuIGhleCB2YWx1ZSB3aXRoIGxlYWRpbmcgemVybyBpZiBoZXggaXMgc2luZ2xlIGRpZ2l0XG4gICAgc3RhdGljIHBIZXgodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0IGNvbG9yIHRvIE9LTENIIGZvcm1hdFxuICAgICAqIEhhbmRsZXMgdGhyZWUgZm9ybWF0czpcbiAgICAgKiAtIG9rbGNoOiBBbHdheXMgd2l0aG91dCBhbHBoYVxuICAgICAqIC0gb2tsY2hhOiBBbHdheXMgd2l0aCBhbHBoYVxuICAgICAqIC0gc21hcnRPa2xjaDogV2l0aCBhbHBoYSBvbmx5IHdoZW4gYWxwaGEgPCAxXG4gICAgICovXG4gICAgc3RhdGljIGNvbG9yVG9Pa2xjaChmb3JtYXQsIGNvbG9yLCBhbHBoYSwgZGVjaW1hbHMpIHtcbiAgICAgICAgLy8gQ29udmVydCBSR0IgdG8gT0tMQ0hcbiAgICAgICAgY29uc3QgeyBsLCBjLCBoIH0gPSB0aGlzLnJnYlRvT2tsY2goY29sb3IuciwgY29sb3IuZywgY29sb3IuYik7XG4gICAgICAgIC8vIEZvcm1hdCB0aGUgb3V0cHV0IHN0cmluZyBiYXNlZCBvbiBmb3JtYXQgYW5kIGFscGhhXG4gICAgICAgIHN3aXRjaCAoZm9ybWF0KSB7XG4gICAgICAgICAgICBjYXNlIENvbG9yRm9ybWF0XzEuQ29sb3JGb3JtYXQub2tsY2hhOlxuICAgICAgICAgICAgICAgIHJldHVybiBgb2tsY2goJHtsfSUgJHtjfSAke2h9IC8gJHt0aGlzLnJvdW5kVG9EZWNpbWFscyhhbHBoYSAqIDEwMCwgZGVjaW1hbHMpfSUpYDtcbiAgICAgICAgICAgIGNhc2UgQ29sb3JGb3JtYXRfMS5Db2xvckZvcm1hdC5zbWFydE9rbGNoOlxuICAgICAgICAgICAgICAgIHJldHVybiBhbHBoYSA8IDFcbiAgICAgICAgICAgICAgICAgICAgPyBgb2tsY2goJHtsfSUgJHtjfSAke2h9IC8gJHt0aGlzLnJvdW5kVG9EZWNpbWFscyhhbHBoYSAqIDEwMCwgZGVjaW1hbHMpfSUpYFxuICAgICAgICAgICAgICAgICAgICA6IGBva2xjaCgke2x9JSAke2N9ICR7aH0pYDtcbiAgICAgICAgICAgIGNhc2UgQ29sb3JGb3JtYXRfMS5Db2xvckZvcm1hdC5va2xjaDpcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGBva2xjaCgke2x9JSAke2N9ICR7aH0pYDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0IFJHQiAoMC0yNTUpIHRvIE9LTENIXG4gICAgICogUmV0dXJucyBsaWdodG5lc3MgKDAtMTAwKSwgY2hyb21hICgwLTAuNCksIGFuZCBodWUgKDAtMzYwKVxuICAgICAqL1xuICAgIHN0YXRpYyByZ2JUb09rbGNoKHIsIGcsIGIpIHtcbiAgICAgICAgLy8gRmlyc3QgY29udmVydCBSR0IgKDAtMjU1KSB0byBsaW5lYXIgUkdCICgwLTEpXG4gICAgICAgIGNvbnN0IGxyID0gdGhpcy5zUkdCdG9MaW5lYXIociAvIDI1NSk7XG4gICAgICAgIGNvbnN0IGxnID0gdGhpcy5zUkdCdG9MaW5lYXIoZyAvIDI1NSk7XG4gICAgICAgIGNvbnN0IGxiID0gdGhpcy5zUkdCdG9MaW5lYXIoYiAvIDI1NSk7XG4gICAgICAgIC8vIENvbnZlcnQgdG8gWFlaIHVzaW5nIEQ2NSBpbGx1bWluYW50XG4gICAgICAgIGNvbnN0IHggPSAwLjQxMjQ1NjQgKiBsciArIDAuMzU3NTc2MSAqIGxnICsgMC4xODA0Mzc1ICogbGI7XG4gICAgICAgIGNvbnN0IHkgPSAwLjIxMjY3MjkgKiBsciArIDAuNzE1MTUyMiAqIGxnICsgMC4wNzIxNzUwICogbGI7XG4gICAgICAgIGNvbnN0IHogPSAwLjAxOTMzMzkgKiBsciArIDAuMTE5MTkyMCAqIGxnICsgMC45NTAzMDQxICogbGI7XG4gICAgICAgIC8vIENvbnZlcnQgdG8gTE1TXG4gICAgICAgIGNvbnN0IGxtc19sID0gMC44MTg5MzMwMTAxICogeCArIDAuMzYxODY2NzQyNCAqIHkgLSAwLjEyODg1OTcxMzcgKiB6O1xuICAgICAgICBjb25zdCBsbXNfbSA9IDAuMDMyOTg0NTQzNiAqIHggKyAwLjkyOTMxMTg3MTUgKiB5ICsgMC4wMzYxNDU2Mzg3ICogejtcbiAgICAgICAgY29uc3QgbG1zX3MgPSAwLjA0ODIwMDMwMTggKiB4ICsgMC4yNjQzNjYyNjkxICogeSArIDAuNjMzODUxNzA3MCAqIHo7XG4gICAgICAgIC8vIE5vbi1saW5lYXIgY29tcHJlc3Npb25cbiAgICAgICAgY29uc3QgbHAgPSBNYXRoLmNicnQobG1zX2wpO1xuICAgICAgICBjb25zdCBtcCA9IE1hdGguY2JydChsbXNfbSk7XG4gICAgICAgIGNvbnN0IHNwID0gTWF0aC5jYnJ0KGxtc19zKTtcbiAgICAgICAgLy8gQ29udmVydCB0byBMYWInXG4gICAgICAgIGNvbnN0IEwgPSAwLjIxMDQ1NDI1NTMgKiBscCArIDAuNzkzNjE3Nzg1MCAqIG1wIC0gMC4wMDQwNzIwNDY4ICogc3A7XG4gICAgICAgIGNvbnN0IGxhYl9hID0gMS45Nzc5OTg0OTUxICogbHAgLSAyLjQyODU5MjIwNTAgKiBtcCArIDAuNDUwNTkzNzA5OSAqIHNwO1xuICAgICAgICBjb25zdCBsYWJfYiA9IDAuMDI1OTA0MDM3MSAqIGxwICsgMC43ODI3NzE3NjYyICogbXAgLSAwLjgwODY3NTc2NjAgKiBzcDtcbiAgICAgICAgLy8gQ29udmVydCB0byBMQ0hcbiAgICAgICAgY29uc3QgQyA9IE1hdGguc3FydChsYWJfYSAqIGxhYl9hICsgbGFiX2IgKiBsYWJfYik7XG4gICAgICAgIGxldCBoID0gTWF0aC5hdGFuMihsYWJfYiwgbGFiX2EpICogMTgwIC8gTWF0aC5QSTtcbiAgICAgICAgLy8gTm9ybWFsaXplIGh1ZSB0byAwLTM2MFxuICAgICAgICBpZiAoaCA8IDApIHtcbiAgICAgICAgICAgIGggKz0gMzYwO1xuICAgICAgICB9XG4gICAgICAgIC8vIENvbnZlcnQgTCB0byBwZXJjZW50YWdlIGFuZCByb3VuZCB2YWx1ZXNcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGw6IHRoaXMucm91bmRUb0RlY2ltYWxzKEwgKiAxMDAsIDIpLFxuICAgICAgICAgICAgYzogdGhpcy5yb3VuZFRvRGVjaW1hbHMoQywgMywgdHJ1ZSksXG4gICAgICAgICAgICBoOiB0aGlzLnJvdW5kVG9EZWNpbWFscyhoLCAyKVxuICAgICAgICB9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0IHNSR0IgdG8gbGluZWFyIFJHQlxuICAgICAqL1xuICAgIHN0YXRpYyBzUkdCdG9MaW5lYXIoeCkge1xuICAgICAgICByZXR1cm4geCA8PSAwLjA0MDQ1XG4gICAgICAgICAgICA/IHggLyAxMi45MlxuICAgICAgICAgICAgOiBNYXRoLnBvdygoeCArIDAuMDU1KSAvIDEuMDU1LCAyLjQpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29sb3JIZWxwZXIgPSBDb2xvckhlbHBlcjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaWxlSGVscGVyID0gdm9pZCAwO1xuY29uc3Qgc2RrX2V4cG9ydGVyc18xID0gcmVxdWlyZShcIkBzdXBlcm5vdmFpby9zZGstZXhwb3J0ZXJzXCIpO1xuLyoqIEEgdXRpbGl0eSBjbGFzcyB0byBoZWxwIHdpdGggY3JlYXRpb24gb2YgZmlsZXMgZm9yIFN1cGVybm92YSBleHBvcnQgcm91dGluZXMgKi9cbmNsYXNzIEZpbGVIZWxwZXIge1xuICAgIC8qKiBDcmVhdGVzIGEgbmV3IGZpbGUgdGhhdCB3aWxsIGNvcHkgaXRzIGNvbnRlbnQgZnJvbSBhIHJlbW90ZSBVUkwgdG8gYSBzcGVjaWZpZWQgZGVzdGluYXRpb24gKHBhdGggKyBuYW1lKSAqL1xuICAgIHN0YXRpYyBjcmVhdGVDb3B5UmVtb3RlRmlsZSh7IHJlbGF0aXZlUGF0aCwgZmlsZU5hbWUsIHVybCB9KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwYXRoOiByZWxhdGl2ZVBhdGgsXG4gICAgICAgICAgICBuYW1lOiBmaWxlTmFtZSxcbiAgICAgICAgICAgIHR5cGU6IHNka19leHBvcnRlcnNfMS5PdXRwdXRGaWxlVHlwZS5jb3B5UmVtb3RlVXJsLFxuICAgICAgICAgICAgdXJsOiB1cmxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqIENyZWF0ZXMgYSBuZXcgZmlsZSB0aGF0IHdyaXRlIGl0cyBjb250ZW50IHRvIGEgc3BlY2lmaWVkIGRlc3RpbmF0aW9uIChwYXRoICsgbmFtZSkgKi9cbiAgICBzdGF0aWMgY3JlYXRlVGV4dEZpbGUoeyByZWxhdGl2ZVBhdGgsIGZpbGVOYW1lLCBjb250ZW50IH0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHBhdGg6IHJlbGF0aXZlUGF0aCxcbiAgICAgICAgICAgIG5hbWU6IGZpbGVOYW1lLFxuICAgICAgICAgICAgdHlwZTogc2RrX2V4cG9ydGVyc18xLk91dHB1dEZpbGVUeXBlLnRleHQsXG4gICAgICAgICAgICBjb250ZW50OiBjb250ZW50XG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKiBDcmVhdGVzIGEgbmV3IGZpbGUgdGhhdCB3cml0ZSBpdHMgY29udGVudCB0byBhIHNwZWNpZmllZCBkZXN0aW5hdGlvbiAocGF0aCArIG5hbWUpICovXG4gICAgc3RhdGljIGNyZWF0ZUJpbmFyeUZpbGUoeyByZWxhdGl2ZVBhdGgsIGZpbGVOYW1lLCBkYXRhIH0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHBhdGg6IHJlbGF0aXZlUGF0aCxcbiAgICAgICAgICAgIG5hbWU6IGZpbGVOYW1lLFxuICAgICAgICAgICAgdHlwZTogc2RrX2V4cG9ydGVyc18xLk91dHB1dEZpbGVUeXBlLmJpbmFyeSxcbiAgICAgICAgICAgIGRhdGE6IGRhdGFcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLkZpbGVIZWxwZXIgPSBGaWxlSGVscGVyO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkZpbGVOYW1lSGVscGVyID0gdm9pZCAwO1xuY2xhc3MgRmlsZU5hbWVIZWxwZXIge1xuICAgIC8qKlxuICAgICAqIEVuc3VyZXMgYSBmaWxlbmFtZSBoYXMgdGhlIGNvcnJlY3QgZXh0ZW5zaW9uXG4gICAgICovXG4gICAgc3RhdGljIGVuc3VyZUZpbGVFeHRlbnNpb24oZmlsZU5hbWUsIGV4dGVuc2lvbikge1xuICAgICAgICAvLyBFbnN1cmUgZXh0ZW5zaW9uIHN0YXJ0cyB3aXRoIGEgZG90XG4gICAgICAgIGNvbnN0IG5vcm1hbGl6ZWRFeHRlbnNpb24gPSBleHRlbnNpb24uc3RhcnRzV2l0aCgnLicpID8gZXh0ZW5zaW9uIDogYC4ke2V4dGVuc2lvbn1gO1xuICAgICAgICBpZiAoIWZpbGVOYW1lLnRvTG93ZXJDYXNlKCkuZW5kc1dpdGgobm9ybWFsaXplZEV4dGVuc2lvbi50b0xvd2VyQ2FzZSgpKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZpbGVOYW1lICsgbm9ybWFsaXplZEV4dGVuc2lvbjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmlsZU5hbWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlcGxhY2VzIGZpbGUgZXh0ZW5zaW9uXG4gICAgICovXG4gICAgc3RhdGljIHJlcGxhY2VGaWxlRXh0ZW5zaW9uKGZpbGVOYW1lLCBvbGRFeHQsIG5ld0V4dCkge1xuICAgICAgICAvLyBFbnN1cmUgZXh0ZW5zaW9ucyBzdGFydCB3aXRoIGEgZG90XG4gICAgICAgIGNvbnN0IG5vcm1hbGl6ZWRPbGRFeHQgPSBvbGRFeHQuc3RhcnRzV2l0aCgnLicpID8gb2xkRXh0IDogYC4ke29sZEV4dH1gO1xuICAgICAgICBjb25zdCBub3JtYWxpemVkTmV3RXh0ID0gbmV3RXh0LnN0YXJ0c1dpdGgoJy4nKSA/IG5ld0V4dCA6IGAuJHtuZXdFeHR9YDtcbiAgICAgICAgcmV0dXJuIGZpbGVOYW1lLnJlcGxhY2UobmV3IFJlZ0V4cChgJHtub3JtYWxpemVkT2xkRXh0fSRgKSwgbm9ybWFsaXplZE5ld0V4dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIGRlZmF1bHQgc3R5bGUgZmlsZSBuYW1lIGZvciBhIHRva2VuIHR5cGVcbiAgICAgKi9cbiAgICBzdGF0aWMgZ2V0RGVmYXVsdFN0eWxlRmlsZU5hbWUodHlwZSwgZXh0ZW5zaW9uID0gJy5jc3MnKSB7XG4gICAgICAgIGNvbnN0IGJhc2VOYW1lcyA9IHtcbiAgICAgICAgICAgIENvbG9yOiBcImNvbG9yXCIsXG4gICAgICAgICAgICBUeXBvZ3JhcGh5OiBcInR5cG9ncmFwaHlcIixcbiAgICAgICAgICAgIERpbWVuc2lvbjogXCJkaW1lbnNpb25cIixcbiAgICAgICAgICAgIFNpemU6IFwic2l6ZVwiLFxuICAgICAgICAgICAgU3BhY2U6IFwic3BhY2VcIixcbiAgICAgICAgICAgIE9wYWNpdHk6IFwib3BhY2l0eVwiLFxuICAgICAgICAgICAgRm9udFNpemU6IFwiZm9udC1zaXplXCIsXG4gICAgICAgICAgICBMaW5lSGVpZ2h0OiBcImxpbmUtaGVpZ2h0XCIsXG4gICAgICAgICAgICBMZXR0ZXJTcGFjaW5nOiBcImxldHRlci1zcGFjaW5nXCIsXG4gICAgICAgICAgICBQYXJhZ3JhcGhTcGFjaW5nOiBcInBhcmFncmFwaC1zcGFjaW5nXCIsXG4gICAgICAgICAgICBCb3JkZXJXaWR0aDogXCJib3JkZXItd2lkdGhcIixcbiAgICAgICAgICAgIEJvcmRlclJhZGl1czogXCJib3JkZXItcmFkaXVzXCIsXG4gICAgICAgICAgICBEdXJhdGlvbjogXCJkdXJhdGlvblwiLFxuICAgICAgICAgICAgWkluZGV4OiBcInotaW5kZXhcIixcbiAgICAgICAgICAgIFNoYWRvdzogXCJzaGFkb3dcIixcbiAgICAgICAgICAgIEJvcmRlcjogXCJib3JkZXJcIixcbiAgICAgICAgICAgIEdyYWRpZW50OiBcImdyYWRpZW50XCIsXG4gICAgICAgICAgICBTdHJpbmc6IFwic3RyaW5nXCIsXG4gICAgICAgICAgICBQcm9kdWN0Q29weTogXCJwcm9kdWN0LWNvcHlcIixcbiAgICAgICAgICAgIEZvbnRGYW1pbHk6IFwiZm9udC1mYW1pbHlcIixcbiAgICAgICAgICAgIEZvbnRXZWlnaHQ6IFwiZm9udC13ZWlnaHRcIixcbiAgICAgICAgICAgIFRleHRDYXNlOiBcInRleHQtY2FzZVwiLFxuICAgICAgICAgICAgVGV4dERlY29yYXRpb246IFwidGV4dC1kZWNvcmF0aW9uXCIsXG4gICAgICAgICAgICBWaXNpYmlsaXR5OiBcInZpc2liaWxpdHlcIixcbiAgICAgICAgICAgIEJsdXI6IFwiYmx1clwiXG4gICAgICAgIH07XG4gICAgICAgIC8vIEVuc3VyZSBleHRlbnNpb24gc3RhcnRzIHdpdGggYSBkb3RcbiAgICAgICAgY29uc3Qgbm9ybWFsaXplZEV4dGVuc2lvbiA9IGV4dGVuc2lvbi5zdGFydHNXaXRoKCcuJykgPyBleHRlbnNpb24gOiBgLiR7ZXh0ZW5zaW9ufWA7XG4gICAgICAgIHJldHVybiBiYXNlTmFtZXNbdHlwZV0gKyBub3JtYWxpemVkRXh0ZW5zaW9uO1xuICAgIH1cbn1cbmV4cG9ydHMuRmlsZU5hbWVIZWxwZXIgPSBGaWxlTmFtZUhlbHBlcjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HZW5lcmFsSGVscGVyID0gdm9pZCAwO1xuY2xhc3MgR2VuZXJhbEhlbHBlciB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBpbmRlbnRhdGlvbiBzdHJpbmcgYmFzZWQgb24gdGhlIG51bWJlciBvZiBsZXZlbHMgYW5kIHR5cGVcbiAgICAgKiBAcGFyYW0gc3BhY2VzIC0gTnVtYmVyIG9mIHNwYWNlcyBwZXIgbGV2ZWwgKGRlZmF1bHQ6IDIpXG4gICAgICogQHJldHVybnMgSW5kZW50YXRpb24gc3RyaW5nXG4gICAgICovXG4gICAgc3RhdGljIGluZGVudChzcGFjZXMgPSAyKSB7XG4gICAgICAgIHJldHVybiAnICcucmVwZWF0KE1hdGgubWF4KDAsIHNwYWNlcykpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGb3JtYXRzIGEgZGlzY2xhaW1lciB0ZXh0IGludG8gYSBKU0RvYyBjb21tZW50IGJsb2NrXG4gICAgICogQHBhcmFtIGRpc2NsYWltZXIgLSBUaGUgZGlzY2xhaW1lciB0ZXh0IHRvIGZvcm1hdFxuICAgICAqIEBwYXJhbSBjb250ZW50IC0gVGhlIGNvbnRlbnQgdG8gYXBwZW5kIGFmdGVyIHRoZSBkaXNjbGFpbWVyXG4gICAgICogQHJldHVybnMgRm9ybWF0dGVkIHN0cmluZyB3aXRoIGRpc2NsYWltZXIgY29tbWVudCBhbmQgY29udGVudFxuICAgICAqL1xuICAgIHN0YXRpYyBhZGREaXNjbGFpbWVyKGRpc2NsYWltZXIsIGNvbnRlbnQpIHtcbiAgICAgICAgaWYgKCFkaXNjbGFpbWVyKSB7XG4gICAgICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBmb3JtYXR0ZWREaXNjbGFpbWVyID0gZGlzY2xhaW1lci5yZXBsYWNlKC9cXG4vZywgJ1xcbiAqICcpO1xuICAgICAgICByZXR1cm4gYC8qKlxcbiAqICR7Zm9ybWF0dGVkRGlzY2xhaW1lcn0gXFxuICovXFxuXFxuJHtjb250ZW50fWA7XG4gICAgfVxufVxuZXhwb3J0cy5HZW5lcmFsSGVscGVyID0gR2VuZXJhbEhlbHBlcjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5OYW1pbmdIZWxwZXIgPSB2b2lkIDA7XG5jb25zdCBTdHJpbmdDYXNlXzEgPSByZXF1aXJlKFwiLi4vZW51bXMvU3RyaW5nQ2FzZVwiKTtcbmNvbnN0IGNoYW5nZV9jYXNlXzEgPSByZXF1aXJlKFwiY2hhbmdlLWNhc2VcIik7XG5jbGFzcyBOYW1pbmdIZWxwZXIge1xuICAgIHN0YXRpYyBjb2RlU2FmZVZhcmlhYmxlTmFtZUZvclRva2VuKHRva2VuLCBmb3JtYXQsIHBhcmVudCwgcHJlZml4LCBmaW5kUmVwbGFjZSkge1xuICAgICAgICAvLyBDcmVhdGUgYXJyYXkgd2l0aCBhbGwgcGF0aCBzZWdtZW50cyBhbmQgdG9rZW4gbmFtZSBhdCB0aGUgZW5kXG4gICAgICAgIGxldCBmcmFnbWVudHMgPSBbXTtcbiAgICAgICAgaWYgKHBhcmVudCkge1xuICAgICAgICAgICAgZnJhZ21lbnRzID0gWy4uLnBhcmVudC5wYXRoXTtcbiAgICAgICAgICAgIGlmICghcGFyZW50LmlzUm9vdCkge1xuICAgICAgICAgICAgICAgIGZyYWdtZW50cy5wdXNoKHBhcmVudC5uYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBTcGxpdCB0b2tlbiBuYW1lIGludG8gd29yZHNcbiAgICAgICAgY29uc3QgdG9rZW5OYW1lUGFydHMgPSB0b2tlbi5uYW1lLnNwbGl0KC9bXFxzLV9dKy8pO1xuICAgICAgICAvLyBJZiB0aGUgZmlyc3Qgd29yZCBvZiB0b2tlbiBuYW1lIG1hdGNoZXMgdGhlIGxhc3QgZnJhZ21lbnQgKGNhc2UgaW5zZW5zaXRpdmUpLFxuICAgICAgICAvLyBvbmx5IGFkZCB0aGUgcmVtYWluaW5nIHBhcnRzIG9mIHRoZSB0b2tlbiBuYW1lXG4gICAgICAgIGlmIChmcmFnbWVudHMubGVuZ3RoID4gMCAmJiB0b2tlbk5hbWVQYXJ0cy5sZW5ndGggPiAxICYmXG4gICAgICAgICAgICB0b2tlbk5hbWVQYXJ0c1swXS50b0xvd2VyQ2FzZSgpID09PSBmcmFnbWVudHNbZnJhZ21lbnRzLmxlbmd0aCAtIDFdLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgICAgIGZyYWdtZW50cy5wdXNoKHRva2VuTmFtZVBhcnRzLnNsaWNlKDEpLmpvaW4oJyAnKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBmcmFnbWVudHMucHVzaCh0b2tlbi5uYW1lKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBBcHBseSBmaW5kL3JlcGxhY2UgdG8gcGF0aCBhbmQgbmFtZSBmcmFnbWVudHMgKmZpcnN0KlxuICAgICAgICBpZiAoZmluZFJlcGxhY2UpIHtcbiAgICAgICAgICAgIC8vIFNvcnQgZmluZCBwYXR0ZXJucyBieSBsZW5ndGggKGxvbmdlc3QgZmlyc3QpIHRvIGhhbmRsZSBvdmVybGFwcGluZyBwYXR0ZXJuc1xuICAgICAgICAgICAgY29uc3Qgc29ydGVkUGF0dGVybnMgPSBPYmplY3QuZW50cmllcyhmaW5kUmVwbGFjZSlcbiAgICAgICAgICAgICAgICAuc29ydCgoW2FdLCBbYl0pID0+IGIubGVuZ3RoIC0gYS5sZW5ndGgpO1xuICAgICAgICAgICAgLy8gSm9pbiBwYXRoIGFuZCBuYW1lIGZvciBmaW5kL3JlcGxhY2UgcHJvY2Vzc2luZ1xuICAgICAgICAgICAgbGV0IHBhdGhBbmROYW1lID0gZnJhZ21lbnRzLmpvaW4oJyAnKTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgW2ZpbmQsIHJlcGxhY2VdIG9mIHNvcnRlZFBhdHRlcm5zKSB7XG4gICAgICAgICAgICAgICAgLy8gQ3JlYXRlIGEgY2FzZS1pbnNlbnNpdGl2ZSBwYXR0ZXJuIHRoYXQgbWF0Y2hlcyB0aGUgd29yZFxuICAgICAgICAgICAgICAgIC8vIFVzZSBhIG1vcmUgZmxleGlibGUgcGF0dGVybiB0aGF0IGhhbmRsZXMgd29yZCBib3VuZGFyaWVzIGJldHRlclxuICAgICAgICAgICAgICAgIGNvbnN0IHBhdHRlcm4gPSBuZXcgUmVnRXhwKGBcXFxcYiR7ZmluZC5yZXBsYWNlKC9bLiorP14ke30oKXxbXFxdXFxcXF0vZywgJ1xcXFwkJicpfVxcXFxifCg/PD1efFxcXFxzKSR7ZmluZC5yZXBsYWNlKC9bLiorP14ke30oKXxbXFxdXFxcXF0vZywgJ1xcXFwkJicpfSg/PVxcXFxzfCQpYCwgJ2dpJyk7XG4gICAgICAgICAgICAgICAgcGF0aEFuZE5hbWUgPSBwYXRoQW5kTmFtZS5yZXBsYWNlKHBhdHRlcm4sIHJlcGxhY2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gU3BsaXQgYmFjayBpbnRvIGZyYWdtZW50cyBhbmQgY2xlYW4gdXBcbiAgICAgICAgICAgIGZyYWdtZW50cyA9IHBhdGhBbmROYW1lXG4gICAgICAgICAgICAgICAgLnNwbGl0KC9cXHMrLylcbiAgICAgICAgICAgICAgICAuZmlsdGVyKGYgPT4gZi5sZW5ndGggPiAwKVxuICAgICAgICAgICAgICAgIC5tYXAoZiA9PiBmLnRyaW0oKSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQWRkIHByZWZpeCAqYWZ0ZXIqIGZpbmQvcmVwbGFjZVxuICAgICAgICBpZiAocHJlZml4ICYmIHByZWZpeC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBmcmFnbWVudHMudW5zaGlmdChwcmVmaXgpO1xuICAgICAgICB9XG4gICAgICAgIC8vIFJlbW92ZSBjb25zZWN1dGl2ZSBkdXBsaWNhdGVzICphZnRlciogYWRkaW5nIHByZWZpeFxuICAgICAgICBmcmFnbWVudHMgPSBmcmFnbWVudHMuZmlsdGVyKChmcmFnbWVudCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIC8vIEtlZXAgaWYgaXQncyBmaXJzdCBlbGVtZW50IG9yIGRpZmZlcmVudCBmcm9tIHByZXZpb3VzXG4gICAgICAgICAgICByZXR1cm4gaW5kZXggPT09IDAgfHwgZnJhZ21lbnQudG9Mb3dlckNhc2UoKSAhPT0gZnJhZ21lbnRzW2luZGV4IC0gMV0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIEFwcGx5IGNhc2UgZm9ybWF0dGluZ1xuICAgICAgICByZXR1cm4gTmFtaW5nSGVscGVyLmNvZGVTYWZlVmFyaWFibGVOYW1lKGZyYWdtZW50cywgZm9ybWF0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVHJhbnNmb3JtcyBuYW1lIGludG8gc3BlY2lmaWMgY2FzZSBmcm9tIHByb3ZpZGVkIHBhdGggZnJhZ21lbnRzLiBXaWxsIGFsc28gc21hcnRseSBzcGxpdCBmcmFnbWVudHMgaW50byBzdWJmcmFnbWVudHMgLVxuICAgICAqIGlmIHRoZXkgY29udGFpbiBzcGFjZXMsIGNhc2UgY2hhbmdlcyBmcm9tIG9uZSBsZXR0ZXIgdG8gYW5vdGhlciBhbmQgc28gb24uXG4gICAgICpcbiAgICAgKiBBbHNvIGZpeGVzIGFkZGl0aW9uYWwgcHJvYmxlbXMsIGxpa2UgdGhlIGZhY3QgdGhhdCB2YXJpYWJsZSBuYW1lIGNhbid0IHN0YXJ0IHdpdGggbnVtYmVycyAtIHZhcmlhYmxlIHdpbGwgYmUgcHJlZml4ZWQgd2l0aCBcIl9cIiBpbiB0aGF0IGNhc2VcbiAgICAgKi9cbiAgICBzdGF0aWMgY29kZVNhZmVWYXJpYWJsZU5hbWUoZnJhZ21lbnRzLCBmb3JtYXQsIGZpbmRSZXBsYWNlKSB7XG4gICAgICAgIGxldCBzZW50ZW5jZSA9IHR5cGVvZiBmcmFnbWVudHMgPT09ICdzdHJpbmcnID8gZnJhZ21lbnRzIDogZnJhZ21lbnRzLmpvaW4oJyAnKTtcbiAgICAgICAgLy8gQXBwbHkgZmluZC9yZXBsYWNlIGlmIHByb3ZpZGVkXG4gICAgICAgIGlmIChmaW5kUmVwbGFjZSkge1xuICAgICAgICAgICAgLy8gU29ydCBmaW5kIHBhdHRlcm5zIGJ5IGxlbmd0aCAobG9uZ2VzdCBmaXJzdCkgdG8gaGFuZGxlIG92ZXJsYXBwaW5nIHBhdHRlcm5zXG4gICAgICAgICAgICBjb25zdCBzb3J0ZWRQYXR0ZXJucyA9IE9iamVjdC5lbnRyaWVzKGZpbmRSZXBsYWNlKVxuICAgICAgICAgICAgICAgIC5zb3J0KChbYV0sIFtiXSkgPT4gYi5sZW5ndGggLSBhLmxlbmd0aCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IFtmaW5kLCByZXBsYWNlXSBvZiBzb3J0ZWRQYXR0ZXJucykge1xuICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBhIGNhc2UtaW5zZW5zaXRpdmUgcGF0dGVybiB0aGF0IG1hdGNoZXMgdGhlIHdvcmRcbiAgICAgICAgICAgICAgICAvLyBVc2UgYSBtb3JlIGZsZXhpYmxlIHBhdHRlcm4gdGhhdCBoYW5kbGVzIHdvcmQgYm91bmRhcmllcyBiZXR0ZXJcbiAgICAgICAgICAgICAgICBjb25zdCBwYXR0ZXJuID0gbmV3IFJlZ0V4cChgXFxcXGIke2ZpbmQucmVwbGFjZSgvWy4qKz9eJHt9KCl8W1xcXVxcXFxdL2csICdcXFxcJCYnKX1cXFxcYnwoPzw9XnxcXFxccykke2ZpbmQucmVwbGFjZSgvWy4qKz9eJHt9KCl8W1xcXVxcXFxdL2csICdcXFxcJCYnKX0oPz1cXFxcc3wkKWAsICdnaScpO1xuICAgICAgICAgICAgICAgIHNlbnRlbmNlID0gc2VudGVuY2UucmVwbGFjZShwYXR0ZXJuLCByZXBsYWNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBPbmx5IGFsbG93IGxldHRlcnMsIGRpZ2l0cywgdW5kZXJzY29yZSBhbmQgaHlwaGVuXG4gICAgICAgIHNlbnRlbmNlID0gc2VudGVuY2UucmVwbGFjZUFsbCgvW15hLXpBLVowLTlfLV0vZywgJ18nKTtcbiAgICAgICAgc3dpdGNoIChmb3JtYXQpIHtcbiAgICAgICAgICAgIGNhc2UgU3RyaW5nQ2FzZV8xLlN0cmluZ0Nhc2UuY2FtZWxDYXNlOlxuICAgICAgICAgICAgICAgIHNlbnRlbmNlID0gKDAsIGNoYW5nZV9jYXNlXzEuY2FtZWxDYXNlKShzZW50ZW5jZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFN0cmluZ0Nhc2VfMS5TdHJpbmdDYXNlLmNhcGl0YWxDYXNlOlxuICAgICAgICAgICAgICAgIHNlbnRlbmNlID0gKDAsIGNoYW5nZV9jYXNlXzEuY2FwaXRhbENhc2UpKHNlbnRlbmNlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgU3RyaW5nQ2FzZV8xLlN0cmluZ0Nhc2UuY29uc3RhbnRDYXNlOlxuICAgICAgICAgICAgICAgIHNlbnRlbmNlID0gKDAsIGNoYW5nZV9jYXNlXzEuY29uc3RhbnRDYXNlKShzZW50ZW5jZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFN0cmluZ0Nhc2VfMS5TdHJpbmdDYXNlLmRvdENhc2U6XG4gICAgICAgICAgICAgICAgc2VudGVuY2UgPSAoMCwgY2hhbmdlX2Nhc2VfMS5kb3RDYXNlKShzZW50ZW5jZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFN0cmluZ0Nhc2VfMS5TdHJpbmdDYXNlLnRyYWluQ2FzZTpcbiAgICAgICAgICAgICAgICBzZW50ZW5jZSA9ICgwLCBjaGFuZ2VfY2FzZV8xLnRyYWluQ2FzZSkoc2VudGVuY2UpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBTdHJpbmdDYXNlXzEuU3RyaW5nQ2FzZS5ub0Nhc2U6XG4gICAgICAgICAgICAgICAgc2VudGVuY2UgPSAoMCwgY2hhbmdlX2Nhc2VfMS5ub0Nhc2UpKHNlbnRlbmNlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgU3RyaW5nQ2FzZV8xLlN0cmluZ0Nhc2Uua2ViYWJDYXNlOlxuICAgICAgICAgICAgICAgIHNlbnRlbmNlID0gKDAsIGNoYW5nZV9jYXNlXzEua2ViYWJDYXNlKShzZW50ZW5jZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFN0cmluZ0Nhc2VfMS5TdHJpbmdDYXNlLnBhc2NhbENhc2U6XG4gICAgICAgICAgICAgICAgc2VudGVuY2UgPSAoMCwgY2hhbmdlX2Nhc2VfMS5wYXNjYWxDYXNlKShzZW50ZW5jZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFN0cmluZ0Nhc2VfMS5TdHJpbmdDYXNlLnBhdGhDYXNlOlxuICAgICAgICAgICAgICAgIHNlbnRlbmNlID0gKDAsIGNoYW5nZV9jYXNlXzEucGF0aENhc2UpKHNlbnRlbmNlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgU3RyaW5nQ2FzZV8xLlN0cmluZ0Nhc2Uuc2VudGVuY2VDYXNlOlxuICAgICAgICAgICAgICAgIHNlbnRlbmNlID0gKDAsIGNoYW5nZV9jYXNlXzEuc2VudGVuY2VDYXNlKShzZW50ZW5jZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFN0cmluZ0Nhc2VfMS5TdHJpbmdDYXNlLnNuYWtlQ2FzZTpcbiAgICAgICAgICAgICAgICBzZW50ZW5jZSA9ICgwLCBjaGFuZ2VfY2FzZV8xLnNuYWtlQ2FzZSkoc2VudGVuY2UpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBTdHJpbmdDYXNlXzEuU3RyaW5nQ2FzZS5mbGF0Q2FzZTpcbiAgICAgICAgICAgICAgICBzZW50ZW5jZSA9ICgwLCBjaGFuZ2VfY2FzZV8xLmNhbWVsQ2FzZSkoc2VudGVuY2UpLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIC8vIFJlbW92ZSBhbGwgdW5kZXJzY29yZXMgaWYgZm9ybWF0IGlzIG5vdCBzbmFrZV9jYXNlLCBzaW5jZSB0aGUgbGlicmFyeSBoYXMgdW5pbnRlbmRlZCBiZWhhdmlvciB3aXRoIG51bWJlcmljIHZhbHVlcyBpbiB0aGlzIGNhc2VcbiAgICAgICAgaWYgKGZvcm1hdCAhPT0gU3RyaW5nQ2FzZV8xLlN0cmluZ0Nhc2Uuc25ha2VDYXNlICYmIGZvcm1hdCAhPT0gU3RyaW5nQ2FzZV8xLlN0cmluZ0Nhc2UuY29uc3RhbnRDYXNlKSB7XG4gICAgICAgICAgICBzZW50ZW5jZSA9IHNlbnRlbmNlLnJlcGxhY2VBbGwoJ18nLCAnJyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgdmFyaWFibGUgc3RhcnRzIHdpdGggYW55dGhpbmcgYnV0IGxldHRlciwgYWRkIFwiX1wiIGluIGZyb250IG9mIGl0XG4gICAgICAgIGlmIChzZW50ZW5jZS5tYXRjaCgvXlteYS16QS1aXS8pKSB7XG4gICAgICAgICAgICBzZW50ZW5jZSA9ICdfJyArIHNlbnRlbmNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzZW50ZW5jZTtcbiAgICB9XG4gICAgLyoqIENvbnZlcnQgYW55IHN0cmluZyB0byBDU1MgdmFyaWFibGUgcmVmZXJlbmNlICovXG4gICAgc3RhdGljIG5hbWVBc0NTU1ZhclJlZmVyZW5jZShuYW1lKSB7XG4gICAgICAgIHJldHVybiBgdmFyKC0tJHtuYW1lfSlgO1xuICAgIH1cbiAgICAvKiogQ29udmVydCBhbnkgc3RyaW5nIHRvIENTUyB2YXJpYWJsZSBkZWNsYXJhdGlvbiAqL1xuICAgIHN0YXRpYyBuYW1lQXNDU1NWYXJEZWNsYXJhdGlvbihuYW1lKSB7XG4gICAgICAgIHJldHVybiBgLS0ke25hbWV9YDtcbiAgICB9XG59XG5leHBvcnRzLk5hbWluZ0hlbHBlciA9IE5hbWluZ0hlbHBlcjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UaGVtZUhlbHBlciA9IHZvaWQgMDtcbmNvbnN0IE5hbWluZ0hlbHBlcl8xID0gcmVxdWlyZShcIi4vTmFtaW5nSGVscGVyXCIpO1xuY29uc3QgU3RyaW5nQ2FzZV8xID0gcmVxdWlyZShcIi4uL2VudW1zL1N0cmluZ0Nhc2VcIik7XG5jbGFzcyBUaGVtZUhlbHBlciB7XG4gICAgLyoqXG4gICAgICogQ2hlY2tzIGlmIHRva2VuIHR5cGUgaGFzIGFueSB0aGVtZWQgdG9rZW5zIGluIGdpdmVuIHRoZW1lXG4gICAgICogQHBhcmFtIHRva2VucyAtIEFsbCB0b2tlbnNcbiAgICAgKiBAcGFyYW0gdHlwZSAtIFRva2VuIHR5cGUgdG8gY2hlY2tcbiAgICAgKiBAcGFyYW0gdGhlbWUgLSBUaGVtZSB0byBjaGVjayBhZ2FpbnN0XG4gICAgICogQHJldHVybnMgVHJ1ZSBpZiB0aGUgdHlwZSBoYXMgYW55IHRoZW1lZCB0b2tlbnNcbiAgICAgKi9cbiAgICBzdGF0aWMgaGFzVGhlbWVkVG9rZW5zKHRva2VucywgdHlwZSwgdGhlbWUpIHtcbiAgICAgICAgY29uc3QgdG9rZW5zT2ZUeXBlID0gdG9rZW5zLmZpbHRlcigodG9rZW4pID0+IHRva2VuLnRva2VuVHlwZSA9PT0gdHlwZSk7XG4gICAgICAgIGNvbnN0IG92ZXJyaWRkZW5Ub2tlbklkcyA9IG5ldyBTZXQodGhlbWUub3ZlcnJpZGRlblRva2Vucy5tYXAodCA9PiB0LmlkKSk7XG4gICAgICAgIHJldHVybiB0b2tlbnNPZlR5cGUuc29tZSh0b2tlbiA9PiBvdmVycmlkZGVuVG9rZW5JZHMuaGFzKHRva2VuLmlkKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZpbHRlcnMgdG9rZW5zIHRvIG9ubHkgaW5jbHVkZSB0aG9zZSB0aGF0IGFyZSB0aGVtZWRcbiAgICAgKiBAcGFyYW0gdG9rZW5zIC0gVG9rZW5zIHRvIGZpbHRlclxuICAgICAqIEBwYXJhbSB0aGVtZSAtIFRoZW1lIHRvIGNoZWNrIGFnYWluc3RcbiAgICAgKiBAcmV0dXJucyBGaWx0ZXJlZCBhcnJheSBvZiB0b2tlbnMgdGhhdCBoYXZlIHRoZW1lIG92ZXJyaWRlc1xuICAgICAqL1xuICAgIHN0YXRpYyBmaWx0ZXJUaGVtZWRUb2tlbnModG9rZW5zLCB0aGVtZSkge1xuICAgICAgICBjb25zdCBvdmVycmlkZGVuVG9rZW5JZHMgPSBuZXcgU2V0KHRoZW1lLm92ZXJyaWRkZW5Ub2tlbnMubWFwKHQgPT4gdC5pZCkpO1xuICAgICAgICByZXR1cm4gdG9rZW5zLmZpbHRlcih0b2tlbiA9PiBvdmVycmlkZGVuVG9rZW5JZHMuaGFzKHRva2VuLmlkKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlbWUgaWRlbnRpZmllciBmb3IgZmlsZSBvcmdhbml6YXRpb25cbiAgICAgKiBAcGFyYW0gdGhlbWUgLSBUaGVtZSBvYmplY3Qgb3Igc3RyaW5nXG4gICAgICogQHBhcmFtIHN0cmluZ0Nhc2UgLSBDYXNlIHN0eWxlIHRvIGFwcGx5IHRvIHRoZSBpZGVudGlmaWVyIChkZWZhdWx0cyB0byBrZWJhYkNhc2UpXG4gICAgICogQHJldHVybnMgTm9ybWFsaXplZCB0aGVtZSBpZGVudGlmaWVyIGluIHNwZWNpZmllZCBjYXNlXG4gICAgICovXG4gICAgc3RhdGljIGdldFRoZW1lSWRlbnRpZmllcih0aGVtZSwgc3RyaW5nQ2FzZSA9IFN0cmluZ0Nhc2VfMS5TdHJpbmdDYXNlLmtlYmFiQ2FzZSkge1xuICAgICAgICBpZiAodHlwZW9mIHRoZW1lID09PSAnc3RyaW5nJylcbiAgICAgICAgICAgIHJldHVybiB0aGVtZTtcbiAgICAgICAgY29uc3QgaWRlbnRpZmllciA9IHRoZW1lLmNvZGVOYW1lIHx8IHRoZW1lLm5hbWU7XG4gICAgICAgIHJldHVybiBOYW1pbmdIZWxwZXJfMS5OYW1pbmdIZWxwZXIuY29kZVNhZmVWYXJpYWJsZU5hbWUoaWRlbnRpZmllciwgc3RyaW5nQ2FzZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgZGlzcGxheSBuYW1lIGZvciB0aGVtZVxuICAgICAqIEBwYXJhbSB0aGVtZSAtIFRoZW1lIG9iamVjdCBvciBzdHJpbmdcbiAgICAgKiBAcmV0dXJucyBUaGVtZSBkaXNwbGF5IG5hbWVcbiAgICAgKi9cbiAgICBzdGF0aWMgZ2V0VGhlbWVOYW1lKHRoZW1lKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhlbWUgPT09ICdzdHJpbmcnKVxuICAgICAgICAgICAgcmV0dXJuIHRoZW1lO1xuICAgICAgICBjb25zdCBpZGVudGlmaWVyID0gdGhlbWUuY29kZU5hbWUgfHwgdGhlbWUubmFtZTtcbiAgICAgICAgcmV0dXJuIE5hbWluZ0hlbHBlcl8xLk5hbWluZ0hlbHBlci5jb2RlU2FmZVZhcmlhYmxlTmFtZShpZGVudGlmaWVyLCBTdHJpbmdDYXNlXzEuU3RyaW5nQ2FzZS5jYXBpdGFsQ2FzZSk7XG4gICAgfVxufVxuZXhwb3J0cy5UaGVtZUhlbHBlciA9IFRoZW1lSGVscGVyO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnN1cmVPcHRpb25hbFJlZmVyZW5jZSA9IHN1cmVPcHRpb25hbFJlZmVyZW5jZTtcbi8qKiBGaW5kcyByZWZlcmVuY2UgYW5kIG1ha2VzIHN1cmUgaXQgZXhpc3RzIGlmIHJlZmVyZW5jZSB3YXMgcHJvdmlkZWQuIElmIG51bGwgd2FzIHByb3ZpZGVkLCBudWxsIGlzIG9uIHRoZSBvdXRwdXQgYXMgd2VsbCB0byBtYWtlIHNlZWtpbmcgb3V0c2lkZSBmZXcgbGluZXMgc21hbGxlciAqL1xuZnVuY3Rpb24gc3VyZU9wdGlvbmFsUmVmZXJlbmNlKHJlZmVyZW5jZUlkLCBhbGxUb2tlbnMsIGFsbG93UmVmZXJlbmNlcyA9IHRydWUpIHtcbiAgICBpZiAoIXJlZmVyZW5jZUlkIHx8ICFhbGxvd1JlZmVyZW5jZXMpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IHRva2VuID0gYWxsVG9rZW5zLmdldChyZWZlcmVuY2VJZCk7XG4gICAgaWYgKCF0b2tlbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFRyeWluZyB0byByZXRyaWV2ZSB1bmtub3duIHJlZmVyZW5jZWQgdG9rZW4gJHtyZWZlcmVuY2VJZH1gKTtcbiAgICB9XG4gICAgcmV0dXJuIHRva2VuO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRva2VuTmFtZVRyYWNrZXIgPSB2b2lkIDA7XG5jb25zdCBOYW1pbmdIZWxwZXJfMSA9IHJlcXVpcmUoXCIuL05hbWluZ0hlbHBlclwiKTtcbi8qKlxuICogVHJhY2tzIGFuZCBnZW5lcmF0ZXMgdW5pcXVlIG5hbWVzIGZvciBkZXNpZ24gdG9rZW5zIHdoaWxlIG1haW50YWluaW5nIGNvbnNpc3RlbmN5XG4gKiBhY3Jvc3MgbXVsdGlwbGUgcmVmZXJlbmNlcyB0byB0aGUgc2FtZSB0b2tlbi4gVGhpcyBlbnN1cmVzIHRoYXQgZWFjaCB0b2tlbiBnZXRzXG4gKiBhIHVuaXF1ZSwgY29kZS1zYWZlIG5hbWUgdGhhdCBjYW4gYmUgdXNlZCBpbiBnZW5lcmF0ZWQgY29kZS5cbiAqL1xuY2xhc3MgVG9rZW5OYW1lVHJhY2tlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8qKiBNYXBzIHRva2VuIElEcyB0byB0aGVpciBnZW5lcmF0ZWQgdW5pcXVlIG5hbWVzICovXG4gICAgICAgIHRoaXMudG9rZW5OYW1lTWFwID0gbmV3IE1hcCgpOyAvLyB0b2tlbi5pZCAtPiBnZW5lcmF0ZWQgbmFtZVxuICAgICAgICAvKiogTWFwcyBnZW5lcmF0ZWQgbmFtZXMgYmFjayB0byB0b2tlbiBJRHMgdG8gY2hlY2sgZm9yIG5hbWluZyBjb25mbGljdHMgKi9cbiAgICAgICAgdGhpcy5uYW1lVG9Ub2tlbk1hcCA9IG5ldyBNYXAoKTsgLy8gZ2VuZXJhdGVkIG5hbWUgLT4gdG9rZW4uaWRcbiAgICAgICAgLyoqIE1hcHMgaGllcmFyY2h5IGxldmVsICsgbmFtZSB0byB0b2tlbiBJRHMgKi9cbiAgICAgICAgdGhpcy5oaWVyYXJjaHlOYW1lTWFwID0gbmV3IE1hcCgpOyAvLyBcInBhdGgvbmFtZVwiIC0+IFNldCBvZiB0b2tlbiBJRHNcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2xlYXJzIGFsbCBzdG9yZWQgdG9rZW4gbmFtZSBtYXBwaW5ncywgZWZmZWN0aXZlbHkgcmVzZXR0aW5nIHRoZSB0cmFja2VyIHN0YXRlLlxuICAgICAqL1xuICAgIHJlc2V0KCkge1xuICAgICAgICB0aGlzLnRva2VuTmFtZU1hcC5jbGVhcigpO1xuICAgICAgICB0aGlzLm5hbWVUb1Rva2VuTWFwLmNsZWFyKCk7XG4gICAgICAgIHRoaXMuaGllcmFyY2h5TmFtZU1hcC5jbGVhcigpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIGEgY2xlYW4sIHVuaXF1ZSBuYW1lIGZvciBhIHRva2VuIHdpdGhvdXQgYW55IGdyb3VwIHByZWZpeGVzLlxuICAgICAqIFVzZWQgZm9yIGhpZXJhcmNoaWNhbCBzdHJ1Y3R1cmVzIHdoZXJlIHRoZSBwYXRoIGhhbmRsZXMgZ3JvdXBpbmcuXG4gICAgICovXG4gICAgZ2V0U2ltcGxlVG9rZW5OYW1lKHRva2VuLCBmb3JtYXQsIGZvckV4cG9ydCA9IGZhbHNlLCBwYXRoID0gW10gLy8gQWRkIHBhdGggcGFyYW1ldGVyIHRvIGNoZWNrIGhpZXJhcmNoeSBsZXZlbFxuICAgICkge1xuICAgICAgICAvLyBDcmVhdGUgYSB1bmlxdWUga2V5IGZvciB0aGlzIGhpZXJhcmNoeSBsZXZlbFxuICAgICAgICBjb25zdCBoaWVyYXJjaHlLZXkgPSBwYXRoLmpvaW4oJy8nKTtcbiAgICAgICAgY29uc3QgaGllcmFyY2h5RnVsbEtleSA9IGAke2hpZXJhcmNoeUtleX0vJHt0b2tlbi5uYW1lfWA7XG4gICAgICAgIC8vIElmIHdlJ3JlIGxvb2tpbmcgdXAgYSBuYW1lIGZvciByZWZlcmVuY2UgYW5kIGl0IHdhcyBhbHJlYWR5IGdlbmVyYXRlZCwgdXNlIHRoYXRcbiAgICAgICAgaWYgKCFmb3JFeHBvcnQgJiYgdGhpcy50b2tlbk5hbWVNYXAuaGFzKHRva2VuLmlkKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudG9rZW5OYW1lTWFwLmdldCh0b2tlbi5pZCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gR2V0IHRoZSBiYXNlIG5hbWUgd2l0aG91dCBhbnkgcHJlZml4ZXNcbiAgICAgICAgbGV0IG5hbWUgPSBOYW1pbmdIZWxwZXJfMS5OYW1pbmdIZWxwZXIuY29kZVNhZmVWYXJpYWJsZU5hbWUodG9rZW4ubmFtZSwgZm9ybWF0KTtcbiAgICAgICAgLy8gR2V0IG9yIGNyZWF0ZSB0aGUgc2V0IG9mIHRva2VuIElEcyBmb3IgdGhpcyBoaWVyYXJjaHkgbGV2ZWwgYW5kIG5hbWVcbiAgICAgICAgaWYgKCF0aGlzLmhpZXJhcmNoeU5hbWVNYXAuaGFzKGhpZXJhcmNoeUZ1bGxLZXkpKSB7XG4gICAgICAgICAgICB0aGlzLmhpZXJhcmNoeU5hbWVNYXAuc2V0KGhpZXJhcmNoeUZ1bGxLZXksIG5ldyBTZXQoKSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdG9rZW5zQXRMZXZlbCA9IHRoaXMuaGllcmFyY2h5TmFtZU1hcC5nZXQoaGllcmFyY2h5RnVsbEtleSk7XG4gICAgICAgIC8vIE9ubHkgYWRkIHN1ZmZpeCBpZiB0aGVyZSdzIGFub3RoZXIgdG9rZW4gd2l0aCB0aGUgc2FtZSBuYW1lIGF0IHRoZSBzYW1lIGxldmVsXG4gICAgICAgIGlmICh0b2tlbnNBdExldmVsLnNpemUgPiAwICYmICF0b2tlbnNBdExldmVsLmhhcyh0b2tlbi5pZCkpIHtcbiAgICAgICAgICAgIG5hbWUgPSBgJHtuYW1lfV8ke3Rva2Vuc0F0TGV2ZWwuc2l6ZX1gO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRyYWNrIHRoZSB0b2tlbiBhdCB0aGlzIGhpZXJhcmNoeSBsZXZlbFxuICAgICAgICB0b2tlbnNBdExldmVsLmFkZCh0b2tlbi5pZCk7XG4gICAgICAgIC8vIFRyYWNrIHRoZSBuYW1lIGlmIG5vdCBmb3IgZXhwb3J0XG4gICAgICAgIGlmICghZm9yRXhwb3J0KSB7XG4gICAgICAgICAgICB0aGlzLnRva2VuTmFtZU1hcC5zZXQodG9rZW4uaWQsIG5hbWUpO1xuICAgICAgICAgICAgdGhpcy5uYW1lVG9Ub2tlbk1hcC5zZXQobmFtZSwgdG9rZW4uaWQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuYW1lO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgb3IgcmV0cmlldmVzIGEgdW5pcXVlLCBjb2RlLXNhZmUgbmFtZSBmb3IgYSBnaXZlbiB0b2tlbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB0b2tlbiAtIFRoZSBkZXNpZ24gdG9rZW4gdGhhdCBuZWVkcyBhIG5hbWVcbiAgICAgKiBAcGFyYW0gdG9rZW5Hcm91cHMgLSBBcnJheSBvZiBhbGwgdG9rZW4gZ3JvdXBzLCB1c2VkIHRvIGZpbmQgdGhlIHRva2VuJ3MgcGFyZW50IGdyb3VwXG4gICAgICogQHBhcmFtIGZvcm1hdCAtIFRoZSBkZXNpcmVkIGNhc2UgZm9ybWF0IGZvciB0aGUgZ2VuZXJhdGVkIG5hbWUgKGUuZy4sIGNhbWVsQ2FzZSwgc25ha2VfY2FzZSlcbiAgICAgKiBAcGFyYW0gcHJlZml4IC0gT3B0aW9uYWwgcHJlZml4IHRvIGFkZCB0byB0aGUgZ2VuZXJhdGVkIG5hbWVcbiAgICAgKiBAcGFyYW0gZm9yRXhwb3J0IC0gSWYgdHJ1ZSwgZ2VuZXJhdGVzIGEgbmV3IG5hbWUgd2l0aG91dCBzdG9yaW5nIGl0LiBJZiBmYWxzZSwgc3RvcmVzIGFuZCByZXVzZXMgbmFtZXNcbiAgICAgKiBAcmV0dXJucyBBIHVuaXF1ZSwgY29kZS1zYWZlIG5hbWUgZm9yIHRoZSB0b2tlblxuICAgICAqL1xuICAgIGdldFRva2VuTmFtZSh0b2tlbiwgdG9rZW5Hcm91cHMsIGZvcm1hdCwgcHJlZml4LCBmb3JFeHBvcnQgPSBmYWxzZSkge1xuICAgICAgICAvLyBJZiB3ZSdyZSBsb29raW5nIHVwIGEgbmFtZSBmb3IgcmVmZXJlbmNlIGFuZCBpdCB3YXMgYWxyZWFkeSBnZW5lcmF0ZWQsIHVzZSB0aGF0XG4gICAgICAgIGlmICghZm9yRXhwb3J0ICYmIHRoaXMudG9rZW5OYW1lTWFwLmhhcyh0b2tlbi5pZCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRva2VuTmFtZU1hcC5nZXQodG9rZW4uaWQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBhcmVudCA9IHRva2VuR3JvdXBzLmZpbmQoKGdyb3VwKSA9PiBncm91cC5pZCA9PT0gdG9rZW4ucGFyZW50R3JvdXBJZCk7XG4gICAgICAgIC8vIEdldCB0aGUgYmFzZSBuYW1lXG4gICAgICAgIGxldCBuYW1lID0gTmFtaW5nSGVscGVyXzEuTmFtaW5nSGVscGVyLmNvZGVTYWZlVmFyaWFibGVOYW1lRm9yVG9rZW4odG9rZW4sIGZvcm1hdCwgcGFyZW50LCBwcmVmaXgpO1xuICAgICAgICBsZXQgY291bnRlciA9IDE7XG4gICAgICAgIC8vIElmIG5hbWUgaXMgdGFrZW4gYnkgYSBkaWZmZXJlbnQgdG9rZW4sIGFkZCBhIHN1ZmZpeFxuICAgICAgICB3aGlsZSAodGhpcy5uYW1lVG9Ub2tlbk1hcC5oYXMobmFtZSkgJiYgdGhpcy5uYW1lVG9Ub2tlbk1hcC5nZXQobmFtZSkgIT09IHRva2VuLmlkKSB7XG4gICAgICAgICAgICBuYW1lID0gYCR7bmFtZX1fY29weV8ke2NvdW50ZXIrK31gO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRyYWNrIHRoZSBuYW1lIGlmIG5vdCBmb3IgZXhwb3J0XG4gICAgICAgIGlmICghZm9yRXhwb3J0KSB7XG4gICAgICAgICAgICB0aGlzLnRva2VuTmFtZU1hcC5zZXQodG9rZW4uaWQsIG5hbWUpO1xuICAgICAgICAgICAgdGhpcy5uYW1lVG9Ub2tlbk1hcC5zZXQobmFtZSwgdG9rZW4uaWQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuYW1lO1xuICAgIH1cbn1cbmV4cG9ydHMuVG9rZW5OYW1lVHJhY2tlciA9IFRva2VuTmFtZVRyYWNrZXI7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hlbHBlcnMvTmFtaW5nSGVscGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9oZWxwZXJzL0NvbG9ySGVscGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9oZWxwZXJzL1Rva2VuSGVscGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9oZWxwZXJzL0NTU0hlbHBlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaGVscGVycy9GaWxlSGVscGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9oZWxwZXJzL1RoZW1lSGVscGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9oZWxwZXJzL0ZpbGVOYW1lSGVscGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9oZWxwZXJzL0dlbmVyYWxIZWxwZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2VudW1zL1N0cmluZ0Nhc2VcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2VudW1zL0NvbG9yRm9ybWF0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9oZWxwZXJzL1Rva2VuTmFtZVRyYWNrZXJcIiksIGV4cG9ydHMpO1xuIiwiKCgpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9ezE6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkdyYWRpZW50VHlwZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5saW5lYXI9XCJMaW5lYXJcIixlLnJhZGlhbD1cIlJhZGlhbFwiLGUuYW5ndWxhcj1cIkFuZ3VsYXJcIn0ob3x8KHQuR3JhZGllbnRUeXBlPW89e30pKX0sMzA2OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2NzQmxvY2tUZXh0UHJvcGVydHlTdHlsZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS50aXRsZTE9XCJUaXRsZTFcIixlLnRpdGxlMj1cIlRpdGxlMlwiLGUudGl0bGUzPVwiVGl0bGUzXCIsZS50aXRsZTQ9XCJUaXRsZTRcIixlLnRpdGxlNT1cIlRpdGxlNVwiLGUuZGVmYXVsdD1cIkRlZmF1bHRcIixlLmRlZmF1bHRCb2xkPVwiRGVmYXVsdEJvbGRcIixlLmRlZmF1bHRTZW1pYm9sZD1cIkRlZmF1bHRTZW1pYm9sZFwiLGUuc21hbGw9XCJTbWFsbFwiLGUuc21hbGxCb2xkPVwiU21hbGxCb2xkXCIsZS5zbWFsbFNlbWlib2xkPVwiU21hbGxTZW1pYm9sZFwiLGUuY3VzdG9tPVwiQ3VzdG9tXCJ9KG98fCh0LkRvY3NCbG9ja1RleHRQcm9wZXJ0eVN0eWxlPW89e30pKX0sODk5OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Bc3NldFNjYWxlVHlwZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5hc3BlY3RGaWxsPVwiQXNwZWN0RmlsbFwiLGUuYXNwZWN0Rml0PVwiQXNwZWN0Rml0XCJ9KG98fCh0LkFzc2V0U2NhbGVUeXBlPW89e30pKX0sOTE1OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Bc3NldFNjYWxlPXZvaWQgMCxmdW5jdGlvbihlKXtlLngxPVwieDFcIixlLngyPVwieDJcIixlLngzPVwieDNcIixlLng0PVwieDRcIn0ob3x8KHQuQXNzZXRTY2FsZT1vPXt9KSl9LDkyMjooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuVGV4dENhc2U9dm9pZCAwLGZ1bmN0aW9uKGUpe2Uub3JpZ2luYWw9XCJPcmlnaW5hbFwiLGUudXBwZXI9XCJVcHBlclwiLGUubG93ZXI9XCJMb3dlclwiLGUuY2FtZWw9XCJDYW1lbFwiLGUuc21hbGxDYXBzPVwiU21hbGxDYXBzXCJ9KG98fCh0LlRleHRDYXNlPW89e30pKX0sOTM0OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5JY29uU2V0PXZvaWQgMCxmdW5jdGlvbihlKXtlLmNoZWNrQ2lyY2xlPVwiQ2hlY2tDaXJjbGVcIixlLmNyb3NzQ2lyY2xlPVwiQ3Jvc3NDaXJjbGVcIixlLmFsZXJ0PVwiQWxlcnRcIn0ob3x8KHQuSWNvblNldD1vPXt9KSl9LDExNjA6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkFMTF9CT1JERVJfUE9TSVRJT05TPXQuQm9yZGVyUG9zaXRpb249dm9pZCAwLGZ1bmN0aW9uKGUpe2UuaW5zaWRlPVwiSW5zaWRlXCIsZS5jZW50ZXI9XCJDZW50ZXJcIixlLm91dHNpZGU9XCJPdXRzaWRlXCJ9KG98fCh0LkJvcmRlclBvc2l0aW9uPW89e30pKSx0LkFMTF9CT1JERVJfUE9TSVRJT05TPVtvLmluc2lkZSxvLmNlbnRlcixvLm91dHNpZGVdfSwxMjMzOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2NzRW50aXR5VHlwZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5ncm91cD1cIkdyb3VwXCIsZS5wYWdlPVwiUGFnZVwifShvfHwodC5Eb2NzRW50aXR5VHlwZT1vPXt9KSl9LDEyNTU6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkZyYW1lQWxpZ25tZW50PXZvaWQgMCxmdW5jdGlvbihlKXtlLmZyYW1lSGVpZ2h0PVwiRnJhbWVIZWlnaHRcIixlLmNlbnRlcj1cIkNlbnRlclwifShvfHwodC5GcmFtZUFsaWdubWVudD1vPXt9KSl9LDE0MjM6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3VtZW50YXRpb25MZWdhY3lQYWdlQXNzZXRUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLmltYWdlPVwiaW1hZ2VcIixlLmZpZ21hRnJhbWU9XCJmaWdtYUZyYW1lXCJ9KG98fCh0LkRvY3VtZW50YXRpb25MZWdhY3lQYWdlQXNzZXRUeXBlPW89e30pKX0sMTYwMTooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VCbG9ja1RoZW1lVHlwZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5vdmVycmlkZT1cIk92ZXJyaWRlXCIsZS5jb21wYXJpc29uPVwiQ29tcGFyaXNvblwifShvfHwodC5Eb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrVGhlbWVUeXBlPW89e30pKX0sMTg0NjooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VCbG9ja1R5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UudGV4dD1cIlRleHRcIixlLmhlYWRpbmc9XCJIZWFkaW5nXCIsZS5jb2RlPVwiQ29kZVwiLGUudW5vcmRlcmVkTGlzdD1cIlVub3JkZXJlZExpc3RcIixlLm9yZGVyZWRMaXN0PVwiT3JkZXJlZExpc3RcIixlLnF1b3RlPVwiUXVvdGVcIixlLmNhbGxvdXQ9XCJDYWxsb3V0XCIsZS5kaXZpZGVyPVwiRGl2aWRlclwiLGUuaW1hZ2U9XCJJbWFnZVwiLGUudG9rZW49XCJUb2tlblwiLGUudG9rZW5MaXN0PVwiVG9rZW5MaXN0XCIsZS50b2tlbkdyb3VwPVwiVG9rZW5Hcm91cFwiLGUuc2hvcnRjdXRzPVwiU2hvcnRjdXRzXCIsZS5saW5rPVwiTGlua1wiLGUuZmlnbWFFbWJlZD1cIkZpZ21hRW1iZWRcIixlLnlvdXR1YmVFbWJlZD1cIllvdXR1YmVFbWJlZFwiLGUuc3Rvcnlib29rRW1iZWQ9XCJTdG9yeWJvb2tFbWJlZFwiLGUuZ2VuZXJpY0VtYmVkPVwiRW1iZWRcIixlLmZpZ21hRnJhbWVzPVwiRmlnbWFGcmFtZXNcIixlLmN1c3RvbT1cIkN1c3RvbVwiLGUucmVuZGVyQ29kZT1cIlJlbmRlckNvZGVcIixlLmNvbXBvbmVudEFzc2V0cz1cIkNvbXBvbmVudEFzc2V0c1wiLGUuY29sdW1uPVwiQ29sdW1uXCIsZS5jb2x1bW5JdGVtPVwiQ29sdW1uSXRlbVwiLGUudGFicz1cIlRhYnNcIixlLnRhYkl0ZW09XCJUYWJJdGVtXCIsZS50YWJsZT1cIlRhYmxlXCIsZS50YWJsZUNlbGw9XCJUYWJsZUNlbGxcIixlLnRhYmxlUm93PVwiVGFibGVSb3dcIn0ob3x8KHQuRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VCbG9ja1R5cGU9bz17fSkpfSwyMTIzOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2N1bWVudGF0aW9uTGVnYWN5R3JvdXBCZWhhdmlvcj12b2lkIDAsZnVuY3Rpb24oZSl7ZS5ncm91cD1cIkdyb3VwXCIsZS50YWJzPVwiVGFic1wifShvfHwodC5Eb2N1bWVudGF0aW9uTGVnYWN5R3JvdXBCZWhhdmlvcj1vPXt9KSl9LDI2NTc6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3VtZW50YXRpb25MZWdhY3lQYWdlQmxvY2tTaG9ydGN1dD10LkRvY3VtZW50YXRpb25MZWdhY3lQYWdlQmxvY2tTaG9ydGN1dFR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuZXh0ZXJuYWw9XCJFeHRlcm5hbFwiLGUuaW50ZXJuYWw9XCJJbnRlcm5hbFwifShvfHwodC5Eb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrU2hvcnRjdXRUeXBlPW89e30pKSx0LkRvY3VtZW50YXRpb25MZWdhY3lQYWdlQmxvY2tTaG9ydGN1dD1jbGFzc3tjb25zdHJ1Y3RvcihlKXt2YXIgdDtlLnVybD90aGlzLnR5cGU9by5leHRlcm5hbDp0aGlzLnR5cGU9by5pbnRlcm5hbCx0aGlzLnRpdGxlPXRoaXMuc2hvcnRjdXRUaXRsZUZyb21Nb2RlbChlLHRoaXMudHlwZSksdGhpcy5kZXNjcmlwdGlvbj10aGlzLnNob3J0Y3V0RGVzY3JpcHRpb25Gcm9tTW9kZWwoZSx0aGlzLnR5cGUpLHRoaXMucHJldmlld1VybD10aGlzLnNob3J0Y3V0UHJldmlld1VybEZyb21Nb2RlbChlKSx0aGlzLnR5cGU9PT1vLmludGVybmFsJiYobnVsbD09PSh0PWUuZG9jdW1lbnRhdGlvbkl0ZW1QcmV2aWV3KXx8dm9pZCAwPT09dD92b2lkIDA6dC52YWxpZCkmJmUuZG9jdW1lbnRhdGlvbkl0ZW1JZD90aGlzLmludGVybmFsSWQ9ZS5kb2N1bWVudGF0aW9uSXRlbUlkOih0aGlzLmludGVybmFsSWQ9bnVsbCx0aGlzLnR5cGU9PT1vLmV4dGVybmFsJiZlLnVybD90aGlzLmV4dGVybmFsVXJsPWUudXJsOnRoaXMuZXh0ZXJuYWxVcmw9bnVsbCl9c2hvcnRjdXRUaXRsZUZyb21Nb2RlbChlLHQpe3ZhciByLG4saSxhLGM7bGV0IGw9bnVsbDtyZXR1cm4gZS50aXRsZSYmZS50aXRsZS50cmltKCkubGVuZ3RoPjA/bD1lLnRpdGxlOnQ9PT1vLmludGVybmFsP2w9bnVsbCE9PShuPW51bGw9PT0ocj1lLmRvY3VtZW50YXRpb25JdGVtUHJldmlldyl8fHZvaWQgMD09PXI/dm9pZCAwOnIudGl0bGUpJiZ2b2lkIDAhPT1uP246bnVsbDp0PT09by5leHRlcm5hbCYmKGw9bnVsbCE9PShjPW51bGwhPT0oYT1udWxsPT09KGk9ZS51cmxQcmV2aWV3KXx8dm9pZCAwPT09aT92b2lkIDA6aS50aXRsZSkmJnZvaWQgMCE9PWE/YTplLnVybCkmJnZvaWQgMCE9PWM/YzpudWxsKSxsJiYwIT09bC50cmltKCkubGVuZ3RoP2w6bnVsbH1zaG9ydGN1dERlc2NyaXB0aW9uRnJvbU1vZGVsKGUsdCl7dmFyIHI7bGV0IG49bnVsbDtyZXR1cm4gZS5kZXNjcmlwdGlvbiYmZS5kZXNjcmlwdGlvbi50cmltKCkubGVuZ3RoPjA/bj1lLmRlc2NyaXB0aW9uOnQ9PT1vLmV4dGVybmFsJiYobj1udWxsPT09KHI9ZS51cmxQcmV2aWV3KXx8dm9pZCAwPT09cj92b2lkIDA6ci5kZXNjcmlwdGlvbiksbiYmMCE9PW4udHJpbSgpLmxlbmd0aD9uOm51bGx9c2hvcnRjdXRQcmV2aWV3VXJsRnJvbU1vZGVsKGUpe3ZhciB0LG8scixuLGk7cmV0dXJuIG51bGwhPT0oaT1udWxsIT09KHI9bnVsbCE9PSh0PWUuYXNzZXRVcmwpJiZ2b2lkIDAhPT10P3Q6bnVsbD09PShvPWUuYXNzZXQpfHx2b2lkIDA9PT1vP3ZvaWQgMDpvLnVybCkmJnZvaWQgMCE9PXI/cjpudWxsPT09KG49ZS51cmxQcmV2aWV3KXx8dm9pZCAwPT09bj92b2lkIDA6bi50aHVtYm5haWxVcmwpJiZ2b2lkIDAhPT1pP2k6bnVsbH19fSwyNjc0OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5SaWNoVGV4dFNwYW5BdHRyaWJ1dGVUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLmJvbGQ9XCJCb2xkXCIsZS5pdGFsaWM9XCJJdGFsaWNcIixlLmxpbms9XCJMaW5rXCIsZS5zdHJpa2V0aHJvdWdoPVwiU3RyaWtldGhyb3VnaFwiLGUuY29kZT1cIkNvZGVcIn0ob3x8KHQuUmljaFRleHRTcGFuQXR0cmlidXRlVHlwZT1vPXt9KSl9LDI4MDI6KGUsdCk9Pnt2YXIgbyxyO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuUHVsc2FyRXhlY3V0b3I9dC5PdXRwdXRGaWxlVHlwZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5jb3B5UmVtb3RlVXJsPVwiY29weVJlbW90ZVVybFwiLGUudGV4dD1cInRleHRcIixlLmJpbmFyeT1cImJpbmFyeVwifShvfHwodC5PdXRwdXRGaWxlVHlwZT1vPXt9KSksZnVuY3Rpb24oZSl7ZS5zdXBlcm5vdmE9XCJzdXBlcm5vdmFcIixlLmxvY2FsPVwibG9jYWxcIn0ocnx8KHQuUHVsc2FyRXhlY3V0b3I9cj17fSkpfSwzNjA3OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Xb3Jrc3BhY2VTdWJzY3JpcHRpb25TdGF0dXM9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuYWN0aXZlPVwiYWN0aXZlXCIsZS5ncmFjZVBlcmlvZD1cImdyYWNlUGVyaW9kXCIsZS5jYW5jZWxsZWQ9XCJjYW5jZWxsZWRcIixlLnN1c3BlbmRlZD1cInN1c3BlbmRlZFwifShvfHwodC5Xb3Jrc3BhY2VTdWJzY3JpcHRpb25TdGF0dXM9bz17fSkpfSwzNzE4OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5GcmFtZUxheW91dD12b2lkIDAsZnVuY3Rpb24oZSl7ZS5jOD1cIkM4XCIsZS5jNz1cIkM3XCIsZS5jNj1cIkM2XCIsZS5jNT1cIkM1XCIsZS5jND1cIkM0XCIsZS5jMz1cIkMzXCIsZS5jMj1cIkMyXCIsZS5jMT1cIkMxXCIsZS5jMTc1PVwiQzFfNzVcIn0ob3x8KHQuRnJhbWVMYXlvdXQ9bz17fSkpfSwzNzMzOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2NzQmxvY2tCZWhhdmlvclNlbGVjdGlvblR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuZW50aXR5PVwiRW50aXR5XCIsZS5ncm91cD1cIkdyb3VwXCIsZS5lbnRpdHlBbmRHcm91cD1cIkVudGl0eUFuZEdyb3VwXCJ9KG98fCh0LkRvY3NCbG9ja0JlaGF2aW9yU2VsZWN0aW9uVHlwZT1vPXt9KSl9LDM3ODg6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRUX1RPS0VOX1RZUEVTPXQudG9rZW5UeXBlSXNSZWZlcmVuY2FibGU9dC5SRUZFUkVOQ0FCTEVfVE9LRU5fVFlQRVM9dC5SRVBMQUNBQkxFX1RPS0VOX1RZUEVTPXQudG9rZW5UeXBlSXNOb25QdXJlPXQudG9rZW5UeXBlSXNQdXJlPXQuUFVSRV9UT0tFTl9UWVBFUz10LkFMTF9UT0tFTl9UWVBFUz10Lk1TX0RJTUVOU0lPTl9UT0tFTl9UWVBFUz10LlJBV19ESU1FTlNJT05fVE9LRU5fVFlQRVM9dC5ESU1FTlNJT05fVE9LRU5fVFlQRVM9dC5PUFRJT05fVE9LRU5fVFlQRVM9dC5TVFJJTkdfVE9LRU5fVFlQRVM9dC5Ub2tlblR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuY29sb3I9XCJDb2xvclwiLGUudHlwb2dyYXBoeT1cIlR5cG9ncmFwaHlcIixlLnNoYWRvdz1cIlNoYWRvd1wiLGUuYm9yZGVyPVwiQm9yZGVyXCIsZS5ncmFkaWVudD1cIkdyYWRpZW50XCIsZS5ibHVyPVwiQmx1clwiLGUucmFkaXVzPVwiQm9yZGVyUmFkaXVzXCIsZS5ib3JkZXJXaWR0aD1cIkJvcmRlcldpZHRoXCIsZS5kdXJhdGlvbj1cIkR1cmF0aW9uXCIsZS5mb250U2l6ZT1cIkZvbnRTaXplXCIsZS5kaW1lbnNpb249XCJEaW1lbnNpb25cIixlLmxldHRlclNwYWNpbmc9XCJMZXR0ZXJTcGFjaW5nXCIsZS5saW5lSGVpZ2h0PVwiTGluZUhlaWdodFwiLGUub3BhY2l0eT1cIk9wYWNpdHlcIixlLnBhcmFncmFwaFNwYWNpbmc9XCJQYXJhZ3JhcGhTcGFjaW5nXCIsZS5zaXplPVwiU2l6ZVwiLGUuc3BhY2U9XCJTcGFjZVwiLGUuekluZGV4PVwiWkluZGV4XCIsZS50ZXh0RGVjb3JhdGlvbj1cIlRleHREZWNvcmF0aW9uXCIsZS50ZXh0Q2FzZT1cIlRleHRDYXNlXCIsZS52aXNpYmlsaXR5PVwiVmlzaWJpbGl0eVwiLGUuZm9udEZhbWlseT1cIkZvbnRGYW1pbHlcIixlLmZvbnRXZWlnaHQ9XCJGb250V2VpZ2h0XCIsZS5zdHJpbmc9XCJTdHJpbmdcIixlLnByb2R1Y3RDb3B5PVwiUHJvZHVjdENvcHlcIn0ob3x8KHQuVG9rZW5UeXBlPW89e30pKSx0LlNUUklOR19UT0tFTl9UWVBFUz1bby5zdHJpbmcsby5wcm9kdWN0Q29weSxvLmZvbnRGYW1pbHksby5mb250V2VpZ2h0XSx0Lk9QVElPTl9UT0tFTl9UWVBFUz1bby50ZXh0Q2FzZSxvLnRleHREZWNvcmF0aW9uLG8udmlzaWJpbGl0eV0sdC5ESU1FTlNJT05fVE9LRU5fVFlQRVM9W28uZGltZW5zaW9uLG8uc2l6ZSxvLnNwYWNlLG8ub3BhY2l0eSxvLmZvbnRTaXplLG8ubGluZUhlaWdodCxvLmxldHRlclNwYWNpbmcsby5wYXJhZ3JhcGhTcGFjaW5nLG8uYm9yZGVyV2lkdGgsby5yYWRpdXMsby5kdXJhdGlvbixvLnpJbmRleF0sdC5SQVdfRElNRU5TSU9OX1RPS0VOX1RZUEVTPVtvLm9wYWNpdHksby56SW5kZXhdLHQuTVNfRElNRU5TSU9OX1RPS0VOX1RZUEVTPVtvLmR1cmF0aW9uXSx0LkFMTF9UT0tFTl9UWVBFUz1bLi4udC5ESU1FTlNJT05fVE9LRU5fVFlQRVMsLi4udC5TVFJJTkdfVE9LRU5fVFlQRVMsLi4udC5PUFRJT05fVE9LRU5fVFlQRVMsby5jb2xvcixvLmdyYWRpZW50LG8uYm9yZGVyLG8ucmFkaXVzLG8uc2hhZG93LG8udHlwb2dyYXBoeSxvLmJsdXJdLHQuUFVSRV9UT0tFTl9UWVBFUz1bLi4udC5ESU1FTlNJT05fVE9LRU5fVFlQRVMsLi4udC5TVFJJTkdfVE9LRU5fVFlQRVMsLi4udC5PUFRJT05fVE9LRU5fVFlQRVNdLHQudG9rZW5UeXBlSXNQdXJlPWU9PnQuUFVSRV9UT0tFTl9UWVBFUy5pbmNsdWRlcyhlKSx0LnRva2VuVHlwZUlzTm9uUHVyZT1lPT4hKDAsdC50b2tlblR5cGVJc1B1cmUpKGUpLHQuUkVQTEFDQUJMRV9UT0tFTl9UWVBFUz1bby5jb2xvciwuLi50LkRJTUVOU0lPTl9UT0tFTl9UWVBFUywuLi50LlNUUklOR19UT0tFTl9UWVBFUywuLi50Lk9QVElPTl9UT0tFTl9UWVBFU10sdC5SRUZFUkVOQ0FCTEVfVE9LRU5fVFlQRVM9W28uY29sb3IsLi4udC5ESU1FTlNJT05fVE9LRU5fVFlQRVMsby5mb250RmFtaWx5LG8uZm9udFdlaWdodCxvLnRleHRDYXNlLG8udGV4dERlY29yYXRpb25dLHQudG9rZW5UeXBlSXNSZWZlcmVuY2FibGU9ZT0+dC5SRUZFUkVOQ0FCTEVfVE9LRU5fVFlQRVMuaW5jbHVkZXMoZSksdC5EVF9UT0tFTl9UWVBFUz1bby5jb2xvcixvLnNoYWRvdyxvLmdyYWRpZW50LG8udHlwb2dyYXBoeSxvLmJvcmRlciwuLi50LkRJTUVOU0lPTl9UT0tFTl9UWVBFUyxvLmZvbnRGYW1pbHksby5mb250V2VpZ2h0LG8uc3RyaW5nLC4uLnQuT1BUSU9OX1RPS0VOX1RZUEVTXX0sNDA2ODooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9jc0VudGl0eUdyb3VwQmVoYXZpb3I9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuZ3JvdXA9XCJHcm91cFwiLGUudGFicz1cIlRhYnNcIn0ob3x8KHQuRG9jc0VudGl0eUdyb3VwQmVoYXZpb3I9bz17fSkpfSw0MjkwOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Xb3Jrc3BhY2VTdWJzY3JpcHRpb25Qcm9kdWN0Q29kZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5mcmVlPVwiZnJlZVwiLGUudGVhbT1cInRlYW1cIixlLnRlYW1UZXN0PVwidGVhbV90ZXN0XCIsZS5jb21wYW55PVwiY29tcGFueVwiLGUuZW50ZXJwcmlzZT1cImVudGVycHJpc2VcIn0ob3x8KHQuV29ya3NwYWNlU3Vic2NyaXB0aW9uUHJvZHVjdENvZGU9bz17fSkpfSw0Mzc5OihlLHQpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5TdXBlcm5vdmFFcnJvcj12b2lkIDA7Y2xhc3MgbyBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKGUsdCxvLHIsbixpLGEpe3N1cGVyKGUpLHRoaXMuY29kZT10LHRoaXMuc3RhdHVzPW8sdGhpcy5mb3JtRXJyb3JzPXIsdGhpcy5yZXF1ZXN0SWQ9bix0aGlzLnNlcnZlclRpbWU9aSx0aGlzLnVybD1hfXN0YXRpYyBmcm9tTmV0d29ya1Jlc3BvbnNlKGUsdCxyKXt2YXIgbixpLGE7cmV0dXJuIG5ldyBvKGUubWVzc2FnZSxlLmVycm9yQ29kZXx8ZS5yZWFzb258fGUubGFiZWx8fG51bGwsZS5jb2RlfHx0LG51bGwhPT0obj1lLmZvcm1FcnJvcnMpJiZ2b2lkIDAhPT1uP246bnVsbCxudWxsIT09KGk9ZS5yZXF1ZXN0SWQpJiZ2b2lkIDAhPT1pP2k6bnVsbCxudWxsIT09KGE9ZS5zZXJ2ZXJUaW1lKSYmdm9pZCAwIT09YT9hOm51bGwscil9c3RhdGljIGZyb21Ob05ldHdvcmtSZXNwb25zZShlKXtyZXR1cm4gbmV3IG8oXCJObyBuZXR3b3JrIG9yIGludGVybmV0IHVucmVhY2hhYmxlXCIsXCJOT19ORVRXT1JLXCIsMTIxNjMsbnVsbCwobmV3IERhdGUpLnRvSVNPU3RyaW5nKCksbnVsbCxlKX1zdGF0aWMgZnJvbUNvZGUoZSl7cmV0dXJuIG5ldyBvKGUsZSxudWxsLG51bGwsbnVsbCxudWxsLG51bGwpfXN0YXRpYyBmcm9tTWVzc2FnZShlKXtyZXR1cm4gbmV3IG8oZSxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCl9aXNGaWVsZEVycm9yZWQoZSl7cmV0dXJuIHZvaWQgMCE9PXRoaXMuZm9ybUVycm9ycy5maW5kKCh0PT50LmtleT09PWUpKX1lcnJvckZvckZpZWxkKGUpe3ZhciB0O3JldHVybiBudWxsIT09KHQ9dGhpcy5mb3JtRXJyb3JzLmZpbmQoKHQ9PnQua2V5PT09ZSkpKSYmdm9pZCAwIT09dD90Om51bGx9dG9TdHJpbmcoKXt2YXIgZSx0LG8scixuLGk7cmV0dXJuYFxcbiAgICBFcnJvciB0aHJvd246ICR7dGhpcy5tZXNzYWdlfVxcblxcbiAgICBDb2RlOiAke251bGwhPT0oZT10aGlzLmNvZGUpJiZ2b2lkIDAhPT1lP2U6XCItXCJ9XFxuXFxuICAgIFN0YXR1czogJHtudWxsIT09KHQ9dGhpcy5zdGF0dXMpJiZ2b2lkIDAhPT10P3Q6XCItXCJ9XFxuXFxuICAgIEZpZWxkczogJHtKU09OLnN0cmluZ2lmeSh0aGlzLmZvcm1FcnJvcnMsbnVsbCwyKX1cXG5cXG4gICAgUmVxdWVzdCBJRDogJHtudWxsIT09KG89dGhpcy5yZXF1ZXN0SWQpJiZ2b2lkIDAhPT1vP286XCItXCJ9XFxuXFxuICAgIFNlcnZlciB0aW1lOiAke251bGwhPT0ocj10aGlzLnNlcnZlclRpbWUpJiZ2b2lkIDAhPT1yP3I6XCItXCJ9XFxuXFxuICAgIE5ldHdvcmsgVVJMOiAke251bGwhPT0obj10aGlzLnVybCkmJnZvaWQgMCE9PW4/bjpcIi1cIn1cXG5cXG4gICAgU3RhY2s6ICR7bnVsbCE9PShpPXRoaXMuc3RhY2spJiZ2b2lkIDAhPT1pP2k6XCItXCJ9XFxuICAgIGB9dG9IdW1hblJlYWRhYmxlKCl7cmV0dXJuYCR7dGhpcy5tZXNzYWdlfSR7dGhpcy5yZXF1ZXN0SWQ/YCAocmVxdWVzdCAke3RoaXMucmVxdWVzdElkfSlgOlwiXCJ9YH19dC5TdXBlcm5vdmFFcnJvcj1vfSw0NTQ2OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5BTExfQk9SREVSX1NUWUxFUz10LkJvcmRlclN0eWxlPXZvaWQgMCxmdW5jdGlvbihlKXtlLmRhc2hlZD1cIkRhc2hlZFwiLGUuZG90dGVkPVwiRG90dGVkXCIsZS5zb2xpZD1cIlNvbGlkXCIsZS5ncm9vdmU9XCJHcm9vdmVcIn0ob3x8KHQuQm9yZGVyU3R5bGU9bz17fSkpLHQuQUxMX0JPUkRFUl9TVFlMRVM9W28uZGFzaGVkLG8uZG90dGVkLG8uc29saWQsby5ncm9vdmVdfSw0NjUyOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Tb3VyY2VUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLmZpZ21hPVwiRmlnbWFcIixlLnRva2VuU3R1ZGlvPVwiVG9rZW5TdHVkaW9cIixlLmZpZ21hVmFyaWFibGVzUGx1Z2luPVwiRmlnbWFWYXJpYWJsZXNQbHVnaW5cIn0ob3x8KHQuU291cmNlVHlwZT1vPXt9KSl9LDUxMDI6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3VtZW50YXRpb25MZWdhY3lDYWxsb3V0VHlwZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5pbmZvPVwiSW5mb1wiLGUuc3VjY2Vzcz1cIlN1Y2Nlc3NcIixlLndhcm5pbmc9XCJXYXJuaW5nXCIsZS5lcnJvcj1cIkVycm9yXCJ9KG98fCh0LkRvY3VtZW50YXRpb25MZWdhY3lDYWxsb3V0VHlwZT1vPXt9KSl9LDU1MDM6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LldvcmtzcGFjZVN1YnNjcmlwdGlvblBsYW5JbnRlcnZhbD12b2lkIDAsZnVuY3Rpb24oZSl7ZS55ZWFybHk9XCJ5ZWFybHlcIixlLm1vbnRobHk9XCJtb250aGx5XCJ9KG98fCh0LldvcmtzcGFjZVN1YnNjcmlwdGlvblBsYW5JbnRlcnZhbD1vPXt9KSl9LDU2NTE6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3NCbG9ja0JlaGF2aW9yRGF0YVR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuaXRlbT1cIkl0ZW1cIixlLnRva2VuPVwiVG9rZW5cIixlLmFzc2V0PVwiQXNzZXRcIixlLmNvbXBvbmVudD1cIkNvbXBvbmVudFwiLGUuZmlnbWFOb2RlPVwiRmlnbWFOb2RlXCIsZS5maWdtYUNvbXBvbmVudD1cIkZpZ21hQ29tcG9uZW50XCJ9KG98fCh0LkRvY3NCbG9ja0JlaGF2aW9yRGF0YVR5cGU9bz17fSkpfSw1NjczOihlLHQpPT57dmFyIG87ZnVuY3Rpb24gcihlKXtzd2l0Y2goZS50eXBlKXtjYXNlIG8uZG9jdW1lbnRhdGlvbkl0ZW06cmV0dXJuYEBwYWdlOiR7ZS5kb2N1bWVudGF0aW9uSXRlbUlkfWA7Y2FzZSBvLnBhZ2VIZWFkaW5nOnJldHVybmBAcGFnZToke2UuZG9jdW1lbnRhdGlvbkl0ZW1JZH0jJHtlLnBhZ2VIZWFkaW5nSWR9YDtjYXNlIG8udXJsOnJldHVybiBlLnVybDtkZWZhdWx0OnJldHVybn19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5saW5rQXR0cmlidXRlVG9Eb2NzTGluaz10LmRvY3NMaW5rVG9MaW5rQXR0cmlidXRlcz10LmRvY3NMaW5rVG9Vcmw9dC5Eb2NzTGlua1JlZlR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuZG9jdW1lbnRhdGlvbkl0ZW09XCJEb2N1bWVudGF0aW9uSXRlbVwiLGUucGFnZUhlYWRpbmc9XCJQYWdlSGVhZGluZ1wiLGUudXJsPVwiVXJsXCJ9KG98fCh0LkRvY3NMaW5rUmVmVHlwZT1vPXt9KSksdC5kb2NzTGlua1RvVXJsPXIsdC5kb2NzTGlua1RvTGlua0F0dHJpYnV0ZXM9ZnVuY3Rpb24oZSl7Y29uc3QgdD1yKGUpO2lmKHQpcmV0dXJue2hyZWY6dCx0YXJnZXQ6ZS5vcGVuSW5OZXdUYWI/XCJfYmxhbmtcIjpcIl9zZWxmXCJ9fSx0LmxpbmtBdHRyaWJ1dGVUb0RvY3NMaW5rPWZ1bmN0aW9uKGUsdCl7aWYoIWUpcmV0dXJuO2NvbnN0IHI9XCJfYmxhbmtcIj09PXQ7aWYoZS5zdGFydHNXaXRoKFwiQHBhZ2U6XCIpKXtpZihlLmluY2x1ZGVzKFwiI1wiKSl7Y29uc3RbdCxuXT1lLnJlcGxhY2UoXCJAcGFnZTpcIixcIlwiKS5zcGxpdChcIiNcIik7cmV0dXJue3R5cGU6by5wYWdlSGVhZGluZyxkb2N1bWVudGF0aW9uSXRlbUlkOnQscGFnZUhlYWRpbmdJZDpuLG9wZW5Jbk5ld1RhYjpyfX1yZXR1cm57dHlwZTpvLmRvY3VtZW50YXRpb25JdGVtLGRvY3VtZW50YXRpb25JdGVtSWQ6ZS5yZXBsYWNlKFwiQHBhZ2U6XCIsXCJcIiksb3BlbkluTmV3VGFiOnJ9fXJldHVybnt0eXBlOm8udXJsLHVybDplLG9wZW5Jbk5ld1RhYjpyfX19LDU2OTU6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkN1c3RvbURvbWFpbkVycm9yQ29kZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5nZW5lcmFsRXJyb3I9XCJHZW5lcmFsRXJyb3JcIixlLmRuc05vdENvbmZpZ3VyZWQ9XCJETlNOb3RDb25maWd1cmVkXCIsZS5tYWludGVuYW5jZT1cIk1haW50ZW5hbmNlXCJ9KG98fCh0LkN1c3RvbURvbWFpbkVycm9yQ29kZT1vPXt9KSl9LDU4ODM6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eU9wdGlvblJlbmRlcmluZ1N0eWxlPXZvaWQgMCxmdW5jdGlvbihlKXtlLnNlZ21lbnRlZENvbnRyb2w9XCJTZWdtZW50ZWRDb250cm9sXCIsZS50b2dnbGVCdXR0b249XCJUb2dnbGVCdXR0b25cIixlLnNlbGVjdD1cIlNlbGVjdFwiLGUuY2hlY2tib3g9XCJDaGVja2JveFwifShvfHwodC5Eb2NzQmxvY2tJdGVtUHJvcGVydHlPcHRpb25SZW5kZXJpbmdTdHlsZT1vPXt9KSl9LDU5NjM6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3NCbG9ja09wdGlvblJlbmRlcmluZ1N0eWxlPXZvaWQgMCxmdW5jdGlvbihlKXtlLnNlZ21lbnRlZENvbnRyb2w9XCJTZWdtZW50ZWRDb250cm9sXCIsZS50b2dnbGVCdXR0b249XCJUb2dnbGVCdXR0b25cIixlLnNlbGVjdD1cIlNlbGVjdFwiLGUuY2hlY2tib3g9XCJDaGVja2JveFwifShvfHwodC5Eb2NzQmxvY2tPcHRpb25SZW5kZXJpbmdTdHlsZT1vPXt9KSl9LDYxNDE6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LlZpc2liaWxpdHlUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLnZpc2libGU9XCJWaXNpYmxlXCIsZS5oaWRkZW49XCJIaWRkZW5cIn0ob3x8KHQuVmlzaWJpbGl0eVR5cGU9bz17fSkpfSw2MTkyOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5CbHVyVHlwZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5sYXllcj1cIkxheWVyXCIsZS5iYWNrZ3JvdW5kPVwiQmFja2dyb3VuZFwifShvfHwodC5CbHVyVHlwZT1vPXt9KSl9LDYyOTg6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LldvcmtzcGFjZU5QTVJlZ2lzdHJ5QXV0aFR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuYmFzaWM9XCJCYXNpY1wiLGUuYmVhcmVyPVwiQmVhcmVyXCJ9KG98fCh0LldvcmtzcGFjZU5QTVJlZ2lzdHJ5QXV0aFR5cGU9bz17fSkpfSw2NjQ0OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2NzQmxvY2tSaWNoVGV4dFByb3BlcnR5U3R5bGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UudGl0bGUxPVwiVGl0bGUxXCIsZS50aXRsZTI9XCJUaXRsZTJcIixlLnRpdGxlMz1cIlRpdGxlM1wiLGUudGl0bGU0PVwiVGl0bGU0XCIsZS50aXRsZTU9XCJUaXRsZTVcIixlLnF1b3RlPVwiUXVvdGVcIixlLmNhbGxvdXQ9XCJDYWxsb3V0XCIsZS5kZWZhdWx0PVwiRGVmYXVsdFwifShvfHwodC5Eb2NzQmxvY2tSaWNoVGV4dFByb3BlcnR5U3R5bGU9bz17fSkpfSw2ODM5OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2NzQmxvY2tJdGVtUHJvcGVydHlUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLnJpY2hUZXh0PVwiUmljaFRleHRcIixlLm11bHRpUmljaFRleHQ9XCJNdWx0aVJpY2hUZXh0XCIsZS50ZXh0PVwiVGV4dFwiLGUucmljaFRleHRFZGl0b3I9XCJSaWNoVGV4dEVkaXRvclwiLGUuYm9vbGVhbj1cIkJvb2xlYW5cIixlLm51bWJlcj1cIk51bWJlclwiLGUuc2luZ2xlU2VsZWN0PVwiU2luZ2xlU2VsZWN0XCIsZS5tdWx0aVNlbGVjdD1cIk11bHRpU2VsZWN0XCIsZS5pbWFnZT1cIkltYWdlXCIsZS50b2tlbj1cIlRva2VuXCIsZS50b2tlblR5cGU9XCJUb2tlblR5cGVcIixlLnRva2VuUHJvcGVydHk9XCJUb2tlblByb3BlcnR5XCIsZS5jb21wb25lbnQ9XCJDb21wb25lbnRcIixlLmNvbXBvbmVudFByb3BlcnR5PVwiQ29tcG9uZW50UHJvcGVydHlcIixlLmFzc2V0PVwiQXNzZXRcIixlLmFzc2V0UHJvcGVydHk9XCJBc3NldFByb3BlcnR5XCIsZS5lbWJlZFVSTD1cIkVtYmVkVVJMXCIsZS51cmw9XCJVUkxcIixlLm1hcmtkb3duPVwiTWFya2Rvd25cIixlLmNvZGU9XCJDb2RlXCIsZS5jb2RlU2FuZGJveD1cIkNvZGVTYW5kYm94XCIsZS50YWJsZT1cIlRhYmxlXCIsZS5kaXZpZGVyPVwiRGl2aWRlclwiLGUuc3Rvcnlib29rPVwiU3Rvcnlib29rXCIsZS5jb2xvcj1cIkNvbG9yXCIsZS5maWdtYU5vZGU9XCJGaWdtYU5vZGVcIixlLmZpZ21hQ29tcG9uZW50PVwiRmlnbWFDb21wb25lbnRcIn0ob3x8KHQuRG9jc0Jsb2NrSXRlbVByb3BlcnR5VHlwZT1vPXt9KSl9LDcwNDA6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LlRleHREZWNvcmF0aW9uPXZvaWQgMCxmdW5jdGlvbihlKXtlLm9yaWdpbmFsPVwiTm9uZVwiLGUudW5kZXJsaW5lPVwiVW5kZXJsaW5lXCIsZS5zdHJpa2V0aHJvdWdoPVwiU3RyaWtldGhyb3VnaFwifShvfHwodC5UZXh0RGVjb3JhdGlvbj1vPXt9KSl9LDcyOTE6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3NCbG9ja0l0ZW1WYXJpYW50TGF5b3V0V2lkdGg9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuYzE9XCIxXCIsZS5jMj1cIjJcIixlLmMzPVwiM1wiLGUuYzQ9XCI0XCIsZS5jNT1cIjVcIixlLmM2PVwiNlwiLGUuYzc9XCI3XCIsZS5jOD1cIjhcIixlLmM5PVwiOVwiLGUuYzEwPVwiMTBcIixlLmMxMT1cIjExXCIsZS5jMTI9XCIxMlwifShvfHwodC5Eb2NzQmxvY2tJdGVtVmFyaWFudExheW91dFdpZHRoPW89e30pKX0sNzM3OTooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9jdW1lbnRhdGlvbkxlZ2FjeUl0ZW1UeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLmdyb3VwPVwiR3JvdXBcIixlLnBhZ2U9XCJQYWdlXCJ9KG98fCh0LkRvY3VtZW50YXRpb25MZWdhY3lJdGVtVHlwZT1vPXt9KSl9LDc0NzY6KGUsdCk9Pnt2YXIgbyxyO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuVGV4dEFsaWdubWVudD10LkFsaWdubWVudD12b2lkIDAsZnVuY3Rpb24oZSl7ZS5sZWZ0PVwiTGVmdFwiLGUuY2VudGVyPVwiQ2VudGVyXCIsZS5zdHJldGNoPVwiU3RyZXRjaFwifShvfHwodC5BbGlnbm1lbnQ9bz17fSkpLGZ1bmN0aW9uKGUpe2UubGVmdD1cIkxlZnRcIixlLmNlbnRlcj1cIkNlbnRlclwiLGUucmlnaHQ9XCJSaWdodFwifShyfHwodC5UZXh0QWxpZ25tZW50PXI9e30pKX0sNzQ3OTooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9jc0Jsb2NrSXRlbVByb3BlcnR5VGV4dFN0eWxlPXZvaWQgMCxmdW5jdGlvbihlKXtlLnNtYWxsPVwiU21hbGxcIixlLnJlZ3VsYXI9XCJSZWd1bGFyXCIsZS5ib2xkPVwiQm9sZFwifShvfHwodC5Eb2NzQmxvY2tJdGVtUHJvcGVydHlUZXh0U3R5bGU9bz17fSkpfSw3NzM3OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5DdXN0b21Eb21haW5TdGF0ZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5pbml0aWFsPVwiSW5pdGlhbFwiLGUuZG9tYWluU2V0dXBJblByb2dyZXNzPVwiRG9tYWluU2V0dXBJblByb2dyZXNzXCIsZS5kb21haW5TZXR1cEZhaWxlZD1cIkRvbWFpblNldHVwRmFpbGVkXCIsZS5kb21haW5TZXR1cHNTdWNjZXM9XCJEb21haW5TZXR1cFN1Y2Nlc3NcIixlLnNzbFNldHVwSW5Qcm9ncmVzcz1cIlNTTFNldHVwSW5Qcm9ncmVzc1wiLGUuc3NsU2V0dXBGYWlsZWQ9XCJTU0xTZXR1cEZhaWxlZFwiLGUuc3NsU2V0dXBTdWNjZXNzPVwiU1NMU2V0dXBTdWNjZXNzXCJ9KG98fCh0LkN1c3RvbURvbWFpblN0YXRlPW89e30pKX0sNzk2ODooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuV29ya3NwYWNlTlBNUmVnaXN0cnlUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLm5wbUpTPVwiTlBNSlNcIixlLmdpdEh1Yj1cIkdpdEh1YlwiLGUuYXp1cmVEZXZPcHM9XCJBenVyZURldk9wc1wiLGUuYXJ0aWZhY3Rvcnk9XCJBcnRpZmFjdG9yeVwiLGUuY3VzdG9tPVwiQ3VzdG9tXCJ9KG98fCh0LldvcmtzcGFjZU5QTVJlZ2lzdHJ5VHlwZT1vPXt9KSl9LDc5NzE6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3NTZWN0aW9uVHlwZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5wbGFpbj1cIlBsYWluXCIsZS50YWJzPVwiVGFic1wifShvfHwodC5Eb2NzU2VjdGlvblR5cGU9bz17fSkpfSw4MDQyOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5JbXBvcnRXYXJuaW5nVHlwZT12b2lkIDAsZnVuY3Rpb24oZSl7ZS5VbnN1cHBvcnRlZEZpbGw9XCJVbnN1cHBvcnRlZEZpbGxcIixlLlVuc3VwcG9ydGVkU3Ryb2tlPVwiVW5zdXBwb3J0ZWRTdHJva2VcIixlLlVuc3VwcG9ydGVkRWZmZWN0PVwiVW5zdXBwb3J0ZWRFZmZlY3RcIixlLlN0eWxlTm90QXBwbGllZD1cIlN0eWxlTm90QXBwbGllZFwiLGUuTm9QdWJsaXNoZWRTdHlsZXM9XCJOb1B1Ymxpc2hlZFN0eWxlc1wiLGUuTm9QdWJsaXNoZWRDb21wb25lbnRzPVwiTm9QdWJsaXNoZWRDb21wb25lbnRzXCIsZS5Ob1B1Ymxpc2hlZEFzc2V0cz1cIk5vUHVibGlzaGVkQXNzZXRzXCIsZS5Ob1ZlcnNpb25Gb3VuZD1cIk5vVmVyc2lvbkZvdW5kXCIsZS5Db21wb25lbnRIYXNOb1RodW1ibmFpbD1cIkNvbXBvbmVudEhhc05vVGh1bWJuYWlsXCIsZS5EdXBsaWNhdGVJbXBvcnRlZFN0eWxlSWQ9XCJEdXBsaWNhdGVJbXBvcnRlZFN0eWxlSWRcIixlLkR1cGxpY2F0ZUltcG9ydGVkU3R5bGVQYXRoPVwiRHVwbGljYXRlSW1wb3J0ZWRTdHlsZVBhdGhcIixlLk5vUHVibGlzaGVkRWxlbWVudHM9XCJOb1B1Ymxpc2hlZEVsZW1lbnRzXCIsZS5Ob1VucHVibGlzaGVkU3R5bGVzPVwiTm9VbnB1Ymxpc2hlZFN0eWxlc1wifShvfHwodC5JbXBvcnRXYXJuaW5nVHlwZT1vPXt9KSl9LDgwNjE6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eVJpY2hUZXh0U3R5bGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UudGl0bGUxPVwiVGl0bGUxXCIsZS50aXRsZTI9XCJUaXRsZTJcIixlLnRpdGxlMz1cIlRpdGxlM1wiLGUudGl0bGU0PVwiVGl0bGU0XCIsZS50aXRsZTU9XCJUaXRsZTVcIixlLnF1b3RlPVwiUXVvdGVcIixlLmNhbGxvdXQ9XCJDYWxsb3V0XCIsZS5vbD1cIk9MXCIsZS51bD1cIlVMXCJ9KG98fCh0LkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eVJpY2hUZXh0U3R5bGU9bz17fSkpfSw4MDk1OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2NzQmxvY2tJdGVtVmFyaWFudExheW91dFR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UuY29sdW1uPVwiQ29sdW1uXCIsZS5yb3c9XCJSb3dcIn0ob3x8KHQuRG9jc0Jsb2NrSXRlbVZhcmlhbnRMYXlvdXRUeXBlPW89e30pKX0sODYwNzooZSx0KT0+e3ZhciBvO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuTVNfVU5JVFM9dC5QWF9VTklUUz10LlJBV19VTklUUz10LkxJTkVfSEVJR0hUX1VOSVRTPXQuU0laRV9VTklUUz10LlVuaXQ9dm9pZCAwLGZ1bmN0aW9uKGUpe2UucGl4ZWxzPVwiUGl4ZWxzXCIsZS5wZXJjZW50PVwiUGVyY2VudFwiLGUucmVtPVwiUmVtXCIsZS5tcz1cIk1zXCIsZS5yYXc9XCJSYXdcIn0ob3x8KHQuVW5pdD1vPXt9KSksdC5TSVpFX1VOSVRTPVtvLnBpeGVscyxvLnBlcmNlbnQsby5yZW1dLHQuTElORV9IRUlHSFRfVU5JVFM9W28ucGl4ZWxzLG8ucGVyY2VudCxvLnJlbSxvLnJhd10sdC5SQVdfVU5JVFM9W28ucmF3XSx0LlBYX1VOSVRTPVtvLnBpeGVsc10sdC5NU19VTklUUz1bby5tc119LDg3Mzg6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkFzc2V0Rm9ybWF0PXZvaWQgMCxmdW5jdGlvbihlKXtlLnBuZz1cInBuZ1wiLGUucGRmPVwicGRmXCIsZS5zdmc9XCJzdmdcIn0ob3x8KHQuQXNzZXRGb3JtYXQ9bz17fSkpfSw4ODkwOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2NzQmxvY2tJbWFnZVByb3BlcnR5QXNwZWN0UmF0aW89dm9pZCAwLGZ1bmN0aW9uKGUpe2UuYXV0bz1cIkF1dG9cIixlLnNxdWFyZT1cIlNxdWFyZVwiLGUubGFuZHNjYXBlPVwiTGFuZHNjYXBlXCIsZS5wb3J0cmFpdD1cIlBvcnRyYWl0XCIsZS53aWRlPVwiV2lkZVwifShvfHwodC5Eb2NzQmxvY2tJbWFnZVByb3BlcnR5QXNwZWN0UmF0aW89bz17fSkpfSw5MTI1OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5TaGFkb3dUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLmRyb3A9XCJEcm9wXCIsZS5pbm5lcj1cIklubmVyXCJ9KG98fCh0LlNoYWRvd1R5cGU9bz17fSkpfSw5MTMzOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2NzQmxvY2tPcHRpb25Db2xvcj12b2lkIDAsZnVuY3Rpb24oZSl7ZS5ncmVlbj1cIkdyZWVuXCIsZS5yZWQ9XCJSZWRcIixlLnllbGxvdz1cIlllbGxvd1wiLGUuYmx1ZT1cIkJsdWVcIixlLnB1cnBsZT1cIlB1cnBsZVwiLGUub3JhbmdlPVwiT3JhbmdlXCIsZS5waW5rPVwiUGlua1wiLGUudGVhbD1cIlRlYWxcIixlLmdyZXk9XCJHcmV5XCIsZS5saWdodEdyZXk9XCJMaWdodEdyZXlcIixlLmN5YW49XCJDeWFuXCIsZS5mdWNoc2lhPVwiRnVjaHNpYVwifShvfHwodC5Eb2NzQmxvY2tPcHRpb25Db2xvcj1vPXt9KSl9LDkzNzc6KGUsdCk9Pnt2YXIgbztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkRvY3NCbG9ja0l0ZW1FbnRpdHlUeXBlPXZvaWQgMCxmdW5jdGlvbihlKXtlLnRva2VuPVwiVG9rZW5cIixlLnRva2VuR3JvdXA9XCJUb2tlbkdyb3VwXCIsZS5hc3NldD1cIkFzc2V0XCIsZS5hc3NldEdyb3VwPVwiQXNzZXRHcm91cFwiLGUuY29tcG9uZW50PVwiQ29tcG9uZW50XCIsZS5jb21wb25lbnRHcm91cD1cIkNvbXBvbmVudEdyb3VwXCJ9KG98fCh0LkRvY3NCbG9ja0l0ZW1FbnRpdHlUeXBlPW89e30pKX0sOTQ3ODooZSx0LG8pPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5jb252ZXJ0UmVtb3RlVG9Vc2VyUm9sZT10LlVzZXJSb2xlPXZvaWQgMDtjb25zdCByPW8oNDM3OSk7dmFyIG47IWZ1bmN0aW9uKGUpe2Uub3duZXI9XCJPd25lclwiLGUuYWRtaW49XCJBZG1pblwiLGUuY3JlYXRvcj1cIkNyZWF0b3JcIixlLmNvbnRyaWJ1dG9yPVwiQ29udHJpYnV0b3JcIixlLmJpbGxpbmc9XCJCaWxsaW5nXCIsZS52aWV3ZXI9XCJWaWV3ZXJcIn0obnx8KHQuVXNlclJvbGU9bj17fSkpLHQuY29udmVydFJlbW90ZVRvVXNlclJvbGU9ZT0+e3N3aXRjaChlKXtjYXNlXCJPd25lclwiOnJldHVybiBuLm93bmVyO2Nhc2VcIkFkbWluXCI6cmV0dXJuIG4uYWRtaW47Y2FzZVwiQ3JlYXRvclwiOnJldHVybiBuLmNyZWF0b3I7Y2FzZVwiQ29udHJpYnV0b3JcIjpyZXR1cm4gbi5jb250cmlidXRvcjtjYXNlXCJCaWxsaW5nXCI6cmV0dXJuIG4uYmlsbGluZztjYXNlXCJWaWV3ZXJcIjpyZXR1cm4gbi52aWV3ZXI7ZGVmYXVsdDp0aHJvdyByLlN1cGVybm92YUVycm9yLmZyb21NZXNzYWdlKGBVbmtub3duIHJvbGU6ICR7ZX1gKX19fSw5ODk2OihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Eb2N1bWVudGF0aW9uTGVnYWN5SGVhZGluZ1R5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2VbZS5oMT0xXT1cImgxXCIsZVtlLmgyPTJdPVwiaDJcIixlW2UuaDM9M109XCJoM1wifShvfHwodC5Eb2N1bWVudGF0aW9uTGVnYWN5SGVhZGluZ1R5cGU9bz17fSkpfSw5OTMyOihlLHQpPT57dmFyIG87T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5kb2NzSW1hZ2VSZWZUb1VybD10LkRvY3NJbWFnZVJlZlR5cGU9dm9pZCAwLGZ1bmN0aW9uKGUpe2UucmVzb3VyY2U9XCJSZXNvdXJjZVwiLGUuZmlnbWFOb2RlPVwiRmlnbWFOb2RlXCJ9KG98fCh0LkRvY3NJbWFnZVJlZlR5cGU9bz17fSkpLHQuZG9jc0ltYWdlUmVmVG9Vcmw9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuO2lmKGUpc3dpdGNoKGUudHlwZSl7Y2FzZSBvLnJlc291cmNlOnJldHVybiBudWxsPT09KG49ZS5yZXNvdXJjZSl8fHZvaWQgMD09PW4/dm9pZCAwOm4udXJsO2Nhc2Ugby5maWdtYU5vZGU6aWYoIWUuZmlnbWFOb2RlfHwhZS5maWdtYU5vZGUuc291cmNlSWR8fCFlLmZpZ21hTm9kZS5mcmFtZVJlZmVyZW5jZUlkKXJldHVybjtyZXR1cm4gdC5yZXNvdXJjZXMuZ2V0RmlnbWFGcmFtZUhvc3RlZFVybCh7ZGVzaWduU3lzdGVtSWQ6ci5kc0lkLHZlcnNpb25JZDpyLnZlcnNpb25JZH0sZS5maWdtYU5vZGUuZnJhbWVSZWZlcmVuY2VJZCk7ZGVmYXVsdDpyZXR1cm59fX19LHQ9e307ZnVuY3Rpb24gbyhyKXt2YXIgbj10W3JdO2lmKHZvaWQgMCE9PW4pcmV0dXJuIG4uZXhwb3J0czt2YXIgaT10W3JdPXtleHBvcnRzOnt9fTtyZXR1cm4gZVtyXShpLGkuZXhwb3J0cyxvKSxpLmV4cG9ydHN9dmFyIHI9e307KCgpPT57dmFyIGU9cjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxlLlRva2VuVHlwZT1lLlRleHREZWNvcmF0aW9uPWUuVGV4dENhc2U9ZS5TaGFkb3dUeXBlPWUuUmljaFRleHRTcGFuQXR0cmlidXRlVHlwZT1lLkdyYWRpZW50VHlwZT1lLkZyYW1lTGF5b3V0PWUuRnJhbWVBbGlnbm1lbnQ9ZS5JY29uU2V0PWUuU291cmNlVHlwZT1lLkRvY3NJbWFnZVJlZlR5cGU9ZS5Eb2NzTGlua1JlZlR5cGU9ZS5Eb2NzU2VjdGlvblR5cGU9ZS5Eb2NzRW50aXR5VHlwZT1lLkRvY3NFbnRpdHlHcm91cEJlaGF2aW9yPWUuRG9jc0Jsb2NrVGV4dFByb3BlcnR5U3R5bGU9ZS5Eb2NzQmxvY2tSaWNoVGV4dFByb3BlcnR5U3R5bGU9ZS5Eb2NzQmxvY2tPcHRpb25Db2xvcj1lLkRvY3NCbG9ja09wdGlvblJlbmRlcmluZ1N0eWxlPWUuRG9jc0Jsb2NrSXRlbVZhcmlhbnRMYXlvdXRXaWR0aD1lLkRvY3NCbG9ja0l0ZW1WYXJpYW50TGF5b3V0VHlwZT1lLkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eVR5cGU9ZS5Eb2NzQmxvY2tJdGVtUHJvcGVydHlUZXh0U3R5bGU9ZS5Eb2NzQmxvY2tJdGVtUHJvcGVydHlSaWNoVGV4dFN0eWxlPWUuRG9jc0Jsb2NrSXRlbVByb3BlcnR5T3B0aW9uUmVuZGVyaW5nU3R5bGU9ZS5Eb2NzQmxvY2tJdGVtRW50aXR5VHlwZT1lLkRvY3NCbG9ja0ltYWdlUHJvcGVydHlBc3BlY3RSYXRpbz1lLkRvY3NCbG9ja0JlaGF2aW9yU2VsZWN0aW9uVHlwZT1lLkRvY3NCbG9ja0JlaGF2aW9yRGF0YVR5cGU9ZS5Eb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrU2hvcnRjdXRUeXBlPWUuRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VCbG9ja1RoZW1lVHlwZT1lLkRvY3VtZW50YXRpb25MZWdhY3lQYWdlQmxvY2tUeXBlPWUuRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VBc3NldFR5cGU9ZS5Eb2N1bWVudGF0aW9uTGVnYWN5SXRlbVR5cGU9ZS5Eb2N1bWVudGF0aW9uTGVnYWN5SGVhZGluZ1R5cGU9ZS5Eb2N1bWVudGF0aW9uTGVnYWN5R3JvdXBCZWhhdmlvcj1lLkRvY3VtZW50YXRpb25MZWdhY3lDYWxsb3V0VHlwZT1lLkJvcmRlclN0eWxlPWUuQm9yZGVyUG9zaXRpb249ZS5CbHVyVHlwZT1lLkFzc2V0U2NhbGVUeXBlPWUuQXNzZXRTY2FsZT1lLkFzc2V0Rm9ybWF0PWUuQWxpZ25tZW50PWUuQUxMX1RPS0VOX1RZUEVTPWUuQUxMX0JPUkRFUl9TVFlMRVM9ZS5BTExfQk9SREVSX1BPU0lUSU9OUz1lLk9QVElPTl9UT0tFTl9UWVBFUz1lLlNUUklOR19UT0tFTl9UWVBFUz1lLkRJTUVOU0lPTl9UT0tFTl9UWVBFUz12b2lkIDAsZS5QdWxzYXJFeGVjdXRvcj1lLk91dHB1dEZpbGVUeXBlPWUuQ3VzdG9tRG9tYWluU3RhdGU9ZS5DdXN0b21Eb21haW5FcnJvckNvZGU9ZS5JbXBvcnRXYXJuaW5nVHlwZT1lLldvcmtzcGFjZU5QTVJlZ2lzdHJ5VHlwZT1lLldvcmtzcGFjZU5QTVJlZ2lzdHJ5QXV0aFR5cGU9ZS5Xb3Jrc3BhY2VTdWJzY3JpcHRpb25TdGF0dXM9ZS5Xb3Jrc3BhY2VTdWJzY3JpcHRpb25Qcm9kdWN0Q29kZT1lLldvcmtzcGFjZVN1YnNjcmlwdGlvblBsYW5JbnRlcnZhbD1lLlZpc2liaWxpdHlUeXBlPWUuVXNlclJvbGU9ZS5Vbml0PXZvaWQgMDt2YXIgdD1vKDM3ODgpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRElNRU5TSU9OX1RPS0VOX1RZUEVTXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHQuRElNRU5TSU9OX1RPS0VOX1RZUEVTfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiU1RSSU5HX1RPS0VOX1RZUEVTXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHQuU1RSSU5HX1RPS0VOX1RZUEVTfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiT1BUSU9OX1RPS0VOX1RZUEVTXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHQuT1BUSU9OX1RPS0VOX1RZUEVTfX0pO3ZhciBuPW8oMTE2MCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJBTExfQk9SREVSX1BPU0lUSU9OU1wiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBuLkFMTF9CT1JERVJfUE9TSVRJT05TfX0pO3ZhciBpPW8oNDU0Nik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJBTExfQk9SREVSX1NUWUxFU1wiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBpLkFMTF9CT1JERVJfU1RZTEVTfX0pO3ZhciBhPW8oMzc4OCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJBTExfVE9LRU5fVFlQRVNcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYS5BTExfVE9LRU5fVFlQRVN9fSk7dmFyIGM9byg3NDc2KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkFsaWdubWVudFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBjLkFsaWdubWVudH19KTt2YXIgbD1vKDg3MzgpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiQXNzZXRGb3JtYXRcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbC5Bc3NldEZvcm1hdH19KTt2YXIgdT1vKDkxNSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJBc3NldFNjYWxlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHUuQXNzZXRTY2FsZX19KTt2YXIgcz1vKDg5OSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJBc3NldFNjYWxlVHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBzLkFzc2V0U2NhbGVUeXBlfX0pO3ZhciBkPW8oNjE5Mik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJCbHVyVHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBkLkJsdXJUeXBlfX0pO3ZhciBwPW8oMTE2MCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJCb3JkZXJQb3NpdGlvblwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBwLkJvcmRlclBvc2l0aW9ufX0pO3ZhciB5PW8oNDU0Nik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJCb3JkZXJTdHlsZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB5LkJvcmRlclN0eWxlfX0pO3ZhciBtPW8oNTEwMik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2N1bWVudGF0aW9uTGVnYWN5Q2FsbG91dFR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbS5Eb2N1bWVudGF0aW9uTGVnYWN5Q2FsbG91dFR5cGV9fSk7dmFyIFQ9bygyMTIzKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3VtZW50YXRpb25MZWdhY3lHcm91cEJlaGF2aW9yXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFQuRG9jdW1lbnRhdGlvbkxlZ2FjeUdyb3VwQmVoYXZpb3J9fSk7dmFyIHY9byg5ODk2KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3VtZW50YXRpb25MZWdhY3lIZWFkaW5nVHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB2LkRvY3VtZW50YXRpb25MZWdhY3lIZWFkaW5nVHlwZX19KTt2YXIgZj1vKDczNzkpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jdW1lbnRhdGlvbkxlZ2FjeUl0ZW1UeXBlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGYuRG9jdW1lbnRhdGlvbkxlZ2FjeUl0ZW1UeXBlfX0pO3ZhciBnPW8oMTQyMyk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2N1bWVudGF0aW9uTGVnYWN5UGFnZUFzc2V0VHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBnLkRvY3VtZW50YXRpb25MZWdhY3lQYWdlQXNzZXRUeXBlfX0pO3ZhciBQPW8oMTg0Nik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrVHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBQLkRvY3VtZW50YXRpb25MZWdhY3lQYWdlQmxvY2tUeXBlfX0pO3ZhciBiPW8oMTYwMSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrVGhlbWVUeXBlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGIuRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VCbG9ja1RoZW1lVHlwZX19KTt2YXIgUz1vKDI2NTcpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VCbG9ja1Nob3J0Y3V0VHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBTLkRvY3VtZW50YXRpb25MZWdhY3lQYWdlQmxvY2tTaG9ydGN1dFR5cGV9fSk7dmFyIE89byg1NjUxKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3NCbG9ja0JlaGF2aW9yRGF0YVR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gTy5Eb2NzQmxvY2tCZWhhdmlvckRhdGFUeXBlfX0pO3ZhciBfPW8oMzczMyk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2NzQmxvY2tCZWhhdmlvclNlbGVjdGlvblR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gXy5Eb2NzQmxvY2tCZWhhdmlvclNlbGVjdGlvblR5cGV9fSk7dmFyIEQ9byg4ODkwKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3NCbG9ja0ltYWdlUHJvcGVydHlBc3BlY3RSYXRpb1wiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBELkRvY3NCbG9ja0ltYWdlUHJvcGVydHlBc3BlY3RSYXRpb319KTt2YXIgST1vKDkzNzcpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jc0Jsb2NrSXRlbUVudGl0eVR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gSS5Eb2NzQmxvY2tJdGVtRW50aXR5VHlwZX19KTt2YXIgRT1vKDU4ODMpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jc0Jsb2NrSXRlbVByb3BlcnR5T3B0aW9uUmVuZGVyaW5nU3R5bGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gRS5Eb2NzQmxvY2tJdGVtUHJvcGVydHlPcHRpb25SZW5kZXJpbmdTdHlsZX19KTt2YXIgaD1vKDgwNjEpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jc0Jsb2NrSXRlbVByb3BlcnR5UmljaFRleHRTdHlsZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBoLkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eVJpY2hUZXh0U3R5bGV9fSk7dmFyIGs9byg3NDc5KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eVRleHRTdHlsZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBrLkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eVRleHRTdHlsZX19KTt2YXIgTj1vKDY4MzkpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jc0Jsb2NrSXRlbVByb3BlcnR5VHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBOLkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eVR5cGV9fSk7dmFyIEI9byg4MDk1KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3NCbG9ja0l0ZW1WYXJpYW50TGF5b3V0VHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBCLkRvY3NCbG9ja0l0ZW1WYXJpYW50TGF5b3V0VHlwZX19KTt2YXIgTD1vKDcyOTEpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jc0Jsb2NrSXRlbVZhcmlhbnRMYXlvdXRXaWR0aFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBMLkRvY3NCbG9ja0l0ZW1WYXJpYW50TGF5b3V0V2lkdGh9fSk7dmFyIFI9byg1OTYzKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3NCbG9ja09wdGlvblJlbmRlcmluZ1N0eWxlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFIuRG9jc0Jsb2NrT3B0aW9uUmVuZGVyaW5nU3R5bGV9fSk7dmFyIGo9byg5MTMzKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3NCbG9ja09wdGlvbkNvbG9yXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGouRG9jc0Jsb2NrT3B0aW9uQ29sb3J9fSk7dmFyIEM9byg2NjQ0KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3NCbG9ja1JpY2hUZXh0UHJvcGVydHlTdHlsZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBDLkRvY3NCbG9ja1JpY2hUZXh0UHJvcGVydHlTdHlsZX19KTt2YXIgTT1vKDMwNik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2NzQmxvY2tUZXh0UHJvcGVydHlTdHlsZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBNLkRvY3NCbG9ja1RleHRQcm9wZXJ0eVN0eWxlfX0pO3ZhciB4PW8oNDA2OCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2NzRW50aXR5R3JvdXBCZWhhdmlvclwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB4LkRvY3NFbnRpdHlHcm91cEJlaGF2aW9yfX0pO3ZhciBBPW8oMTIzMyk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2NzRW50aXR5VHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBBLkRvY3NFbnRpdHlUeXBlfX0pO3ZhciBGPW8oNzk3MSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJEb2NzU2VjdGlvblR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gRi5Eb2NzU2VjdGlvblR5cGV9fSk7dmFyIHc9byg1NjczKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkRvY3NMaW5rUmVmVHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB3LkRvY3NMaW5rUmVmVHlwZX19KTt2YXIgVT1vKDk5MzIpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiRG9jc0ltYWdlUmVmVHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBVLkRvY3NJbWFnZVJlZlR5cGV9fSk7dmFyIFk9byg0NjUyKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIlNvdXJjZVR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gWS5Tb3VyY2VUeXBlfX0pO3ZhciBXPW8oOTM0KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkljb25TZXRcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gVy5JY29uU2V0fX0pO3ZhciBHPW8oMTI1NSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJGcmFtZUFsaWdubWVudFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBHLkZyYW1lQWxpZ25tZW50fX0pO3ZhciBLPW8oMzcxOCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJGcmFtZUxheW91dFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBLLkZyYW1lTGF5b3V0fX0pO3ZhciBIPW8oMSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJHcmFkaWVudFR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gSC5HcmFkaWVudFR5cGV9fSk7dmFyIFY9bygyNjc0KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIlJpY2hUZXh0U3BhbkF0dHJpYnV0ZVR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gVi5SaWNoVGV4dFNwYW5BdHRyaWJ1dGVUeXBlfX0pO3ZhciAkPW8oOTEyNSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJTaGFkb3dUeXBlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuICQuU2hhZG93VHlwZX19KTt2YXIgcT1vKDkyMik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJUZXh0Q2FzZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBxLlRleHRDYXNlfX0pO3ZhciB6PW8oNzA0MCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJUZXh0RGVjb3JhdGlvblwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB6LlRleHREZWNvcmF0aW9ufX0pO3ZhciBKPW8oMzc4OCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJUb2tlblR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gSi5Ub2tlblR5cGV9fSk7dmFyIFE9byg4NjA3KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIlVuaXRcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUS5Vbml0fX0pO3ZhciBaPW8oOTQ3OCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJVc2VyUm9sZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBaLlVzZXJSb2xlfX0pO3ZhciBYPW8oNjE0MSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJWaXNpYmlsaXR5VHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBYLlZpc2liaWxpdHlUeXBlfX0pO3ZhciBlZT1vKDU1MDMpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiV29ya3NwYWNlU3Vic2NyaXB0aW9uUGxhbkludGVydmFsXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGVlLldvcmtzcGFjZVN1YnNjcmlwdGlvblBsYW5JbnRlcnZhbH19KTt2YXIgdGU9byg0MjkwKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIldvcmtzcGFjZVN1YnNjcmlwdGlvblByb2R1Y3RDb2RlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRlLldvcmtzcGFjZVN1YnNjcmlwdGlvblByb2R1Y3RDb2RlfX0pO3ZhciBvZT1vKDM2MDcpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiV29ya3NwYWNlU3Vic2NyaXB0aW9uU3RhdHVzXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG9lLldvcmtzcGFjZVN1YnNjcmlwdGlvblN0YXR1c319KTt2YXIgcmU9byg2Mjk4KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIldvcmtzcGFjZU5QTVJlZ2lzdHJ5QXV0aFR5cGVcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcmUuV29ya3NwYWNlTlBNUmVnaXN0cnlBdXRoVHlwZX19KTt2YXIgbmU9byg3OTY4KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIldvcmtzcGFjZU5QTVJlZ2lzdHJ5VHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBuZS5Xb3Jrc3BhY2VOUE1SZWdpc3RyeVR5cGV9fSk7dmFyIGllPW8oODA0Mik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJJbXBvcnRXYXJuaW5nVHlwZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBpZS5JbXBvcnRXYXJuaW5nVHlwZX19KTt2YXIgYWU9byg1Njk1KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIkN1c3RvbURvbWFpbkVycm9yQ29kZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBhZS5DdXN0b21Eb21haW5FcnJvckNvZGV9fSk7dmFyIGNlPW8oNzczNyk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJDdXN0b21Eb21haW5TdGF0ZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBjZS5DdXN0b21Eb21haW5TdGF0ZX19KTt2YXIgbGU9bygyODAyKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIk91dHB1dEZpbGVUeXBlXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGxlLk91dHB1dEZpbGVUeXBlfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiUHVsc2FyRXhlY3V0b3JcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbGUuUHVsc2FyRXhlY3V0b3J9fSl9KSgpO3ZhciBuPWV4cG9ydHM7Zm9yKHZhciBpIGluIHIpbltpXT1yW2ldO3IuX19lc01vZHVsZSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KG4sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9KSgpOyIsIi8vIFJlZ2V4cHMgaW52b2x2ZWQgd2l0aCBzcGxpdHRpbmcgd29yZHMgaW4gdmFyaW91cyBjYXNlIGZvcm1hdHMuXG5jb25zdCBTUExJVF9MT1dFUl9VUFBFUl9SRSA9IC8oW1xccHtMbH1cXGRdKShcXHB7THV9KS9ndTtcbmNvbnN0IFNQTElUX1VQUEVSX1VQUEVSX1JFID0gLyhcXHB7THV9KShbXFxwe0x1fV1bXFxwe0xsfV0pL2d1O1xuLy8gVXNlZCB0byBpdGVyYXRlIG92ZXIgdGhlIGluaXRpYWwgc3BsaXQgcmVzdWx0IGFuZCBzZXBhcmF0ZSBudW1iZXJzLlxuY29uc3QgU1BMSVRfU0VQQVJBVEVfTlVNQkVSX1JFID0gLyhcXGQpXFxwe0xsfXwoXFxwe0x9KVxcZC91O1xuLy8gUmVnZXhwIGludm9sdmVkIHdpdGggc3RyaXBwaW5nIG5vbi13b3JkIGNoYXJhY3RlcnMgZnJvbSB0aGUgcmVzdWx0LlxuY29uc3QgREVGQVVMVF9TVFJJUF9SRUdFWFAgPSAvW15cXHB7TH1cXGRdKy9naXU7XG4vLyBUaGUgcmVwbGFjZW1lbnQgdmFsdWUgZm9yIHNwbGl0cy5cbmNvbnN0IFNQTElUX1JFUExBQ0VfVkFMVUUgPSBcIiQxXFwwJDJcIjtcbi8vIFRoZSBkZWZhdWx0IGNoYXJhY3RlcnMgdG8ga2VlcCBhZnRlciB0cmFuc2Zvcm1pbmcgY2FzZS5cbmNvbnN0IERFRkFVTFRfUFJFRklYX1NVRkZJWF9DSEFSQUNURVJTID0gXCJcIjtcbi8qKlxuICogU3BsaXQgYW55IGNhc2VkIGlucHV0IHN0cmluZ3MgaW50byBhbiBhcnJheSBvZiB3b3Jkcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNwbGl0KHZhbHVlKSB7XG4gICAgbGV0IHJlc3VsdCA9IHZhbHVlLnRyaW0oKTtcbiAgICByZXN1bHQgPSByZXN1bHRcbiAgICAgICAgLnJlcGxhY2UoU1BMSVRfTE9XRVJfVVBQRVJfUkUsIFNQTElUX1JFUExBQ0VfVkFMVUUpXG4gICAgICAgIC5yZXBsYWNlKFNQTElUX1VQUEVSX1VQUEVSX1JFLCBTUExJVF9SRVBMQUNFX1ZBTFVFKTtcbiAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZShERUZBVUxUX1NUUklQX1JFR0VYUCwgXCJcXDBcIik7XG4gICAgbGV0IHN0YXJ0ID0gMDtcbiAgICBsZXQgZW5kID0gcmVzdWx0Lmxlbmd0aDtcbiAgICAvLyBUcmltIHRoZSBkZWxpbWl0ZXIgZnJvbSBhcm91bmQgdGhlIG91dHB1dCBzdHJpbmcuXG4gICAgd2hpbGUgKHJlc3VsdC5jaGFyQXQoc3RhcnQpID09PSBcIlxcMFwiKVxuICAgICAgICBzdGFydCsrO1xuICAgIGlmIChzdGFydCA9PT0gZW5kKVxuICAgICAgICByZXR1cm4gW107XG4gICAgd2hpbGUgKHJlc3VsdC5jaGFyQXQoZW5kIC0gMSkgPT09IFwiXFwwXCIpXG4gICAgICAgIGVuZC0tO1xuICAgIHJldHVybiByZXN1bHQuc2xpY2Uoc3RhcnQsIGVuZCkuc3BsaXQoL1xcMC9nKTtcbn1cbi8qKlxuICogU3BsaXQgdGhlIGlucHV0IHN0cmluZyBpbnRvIGFuIGFycmF5IG9mIHdvcmRzLCBzZXBhcmF0aW5nIG51bWJlcnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzcGxpdFNlcGFyYXRlTnVtYmVycyh2YWx1ZSkge1xuICAgIGNvbnN0IHdvcmRzID0gc3BsaXQodmFsdWUpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgd29yZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3Qgd29yZCA9IHdvcmRzW2ldO1xuICAgICAgICBjb25zdCBtYXRjaCA9IFNQTElUX1NFUEFSQVRFX05VTUJFUl9SRS5leGVjKHdvcmQpO1xuICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICAgIGNvbnN0IG9mZnNldCA9IG1hdGNoLmluZGV4ICsgKG1hdGNoWzFdID8/IG1hdGNoWzJdKS5sZW5ndGg7XG4gICAgICAgICAgICB3b3Jkcy5zcGxpY2UoaSwgMSwgd29yZC5zbGljZSgwLCBvZmZzZXQpLCB3b3JkLnNsaWNlKG9mZnNldCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB3b3Jkcztcbn1cbi8qKlxuICogQ29udmVydCBhIHN0cmluZyB0byBzcGFjZSBzZXBhcmF0ZWQgbG93ZXIgY2FzZSAoYGZvbyBiYXJgKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5vQ2FzZShpbnB1dCwgb3B0aW9ucykge1xuICAgIGNvbnN0IFtwcmVmaXgsIHdvcmRzLCBzdWZmaXhdID0gc3BsaXRQcmVmaXhTdWZmaXgoaW5wdXQsIG9wdGlvbnMpO1xuICAgIHJldHVybiAocHJlZml4ICtcbiAgICAgICAgd29yZHMubWFwKGxvd2VyRmFjdG9yeShvcHRpb25zPy5sb2NhbGUpKS5qb2luKG9wdGlvbnM/LmRlbGltaXRlciA/PyBcIiBcIikgK1xuICAgICAgICBzdWZmaXgpO1xufVxuLyoqXG4gKiBDb252ZXJ0IGEgc3RyaW5nIHRvIGNhbWVsIGNhc2UgKGBmb29CYXJgKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNhbWVsQ2FzZShpbnB1dCwgb3B0aW9ucykge1xuICAgIGNvbnN0IFtwcmVmaXgsIHdvcmRzLCBzdWZmaXhdID0gc3BsaXRQcmVmaXhTdWZmaXgoaW5wdXQsIG9wdGlvbnMpO1xuICAgIGNvbnN0IGxvd2VyID0gbG93ZXJGYWN0b3J5KG9wdGlvbnM/LmxvY2FsZSk7XG4gICAgY29uc3QgdXBwZXIgPSB1cHBlckZhY3Rvcnkob3B0aW9ucz8ubG9jYWxlKTtcbiAgICBjb25zdCB0cmFuc2Zvcm0gPSBvcHRpb25zPy5tZXJnZUFtYmlndW91c0NoYXJhY3RlcnNcbiAgICAgICAgPyBjYXBpdGFsQ2FzZVRyYW5zZm9ybUZhY3RvcnkobG93ZXIsIHVwcGVyKVxuICAgICAgICA6IHBhc2NhbENhc2VUcmFuc2Zvcm1GYWN0b3J5KGxvd2VyLCB1cHBlcik7XG4gICAgcmV0dXJuIChwcmVmaXggK1xuICAgICAgICB3b3Jkc1xuICAgICAgICAgICAgLm1hcCgod29yZCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIGlmIChpbmRleCA9PT0gMClcbiAgICAgICAgICAgICAgICByZXR1cm4gbG93ZXIod29yZCk7XG4gICAgICAgICAgICByZXR1cm4gdHJhbnNmb3JtKHdvcmQsIGluZGV4KTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5qb2luKG9wdGlvbnM/LmRlbGltaXRlciA/PyBcIlwiKSArXG4gICAgICAgIHN1ZmZpeCk7XG59XG4vKipcbiAqIENvbnZlcnQgYSBzdHJpbmcgdG8gcGFzY2FsIGNhc2UgKGBGb29CYXJgKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhc2NhbENhc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBbcHJlZml4LCB3b3Jkcywgc3VmZml4XSA9IHNwbGl0UHJlZml4U3VmZml4KGlucHV0LCBvcHRpb25zKTtcbiAgICBjb25zdCBsb3dlciA9IGxvd2VyRmFjdG9yeShvcHRpb25zPy5sb2NhbGUpO1xuICAgIGNvbnN0IHVwcGVyID0gdXBwZXJGYWN0b3J5KG9wdGlvbnM/LmxvY2FsZSk7XG4gICAgY29uc3QgdHJhbnNmb3JtID0gb3B0aW9ucz8ubWVyZ2VBbWJpZ3VvdXNDaGFyYWN0ZXJzXG4gICAgICAgID8gY2FwaXRhbENhc2VUcmFuc2Zvcm1GYWN0b3J5KGxvd2VyLCB1cHBlcilcbiAgICAgICAgOiBwYXNjYWxDYXNlVHJhbnNmb3JtRmFjdG9yeShsb3dlciwgdXBwZXIpO1xuICAgIHJldHVybiBwcmVmaXggKyB3b3Jkcy5tYXAodHJhbnNmb3JtKS5qb2luKG9wdGlvbnM/LmRlbGltaXRlciA/PyBcIlwiKSArIHN1ZmZpeDtcbn1cbi8qKlxuICogQ29udmVydCBhIHN0cmluZyB0byBwYXNjYWwgc25ha2UgY2FzZSAoYEZvb19CYXJgKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhc2NhbFNuYWtlQ2FzZShpbnB1dCwgb3B0aW9ucykge1xuICAgIHJldHVybiBjYXBpdGFsQ2FzZShpbnB1dCwgeyBkZWxpbWl0ZXI6IFwiX1wiLCAuLi5vcHRpb25zIH0pO1xufVxuLyoqXG4gKiBDb252ZXJ0IGEgc3RyaW5nIHRvIGNhcGl0YWwgY2FzZSAoYEZvbyBCYXJgKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNhcGl0YWxDYXNlKGlucHV0LCBvcHRpb25zKSB7XG4gICAgY29uc3QgW3ByZWZpeCwgd29yZHMsIHN1ZmZpeF0gPSBzcGxpdFByZWZpeFN1ZmZpeChpbnB1dCwgb3B0aW9ucyk7XG4gICAgY29uc3QgbG93ZXIgPSBsb3dlckZhY3Rvcnkob3B0aW9ucz8ubG9jYWxlKTtcbiAgICBjb25zdCB1cHBlciA9IHVwcGVyRmFjdG9yeShvcHRpb25zPy5sb2NhbGUpO1xuICAgIHJldHVybiAocHJlZml4ICtcbiAgICAgICAgd29yZHNcbiAgICAgICAgICAgIC5tYXAoY2FwaXRhbENhc2VUcmFuc2Zvcm1GYWN0b3J5KGxvd2VyLCB1cHBlcikpXG4gICAgICAgICAgICAuam9pbihvcHRpb25zPy5kZWxpbWl0ZXIgPz8gXCIgXCIpICtcbiAgICAgICAgc3VmZml4KTtcbn1cbi8qKlxuICogQ29udmVydCBhIHN0cmluZyB0byBjb25zdGFudCBjYXNlIChgRk9PX0JBUmApLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29uc3RhbnRDYXNlKGlucHV0LCBvcHRpb25zKSB7XG4gICAgY29uc3QgW3ByZWZpeCwgd29yZHMsIHN1ZmZpeF0gPSBzcGxpdFByZWZpeFN1ZmZpeChpbnB1dCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIChwcmVmaXggK1xuICAgICAgICB3b3Jkcy5tYXAodXBwZXJGYWN0b3J5KG9wdGlvbnM/LmxvY2FsZSkpLmpvaW4ob3B0aW9ucz8uZGVsaW1pdGVyID8/IFwiX1wiKSArXG4gICAgICAgIHN1ZmZpeCk7XG59XG4vKipcbiAqIENvbnZlcnQgYSBzdHJpbmcgdG8gZG90IGNhc2UgKGBmb28uYmFyYCkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkb3RDYXNlKGlucHV0LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5vQ2FzZShpbnB1dCwgeyBkZWxpbWl0ZXI6IFwiLlwiLCAuLi5vcHRpb25zIH0pO1xufVxuLyoqXG4gKiBDb252ZXJ0IGEgc3RyaW5nIHRvIGtlYmFiIGNhc2UgKGBmb28tYmFyYCkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBrZWJhYkNhc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbm9DYXNlKGlucHV0LCB7IGRlbGltaXRlcjogXCItXCIsIC4uLm9wdGlvbnMgfSk7XG59XG4vKipcbiAqIENvbnZlcnQgYSBzdHJpbmcgdG8gcGF0aCBjYXNlIChgZm9vL2JhcmApLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGF0aENhc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbm9DYXNlKGlucHV0LCB7IGRlbGltaXRlcjogXCIvXCIsIC4uLm9wdGlvbnMgfSk7XG59XG4vKipcbiAqIENvbnZlcnQgYSBzdHJpbmcgdG8gcGF0aCBjYXNlIChgRm9vIGJhcmApLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VudGVuY2VDYXNlKGlucHV0LCBvcHRpb25zKSB7XG4gICAgY29uc3QgW3ByZWZpeCwgd29yZHMsIHN1ZmZpeF0gPSBzcGxpdFByZWZpeFN1ZmZpeChpbnB1dCwgb3B0aW9ucyk7XG4gICAgY29uc3QgbG93ZXIgPSBsb3dlckZhY3Rvcnkob3B0aW9ucz8ubG9jYWxlKTtcbiAgICBjb25zdCB1cHBlciA9IHVwcGVyRmFjdG9yeShvcHRpb25zPy5sb2NhbGUpO1xuICAgIGNvbnN0IHRyYW5zZm9ybSA9IGNhcGl0YWxDYXNlVHJhbnNmb3JtRmFjdG9yeShsb3dlciwgdXBwZXIpO1xuICAgIHJldHVybiAocHJlZml4ICtcbiAgICAgICAgd29yZHNcbiAgICAgICAgICAgIC5tYXAoKHdvcmQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IDApXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zZm9ybSh3b3JkKTtcbiAgICAgICAgICAgIHJldHVybiBsb3dlcih3b3JkKTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5qb2luKG9wdGlvbnM/LmRlbGltaXRlciA/PyBcIiBcIikgK1xuICAgICAgICBzdWZmaXgpO1xufVxuLyoqXG4gKiBDb252ZXJ0IGEgc3RyaW5nIHRvIHNuYWtlIGNhc2UgKGBmb29fYmFyYCkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzbmFrZUNhc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbm9DYXNlKGlucHV0LCB7IGRlbGltaXRlcjogXCJfXCIsIC4uLm9wdGlvbnMgfSk7XG59XG4vKipcbiAqIENvbnZlcnQgYSBzdHJpbmcgdG8gaGVhZGVyIGNhc2UgKGBGb28tQmFyYCkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0cmFpbkNhc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gY2FwaXRhbENhc2UoaW5wdXQsIHsgZGVsaW1pdGVyOiBcIi1cIiwgLi4ub3B0aW9ucyB9KTtcbn1cbmZ1bmN0aW9uIGxvd2VyRmFjdG9yeShsb2NhbGUpIHtcbiAgICByZXR1cm4gbG9jYWxlID09PSBmYWxzZVxuICAgICAgICA/IChpbnB1dCkgPT4gaW5wdXQudG9Mb3dlckNhc2UoKVxuICAgICAgICA6IChpbnB1dCkgPT4gaW5wdXQudG9Mb2NhbGVMb3dlckNhc2UobG9jYWxlKTtcbn1cbmZ1bmN0aW9uIHVwcGVyRmFjdG9yeShsb2NhbGUpIHtcbiAgICByZXR1cm4gbG9jYWxlID09PSBmYWxzZVxuICAgICAgICA/IChpbnB1dCkgPT4gaW5wdXQudG9VcHBlckNhc2UoKVxuICAgICAgICA6IChpbnB1dCkgPT4gaW5wdXQudG9Mb2NhbGVVcHBlckNhc2UobG9jYWxlKTtcbn1cbmZ1bmN0aW9uIGNhcGl0YWxDYXNlVHJhbnNmb3JtRmFjdG9yeShsb3dlciwgdXBwZXIpIHtcbiAgICByZXR1cm4gKHdvcmQpID0+IGAke3VwcGVyKHdvcmRbMF0pfSR7bG93ZXIod29yZC5zbGljZSgxKSl9YDtcbn1cbmZ1bmN0aW9uIHBhc2NhbENhc2VUcmFuc2Zvcm1GYWN0b3J5KGxvd2VyLCB1cHBlcikge1xuICAgIHJldHVybiAod29yZCwgaW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgY2hhcjAgPSB3b3JkWzBdO1xuICAgICAgICBjb25zdCBpbml0aWFsID0gaW5kZXggPiAwICYmIGNoYXIwID49IFwiMFwiICYmIGNoYXIwIDw9IFwiOVwiID8gXCJfXCIgKyBjaGFyMCA6IHVwcGVyKGNoYXIwKTtcbiAgICAgICAgcmV0dXJuIGluaXRpYWwgKyBsb3dlcih3b3JkLnNsaWNlKDEpKTtcbiAgICB9O1xufVxuZnVuY3Rpb24gc3BsaXRQcmVmaXhTdWZmaXgoaW5wdXQsIG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IHNwbGl0Rm4gPSBvcHRpb25zLnNwbGl0ID8/IChvcHRpb25zLnNlcGFyYXRlTnVtYmVycyA/IHNwbGl0U2VwYXJhdGVOdW1iZXJzIDogc3BsaXQpO1xuICAgIGNvbnN0IHByZWZpeENoYXJhY3RlcnMgPSBvcHRpb25zLnByZWZpeENoYXJhY3RlcnMgPz8gREVGQVVMVF9QUkVGSVhfU1VGRklYX0NIQVJBQ1RFUlM7XG4gICAgY29uc3Qgc3VmZml4Q2hhcmFjdGVycyA9IG9wdGlvbnMuc3VmZml4Q2hhcmFjdGVycyA/PyBERUZBVUxUX1BSRUZJWF9TVUZGSVhfQ0hBUkFDVEVSUztcbiAgICBsZXQgcHJlZml4SW5kZXggPSAwO1xuICAgIGxldCBzdWZmaXhJbmRleCA9IGlucHV0Lmxlbmd0aDtcbiAgICB3aGlsZSAocHJlZml4SW5kZXggPCBpbnB1dC5sZW5ndGgpIHtcbiAgICAgICAgY29uc3QgY2hhciA9IGlucHV0LmNoYXJBdChwcmVmaXhJbmRleCk7XG4gICAgICAgIGlmICghcHJlZml4Q2hhcmFjdGVycy5pbmNsdWRlcyhjaGFyKSlcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBwcmVmaXhJbmRleCsrO1xuICAgIH1cbiAgICB3aGlsZSAoc3VmZml4SW5kZXggPiBwcmVmaXhJbmRleCkge1xuICAgICAgICBjb25zdCBpbmRleCA9IHN1ZmZpeEluZGV4IC0gMTtcbiAgICAgICAgY29uc3QgY2hhciA9IGlucHV0LmNoYXJBdChpbmRleCk7XG4gICAgICAgIGlmICghc3VmZml4Q2hhcmFjdGVycy5pbmNsdWRlcyhjaGFyKSlcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBzdWZmaXhJbmRleCA9IGluZGV4O1xuICAgIH1cbiAgICByZXR1cm4gW1xuICAgICAgICBpbnB1dC5zbGljZSgwLCBwcmVmaXhJbmRleCksXG4gICAgICAgIHNwbGl0Rm4oaW5wdXQuc2xpY2UocHJlZml4SW5kZXgsIHN1ZmZpeEluZGV4KSksXG4gICAgICAgIGlucHV0LnNsaWNlKHN1ZmZpeEluZGV4KSxcbiAgICBdO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCIvLyBzdGFydHVwXG4vLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8vIFRoaXMgZW50cnkgbW9kdWxlIGlzIHJlZmVyZW5jZWQgYnkgb3RoZXIgbW9kdWxlcyBzbyBpdCBjYW4ndCBiZSBpbmxpbmVkXG52YXIgX193ZWJwYWNrX2V4cG9ydHNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oXCIuL3NyYy9pbmRleC50c1wiKTtcbiJdLCJuYW1lcyI6WyJlIiwidCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJTdXBlcm5vdmFFcnJvciIsIm8iLCJFcnJvciIsImNvbnN0cnVjdG9yIiwiciIsIm4iLCJpIiwiYSIsInN1cGVyIiwidGhpcyIsImNvZGUiLCJzdGF0dXMiLCJmb3JtRXJyb3JzIiwicmVxdWVzdElkIiwic2VydmVyVGltZSIsInVybCIsImZyb21OZXR3b3JrUmVzcG9uc2UiLCJtZXNzYWdlIiwiZXJyb3JDb2RlIiwicmVhc29uIiwibGFiZWwiLCJmcm9tTm9OZXR3b3JrUmVzcG9uc2UiLCJEYXRlIiwidG9JU09TdHJpbmciLCJmcm9tQ29kZSIsImZyb21NZXNzYWdlIiwiaXNGaWVsZEVycm9yZWQiLCJmaW5kIiwia2V5IiwiZXJyb3JGb3JGaWVsZCIsInRvU3RyaW5nIiwiSlNPTiIsInN0cmluZ2lmeSIsInN0YWNrIiwidG9IdW1hblJlYWRhYmxlIiwiZG9jc0ltYWdlUmVmVG9VcmwiLCJEb2NzSW1hZ2VSZWZUeXBlIiwicmVzb3VyY2UiLCJmaWdtYU5vZGUiLCJ0eXBlIiwic291cmNlSWQiLCJmcmFtZVJlZmVyZW5jZUlkIiwicmVzb3VyY2VzIiwiZ2V0RmlnbWFGcmFtZUhvc3RlZFVybCIsImRlc2lnblN5c3RlbUlkIiwiZHNJZCIsInZlcnNpb25JZCIsImRvY3VtZW50YXRpb25JdGVtIiwiZG9jdW1lbnRhdGlvbkl0ZW1JZCIsInBhZ2VIZWFkaW5nIiwicGFnZUhlYWRpbmdJZCIsImxpbmtBdHRyaWJ1dGVUb0RvY3NMaW5rIiwiZG9jc0xpbmtUb0xpbmtBdHRyaWJ1dGVzIiwiZG9jc0xpbmtUb1VybCIsIkRvY3NMaW5rUmVmVHlwZSIsImhyZWYiLCJ0YXJnZXQiLCJvcGVuSW5OZXdUYWIiLCJzdGFydHNXaXRoIiwiaW5jbHVkZXMiLCJyZXBsYWNlIiwic3BsaXQiLCJEb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrU2hvcnRjdXQiLCJEb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrU2hvcnRjdXRUeXBlIiwiZXh0ZXJuYWwiLCJpbnRlcm5hbCIsInRpdGxlIiwic2hvcnRjdXRUaXRsZUZyb21Nb2RlbCIsImRlc2NyaXB0aW9uIiwic2hvcnRjdXREZXNjcmlwdGlvbkZyb21Nb2RlbCIsInByZXZpZXdVcmwiLCJzaG9ydGN1dFByZXZpZXdVcmxGcm9tTW9kZWwiLCJkb2N1bWVudGF0aW9uSXRlbVByZXZpZXciLCJ2YWxpZCIsImludGVybmFsSWQiLCJleHRlcm5hbFVybCIsImMiLCJsIiwidHJpbSIsImxlbmd0aCIsInVybFByZXZpZXciLCJhc3NldFVybCIsImFzc2V0IiwidGh1bWJuYWlsVXJsIiwiVGV4dEFsaWdubWVudCIsIkFsaWdubWVudCIsImxlZnQiLCJjZW50ZXIiLCJzdHJldGNoIiwicmlnaHQiLCJBc3NldEZvcm1hdCIsInBuZyIsInBkZiIsInN2ZyIsIkFzc2V0U2NhbGUiLCJ4MSIsIngyIiwieDMiLCJ4NCIsIkFzc2V0U2NhbGVUeXBlIiwiYXNwZWN0RmlsbCIsImFzcGVjdEZpdCIsIkJsdXJUeXBlIiwibGF5ZXIiLCJiYWNrZ3JvdW5kIiwiQUxMX0JPUkRFUl9QT1NJVElPTlMiLCJCb3JkZXJQb3NpdGlvbiIsImluc2lkZSIsIm91dHNpZGUiLCJBTExfQk9SREVSX1NUWUxFUyIsIkJvcmRlclN0eWxlIiwiZGFzaGVkIiwiZG90dGVkIiwic29saWQiLCJncm9vdmUiLCJJbXBvcnRXYXJuaW5nVHlwZSIsIlVuc3VwcG9ydGVkRmlsbCIsIlVuc3VwcG9ydGVkU3Ryb2tlIiwiVW5zdXBwb3J0ZWRFZmZlY3QiLCJTdHlsZU5vdEFwcGxpZWQiLCJOb1B1Ymxpc2hlZFN0eWxlcyIsIk5vUHVibGlzaGVkQ29tcG9uZW50cyIsIk5vUHVibGlzaGVkQXNzZXRzIiwiTm9WZXJzaW9uRm91bmQiLCJDb21wb25lbnRIYXNOb1RodW1ibmFpbCIsIkR1cGxpY2F0ZUltcG9ydGVkU3R5bGVJZCIsIkR1cGxpY2F0ZUltcG9ydGVkU3R5bGVQYXRoIiwiTm9QdWJsaXNoZWRFbGVtZW50cyIsIk5vVW5wdWJsaXNoZWRTdHlsZXMiLCJDdXN0b21Eb21haW5FcnJvckNvZGUiLCJnZW5lcmFsRXJyb3IiLCJkbnNOb3RDb25maWd1cmVkIiwibWFpbnRlbmFuY2UiLCJDdXN0b21Eb21haW5TdGF0ZSIsImluaXRpYWwiLCJkb21haW5TZXR1cEluUHJvZ3Jlc3MiLCJkb21haW5TZXR1cEZhaWxlZCIsImRvbWFpblNldHVwc1N1Y2NlcyIsInNzbFNldHVwSW5Qcm9ncmVzcyIsInNzbFNldHVwRmFpbGVkIiwic3NsU2V0dXBTdWNjZXNzIiwiRG9jc0Jsb2NrQmVoYXZpb3JEYXRhVHlwZSIsIml0ZW0iLCJ0b2tlbiIsImNvbXBvbmVudCIsImZpZ21hQ29tcG9uZW50IiwiRG9jc0Jsb2NrQmVoYXZpb3JTZWxlY3Rpb25UeXBlIiwiZW50aXR5IiwiZ3JvdXAiLCJlbnRpdHlBbmRHcm91cCIsIkRvY3NCbG9ja0ltYWdlUHJvcGVydHlBc3BlY3RSYXRpbyIsImF1dG8iLCJzcXVhcmUiLCJsYW5kc2NhcGUiLCJwb3J0cmFpdCIsIndpZGUiLCJEb2NzQmxvY2tJdGVtRW50aXR5VHlwZSIsInRva2VuR3JvdXAiLCJhc3NldEdyb3VwIiwiY29tcG9uZW50R3JvdXAiLCJEb2NzQmxvY2tJdGVtUHJvcGVydHlPcHRpb25SZW5kZXJpbmdTdHlsZSIsInNlZ21lbnRlZENvbnRyb2wiLCJ0b2dnbGVCdXR0b24iLCJzZWxlY3QiLCJjaGVja2JveCIsIkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eVJpY2hUZXh0U3R5bGUiLCJ0aXRsZTEiLCJ0aXRsZTIiLCJ0aXRsZTMiLCJ0aXRsZTQiLCJ0aXRsZTUiLCJxdW90ZSIsImNhbGxvdXQiLCJvbCIsInVsIiwiRG9jc0Jsb2NrSXRlbVByb3BlcnR5VGV4dFN0eWxlIiwic21hbGwiLCJyZWd1bGFyIiwiYm9sZCIsIkRvY3NCbG9ja0l0ZW1Qcm9wZXJ0eVR5cGUiLCJyaWNoVGV4dCIsIm11bHRpUmljaFRleHQiLCJ0ZXh0IiwicmljaFRleHRFZGl0b3IiLCJib29sZWFuIiwibnVtYmVyIiwic2luZ2xlU2VsZWN0IiwibXVsdGlTZWxlY3QiLCJpbWFnZSIsInRva2VuVHlwZSIsInRva2VuUHJvcGVydHkiLCJjb21wb25lbnRQcm9wZXJ0eSIsImFzc2V0UHJvcGVydHkiLCJlbWJlZFVSTCIsIm1hcmtkb3duIiwiY29kZVNhbmRib3giLCJ0YWJsZSIsImRpdmlkZXIiLCJzdG9yeWJvb2siLCJjb2xvciIsIkRvY3NCbG9ja0l0ZW1WYXJpYW50TGF5b3V0VHlwZSIsImNvbHVtbiIsInJvdyIsIkRvY3NCbG9ja0l0ZW1WYXJpYW50TGF5b3V0V2lkdGgiLCJjMSIsImMyIiwiYzMiLCJjNCIsImM1IiwiYzYiLCJjNyIsImM4IiwiYzkiLCJjMTAiLCJjMTEiLCJjMTIiLCJEb2NzQmxvY2tPcHRpb25Db2xvciIsImdyZWVuIiwicmVkIiwieWVsbG93IiwiYmx1ZSIsInB1cnBsZSIsIm9yYW5nZSIsInBpbmsiLCJ0ZWFsIiwiZ3JleSIsImxpZ2h0R3JleSIsImN5YW4iLCJmdWNoc2lhIiwiRG9jc0Jsb2NrT3B0aW9uUmVuZGVyaW5nU3R5bGUiLCJEb2NzQmxvY2tSaWNoVGV4dFByb3BlcnR5U3R5bGUiLCJkZWZhdWx0IiwiRG9jc0Jsb2NrVGV4dFByb3BlcnR5U3R5bGUiLCJkZWZhdWx0Qm9sZCIsImRlZmF1bHRTZW1pYm9sZCIsInNtYWxsQm9sZCIsInNtYWxsU2VtaWJvbGQiLCJjdXN0b20iLCJEb2NzRW50aXR5R3JvdXBCZWhhdmlvciIsInRhYnMiLCJEb2NzRW50aXR5VHlwZSIsInBhZ2UiLCJEb2NzU2VjdGlvblR5cGUiLCJwbGFpbiIsIkRvY3VtZW50YXRpb25MZWdhY3lDYWxsb3V0VHlwZSIsImluZm8iLCJzdWNjZXNzIiwid2FybmluZyIsImVycm9yIiwiRG9jdW1lbnRhdGlvbkxlZ2FjeUdyb3VwQmVoYXZpb3IiLCJEb2N1bWVudGF0aW9uTGVnYWN5SGVhZGluZ1R5cGUiLCJoMSIsImgyIiwiaDMiLCJEb2N1bWVudGF0aW9uTGVnYWN5SXRlbVR5cGUiLCJEb2N1bWVudGF0aW9uTGVnYWN5UGFnZUFzc2V0VHlwZSIsImZpZ21hRnJhbWUiLCJEb2N1bWVudGF0aW9uTGVnYWN5UGFnZUJsb2NrVGhlbWVUeXBlIiwib3ZlcnJpZGUiLCJjb21wYXJpc29uIiwiRG9jdW1lbnRhdGlvbkxlZ2FjeVBhZ2VCbG9ja1R5cGUiLCJoZWFkaW5nIiwidW5vcmRlcmVkTGlzdCIsIm9yZGVyZWRMaXN0IiwidG9rZW5MaXN0Iiwic2hvcnRjdXRzIiwibGluayIsImZpZ21hRW1iZWQiLCJ5b3V0dWJlRW1iZWQiLCJzdG9yeWJvb2tFbWJlZCIsImdlbmVyaWNFbWJlZCIsImZpZ21hRnJhbWVzIiwicmVuZGVyQ29kZSIsImNvbXBvbmVudEFzc2V0cyIsImNvbHVtbkl0ZW0iLCJ0YWJJdGVtIiwidGFibGVDZWxsIiwidGFibGVSb3ciLCJGcmFtZUFsaWdubWVudCIsImZyYW1lSGVpZ2h0IiwiRnJhbWVMYXlvdXQiLCJjMTc1IiwiR3JhZGllbnRUeXBlIiwibGluZWFyIiwicmFkaWFsIiwiYW5ndWxhciIsIkljb25TZXQiLCJjaGVja0NpcmNsZSIsImNyb3NzQ2lyY2xlIiwiYWxlcnQiLCJSaWNoVGV4dFNwYW5BdHRyaWJ1dGVUeXBlIiwiaXRhbGljIiwic3RyaWtldGhyb3VnaCIsIlNoYWRvd1R5cGUiLCJkcm9wIiwiaW5uZXIiLCJTb3VyY2VUeXBlIiwiZmlnbWEiLCJ0b2tlblN0dWRpbyIsImZpZ21hVmFyaWFibGVzUGx1Z2luIiwiVGV4dENhc2UiLCJvcmlnaW5hbCIsInVwcGVyIiwibG93ZXIiLCJjYW1lbCIsInNtYWxsQ2FwcyIsIlRleHREZWNvcmF0aW9uIiwidW5kZXJsaW5lIiwiRFRfVE9LRU5fVFlQRVMiLCJ0b2tlblR5cGVJc1JlZmVyZW5jYWJsZSIsIlJFRkVSRU5DQUJMRV9UT0tFTl9UWVBFUyIsIlJFUExBQ0FCTEVfVE9LRU5fVFlQRVMiLCJ0b2tlblR5cGVJc05vblB1cmUiLCJ0b2tlblR5cGVJc1B1cmUiLCJQVVJFX1RPS0VOX1RZUEVTIiwiQUxMX1RPS0VOX1RZUEVTIiwiTVNfRElNRU5TSU9OX1RPS0VOX1RZUEVTIiwiUkFXX0RJTUVOU0lPTl9UT0tFTl9UWVBFUyIsIkRJTUVOU0lPTl9UT0tFTl9UWVBFUyIsIk9QVElPTl9UT0tFTl9UWVBFUyIsIlNUUklOR19UT0tFTl9UWVBFUyIsIlRva2VuVHlwZSIsInR5cG9ncmFwaHkiLCJzaGFkb3ciLCJib3JkZXIiLCJncmFkaWVudCIsImJsdXIiLCJyYWRpdXMiLCJib3JkZXJXaWR0aCIsImR1cmF0aW9uIiwiZm9udFNpemUiLCJkaW1lbnNpb24iLCJsZXR0ZXJTcGFjaW5nIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJwYXJhZ3JhcGhTcGFjaW5nIiwic2l6ZSIsInNwYWNlIiwiekluZGV4IiwidGV4dERlY29yYXRpb24iLCJ0ZXh0Q2FzZSIsInZpc2liaWxpdHkiLCJmb250RmFtaWx5IiwiZm9udFdlaWdodCIsInN0cmluZyIsInByb2R1Y3RDb3B5IiwiTVNfVU5JVFMiLCJQWF9VTklUUyIsIlJBV19VTklUUyIsIkxJTkVfSEVJR0hUX1VOSVRTIiwiU0laRV9VTklUUyIsIlVuaXQiLCJwaXhlbHMiLCJwZXJjZW50IiwicmVtIiwibXMiLCJyYXciLCJjb252ZXJ0UmVtb3RlVG9Vc2VyUm9sZSIsIlVzZXJSb2xlIiwib3duZXIiLCJhZG1pbiIsImNyZWF0b3IiLCJjb250cmlidXRvciIsImJpbGxpbmciLCJ2aWV3ZXIiLCJWaXNpYmlsaXR5VHlwZSIsInZpc2libGUiLCJoaWRkZW4iLCJXb3Jrc3BhY2VOUE1SZWdpc3RyeUF1dGhUeXBlIiwiYmFzaWMiLCJiZWFyZXIiLCJXb3Jrc3BhY2VOUE1SZWdpc3RyeVR5cGUiLCJucG1KUyIsImdpdEh1YiIsImF6dXJlRGV2T3BzIiwiYXJ0aWZhY3RvcnkiLCJXb3Jrc3BhY2VTdWJzY3JpcHRpb25QbGFuSW50ZXJ2YWwiLCJ5ZWFybHkiLCJtb250aGx5IiwiV29ya3NwYWNlU3Vic2NyaXB0aW9uUHJvZHVjdENvZGUiLCJmcmVlIiwidGVhbSIsInRlYW1UZXN0IiwiY29tcGFueSIsImVudGVycHJpc2UiLCJXb3Jrc3BhY2VTdWJzY3JpcHRpb25TdGF0dXMiLCJhY3RpdmUiLCJncmFjZVBlcmlvZCIsImNhbmNlbGxlZCIsInN1c3BlbmRlZCIsIlB1bHNhckV4ZWN1dG9yIiwiT3V0cHV0RmlsZVR5cGUiLCJjb3B5UmVtb3RlVXJsIiwiYmluYXJ5Iiwic3VwZXJub3ZhIiwibG9jYWwiLCJleHBvcnRzIiwiZW51bWVyYWJsZSIsImdldCIsInUiLCJzIiwiZCIsInAiLCJ5IiwibSIsIlQiLCJ2IiwiZiIsImciLCJQIiwiYiIsIlMiLCJPIiwiXyIsIkQiLCJJIiwiRSIsImgiLCJrIiwiTiIsIkIiLCJMIiwiUiIsImoiLCJDIiwiTSIsIngiLCJBIiwiRiIsInciLCJVIiwiWSIsIlciLCJHIiwiSyIsIkgiLCJWIiwiJCIsInEiLCJ6IiwiSiIsIlEiLCJaIiwiWCIsImVlIiwidGUiLCJvZSIsInJlIiwibmUiLCJpZSIsImFlIiwiY2UiLCJsZSIsIl9fZXNNb2R1bGUiLCJUaGVtZUV4cG9ydFN0eWxlIiwiVEFJTFdJTkRfQUxMT1dFRF9DVVNUT01JWkFUSU9OIiwiVEFJTFdJTkRfVE9LRU5fUFJFRklYRVMiLCJzZGtfZXhwb3J0ZXJzXzEiLCJDb2xvciIsIlR5cG9ncmFwaHkiLCJEaW1lbnNpb24iLCJTaXplIiwiU3BhY2UiLCJPcGFjaXR5IiwiRm9udFNpemUiLCJMaW5lSGVpZ2h0IiwiTGV0dGVyU3BhY2luZyIsIlBhcmFncmFwaFNwYWNpbmciLCJCb3JkZXJXaWR0aCIsIkJvcmRlclJhZGl1cyIsIkR1cmF0aW9uIiwiWkluZGV4IiwiU2hhZG93IiwiQm9yZGVyIiwiR3JhZGllbnQiLCJTdHJpbmciLCJQcm9kdWN0Q29weSIsIkZvbnRGYW1pbHkiLCJGb250V2VpZ2h0IiwiVmlzaWJpbGl0eSIsIkJsdXIiLCJnZXRUb2tlblByZWZpeCIsImlzQWxsb3dlZFRva2VuVHlwZSIsImNvbnZlcnRlZFRva2VuIiwibWFwcGVkVG9rZW5zIiwidG9rZW5Hcm91cHMiLCJuYW1lIiwidG9rZW5WYXJpYWJsZU5hbWUiLCJleHBvcnRfdXRpbHNfMSIsIkNTU0hlbHBlciIsInRva2VuVG9DU1MiLCJhbGxvd1JlZmVyZW5jZXMiLCJfXzEiLCJleHBvcnRDb25maWd1cmF0aW9uIiwidXNlUmVmZXJlbmNlcyIsImRlY2ltYWxzIiwiY29sb3JQcmVjaXNpb24iLCJjb2xvckZvcm1hdCIsImZvcmNlUmVtVW5pdCIsInJlbUJhc2UiLCJ0b2tlblRvVmFyaWFibGVSZWYiLCJ2YWx1ZVRyYW5zZm9ybWVyIiwidW5kZWZpbmVkIiwibWF0Y2giLCJpbmRlbnRTdHJpbmciLCJHZW5lcmFsSGVscGVyIiwiaW5kZW50Iiwib3V0cHV0IiwiZnVsbFBhdGgiLCJ0b2tlblBhdGgiLCJqb2luIiwiZGVidWciLCJwYXRoIiwicHJlZml4Iiwic2hvd0Rlc2NyaXB0aW9ucyIsImJsdXJOYW1lIiwidG9Mb3dlckNhc2UiLCJOYW1pbmdIZWxwZXIiLCJjb2RlU2FmZVZhcmlhYmxlTmFtZSIsIlN0cmluZ0Nhc2UiLCJrZWJhYkNhc2UiLCJkZWZhdWx0c18xIiwiY29uc29sZSIsImxvZyIsImZpbmRSZXBsYWNlIiwidXNlQ29sb3JVdGlsaXR5UHJlZml4ZXMiLCJwYXJlbnQiLCJpZCIsInBhcmVudEdyb3VwSWQiLCJ1dGlsaXR5TmFtZSIsInBhdHRlcm5TdHJpbmciLCJlbnRyaWVzIiwiY29sb3JVdGlsaXR5UHJlZml4ZXMiLCJwYXR0ZXJucyIsIm1hcCIsIm1hdGNoaW5nUGF0dGVybiIsInBhdHRlcm4iLCJwYXR0ZXJuSW5kZXgiLCJmaW5kSW5kZXgiLCJyZW1haW5pbmdQYXRoIiwic2xpY2UiLCJzZWdtZW50cyIsImNsZWFuTmFtZSIsImNvZGVTYWZlVmFyaWFibGVOYW1lRm9yVG9rZW4iLCJzdHlsZU91dHB1dEZpbGUiLCJ0b2tlbnMiLCJ0aGVtZVBhdGgiLCJ0aGVtZSIsImdlbmVyYXRlRW1wdHlGaWxlcyIsInByb2Nlc3NlZFRva2VucyIsImV4cG9ydE9ubHlUaGVtZWRUb2tlbnMiLCJUaGVtZUhlbHBlciIsImZpbHRlclRoZW1lZFRva2VucyIsImZpbHRlciIsInRva2VuXzEiLCJ0b2tlbnNCeVR5cGUiLCJNYXAiLCJmb3JFYWNoIiwiaGFzIiwic2V0IiwicHVzaCIsImNvbnRlbnQiLCJnbG9iYWxQcmVmaXgiLCJBcnJheSIsImZyb20iLCJrZXlzIiwiY3NzVmFyaWFibGVzIiwicmVzZXRSdWxlcyIsImRpc2FibGVBbmltYXRlRGVmYXVsdHMiLCJkaXNhYmxlQmx1ckRlZmF1bHRzIiwiZGlzYWJsZUJvcmRlclJhZGl1c0RlZmF1bHRzIiwiZGlzYWJsZUJyZWFrcG9pbnREZWZhdWx0cyIsImRpc2FibGVDb2xvckRlZmF1bHRzIiwiZGlzYWJsZUNvbnRhaW5lckRlZmF1bHRzIiwiZGlzYWJsZURyb3BTaGFkb3dEZWZhdWx0cyIsImRpc2FibGVGb250RGVmYXVsdHMiLCJkaXNhYmxlRm9udFdlaWdodERlZmF1bHRzIiwiZGlzYWJsZUluc2V0RGVmYXVsdHMiLCJkaXNhYmxlTGVhZGluZ0RlZmF1bHRzIiwiZGlzYWJsZVBlcnNwZWN0aXZlRGVmYXVsdHMiLCJkaXNhYmxlU2hhZG93RGVmYXVsdHMiLCJkaXNhYmxlU3BhY2luZ0RlZmF1bHRzIiwiZGlzYWJsZVRleHREZWZhdWx0cyIsImRpc2FibGVUcmFja2luZ0RlZmF1bHRzIiwidG9rZW5zT2ZUeXBlIiwiY3NzRGVjbGFyYXRpb25zIiwiZGVjbGFyYXRpb24iLCJzaG93R2VuZXJhdGVkRmlsZURpc2NsYWltZXIiLCJhZGREaXNjbGFpbWVyIiwiZGlzY2xhaW1lciIsImZpbGVOYW1lIiwiRmlsZUhlbHBlciIsImNyZWF0ZVRleHRGaWxlIiwicmVsYXRpdmVQYXRoIiwiZ2VuZXJhdGVGaWxlcyIsInRoZW1lcyIsImZpbGVzIiwibWFpbkZpbGUiLCJ0YWlsd2luZF9maWxlXzEiLCJ0aGVtZWRGaWxlIiwiZ2V0VGhlbWVJZGVudGlmaWVyIiwiY29uZmlnXzEiLCJwcm9jZXNzT3V0cHV0RmlsZXMiLCJmaWxlIiwiUHVsc2FyIiwiZXhwb3J0Q29uZmlnIiwiZXhwb3J0IiwiYXN5bmMiLCJzZGsiLCJjb250ZXh0IiwicmVtb3RlVmVyc2lvbklkZW50aWZpZXIiLCJnZXRUb2tlbnMiLCJnZXRUb2tlbkdyb3VwcyIsImJyYW5kSWQiLCJicmFuZCIsImJyYW5kcyIsImdldEJyYW5kcyIsImlkSW5WZXJzaW9uIiwidGhlbWVJZHMiLCJnZXRUb2tlblRoZW1lcyIsInRoZW1lc1RvQXBwbHkiLCJ0aGVtZUlkIiwiZXhwb3J0VGhlbWVzQXMiLCJBcHBseURpcmVjdGx5IiwiY29tcHV0ZVRva2Vuc0J5QXBwbHlpbmdUaGVtZXMiLCJTZXBhcmF0ZUZpbGVzIiwidGhlbWVGaWxlcyIsImZsYXRNYXAiLCJ0aGVtZWRUb2tlbnMiLCJleHBvcnRCYXNlVmFsdWVzIiwiTWVyZ2VkVGhlbWUiLCJiYXNlVG9rZW5GaWxlcyIsIkNvbG9yRm9ybWF0IiwiVG9rZW5IZWxwZXJfMSIsIkNvbG9ySGVscGVyXzEiLCJhbGxUb2tlbnMiLCJvcHRpb25zIiwiY3NzVmFsdWUiLCJjb2xvclRva2VuVmFsdWVUb0NTUyIsImJvcmRlclRva2VuVmFsdWVUb0NTUyIsImdyYWRpZW50VG9rZW5WYWx1ZVRvQ1NTIiwiZGltZW5zaW9uVG9rZW5WYWx1ZVRvQ1NTIiwic2hhZG93VG9rZW5WYWx1ZVRvQ1NTIiwiZm9udFdlaWdodFRva2VuVmFsdWVUb0NTUyIsInN0cmluZ1Rva2VuVmFsdWVUb0NTUyIsIm9wdGlvblRva2VuVmFsdWVUb0NTUyIsImJsdXJUb2tlblZhbHVlVG9DU1MiLCJ0eXBvZ3JhcGh5VG9rZW5WYWx1ZVRvQ1NTIiwiVW5yZWFjaGFibGVDYXNlRXJyb3IiLCJ0cmFuc2Zvcm1lZFZhbHVlIiwiQ29sb3JIZWxwZXIiLCJmb3JtYXR0ZWRDb2xvck9yVmFyaWFibGVOYW1lIiwicmVmZXJlbmNlIiwic3VyZU9wdGlvbmFsUmVmZXJlbmNlIiwicmVmZXJlbmNlZFRva2VuSWQiLCJkYXRhIiwid2lkdGgiLCJib3JkZXJTdHlsZVRvQ1NTIiwic3R5bGUiLCJib3JkZXJQb3NpdGlvblRvQ1NTIiwicG9zaXRpb24iLCJncmFkaWVudHMiLCJncmFkaWVudExheWVyVG9DU1MiLCJkZWx0YVgiLCJyb3VuZFRvRGVjaW1hbHMiLCJ0byIsImRlbHRhWSIsImRlZyIsIk1hdGgiLCJhdGFuMiIsIlBJIiwiZ2V0QW5nbGUiLCJncmFkaWVudFR5cGUiLCJzdG9wcyIsInN0b3AiLCJ1bml0IiwicmVtVmFsdWUiLCJtZWFzdXJlIiwidW5pdFRvQ1NTIiwic2hhZG93cyIsInNoYWRvd0xheWVyVG9DU1MiLCJjb252ZXJ0VG9SZW0iLCJweCIsInNwcmVhZCIsIm5vcm1hbGl6ZVRleHRXZWlnaHQiLCJ3ZWlnaHQiLCJub3JtYWxpemVkVGV4dCIsIm51bWVyaWNXZWlnaHQiLCJwYXJzZUludCIsImlzTmFOIiwib3B0aW9uIiwidGV4dENhc2VUb0NTUyIsInRleHREZWNvcmF0aW9uVG9DU1MiLCJmb250RmFtaWx5UmVmZXJlbmNlIiwiZm9udFdlaWdodFJlZmVyZW5jZSIsImRlY29yYXRpb25SZWZlcmVuY2UiLCJjYXNlUmVmZXJlbmNlIiwiY2FwcyIsImZyYWdtZW50U2l6ZSIsImJvcmRlclN0eWxlIiwiYm9yZGVyUG9zaXRpb24iLCJDb2xvckZvcm1hdF8xIiwiZnVsbFJlZmVyZW5jZU5hbWUiLCJjb2xvclJlZmVyZW5jZU5hbWUiLCJvcGFjaXR5UmVmZXJlbmNlTmFtZSIsImZ1bGxUb2tlbiIsImNvbG9yVG9rZW4iLCJvcGFjaXR5VG9rZW4iLCJmb3JtYXR0ZWRDb2xvciIsInJnYiIsInJnYmEiLCJzbWFydFJnYmEiLCJjb2xvclRvUmdiIiwibm9ybWFsaXplZEludENvbG9yIiwiZm9ybWF0IiwiaGV4NiIsImhleDgiLCJoYXNoSGV4NiIsImhhc2hIZXg4Iiwic21hcnRIZXgiLCJzbWFydEhhc2hIZXgiLCJjb2xvclRvSGV4IiwiaHNsIiwiaHNsYSIsInNtYXJ0SHNsYSIsImNvbG9yVG9Ic2wiLCJub3JtYWxpemVkRnJhY3Rpb25hbENvbG9yIiwic21hcnRVSUNvbG9yIiwiY29sb3JUb1VJQ29sb3IiLCJva2xjaCIsIm9rbGNoYSIsInNtYXJ0T2tsY2giLCJjb2xvclRvT2tsY2giLCJhbHBoYSIsImNvbG9yUmVmUmVwbGFjZSIsIm9wYWNpdHlSZWZSZXBsYWNlIiwicmVzdWx0aW5nUmdiIiwicmVzdWx0aW5nSGV4IiwicEhleCIsInJvdW5kIiwibWF4IiwibWluIiwicmVzdWx0aW5nSHNsIiwiZGVsdGEiLCJyZXN1bHRpbmdVSUNvbG9yIiwiZm9yY2VUcmFpbGluZ1plcm8iLCJtdWx0aXBsaWVyIiwicG93Iiwicm91bmRlZCIsIk51bWJlciIsInRvRml4ZWQiLCJwYXJzZUZsb2F0IiwicGFkU3RhcnQiLCJyZ2JUb09rbGNoIiwibHIiLCJzUkdCdG9MaW5lYXIiLCJsZyIsImxiIiwibG1zX2wiLCJsbXNfbSIsImxtc19zIiwibHAiLCJjYnJ0IiwibXAiLCJzcCIsImxhYl9hIiwibGFiX2IiLCJzcXJ0IiwiY3JlYXRlQ29weVJlbW90ZUZpbGUiLCJjcmVhdGVCaW5hcnlGaWxlIiwiRmlsZU5hbWVIZWxwZXIiLCJlbnN1cmVGaWxlRXh0ZW5zaW9uIiwiZXh0ZW5zaW9uIiwibm9ybWFsaXplZEV4dGVuc2lvbiIsImVuZHNXaXRoIiwicmVwbGFjZUZpbGVFeHRlbnNpb24iLCJvbGRFeHQiLCJuZXdFeHQiLCJub3JtYWxpemVkT2xkRXh0Iiwibm9ybWFsaXplZE5ld0V4dCIsIlJlZ0V4cCIsImdldERlZmF1bHRTdHlsZUZpbGVOYW1lIiwic3BhY2VzIiwicmVwZWF0IiwiU3RyaW5nQ2FzZV8xIiwiY2hhbmdlX2Nhc2VfMSIsImZyYWdtZW50cyIsImlzUm9vdCIsInRva2VuTmFtZVBhcnRzIiwic29ydGVkUGF0dGVybnMiLCJzb3J0IiwicGF0aEFuZE5hbWUiLCJ1bnNoaWZ0IiwiZnJhZ21lbnQiLCJpbmRleCIsInNlbnRlbmNlIiwicmVwbGFjZUFsbCIsImNhbWVsQ2FzZSIsImNhcGl0YWxDYXNlIiwiY29uc3RhbnRDYXNlIiwiZG90Q2FzZSIsInRyYWluQ2FzZSIsIm5vQ2FzZSIsInBhc2NhbENhc2UiLCJwYXRoQ2FzZSIsInNlbnRlbmNlQ2FzZSIsInNuYWtlQ2FzZSIsImZsYXRDYXNlIiwibmFtZUFzQ1NTVmFyUmVmZXJlbmNlIiwibmFtZUFzQ1NTVmFyRGVjbGFyYXRpb24iLCJOYW1pbmdIZWxwZXJfMSIsImhhc1RoZW1lZFRva2VucyIsIm92ZXJyaWRkZW5Ub2tlbklkcyIsIlNldCIsIm92ZXJyaWRkZW5Ub2tlbnMiLCJzb21lIiwic3RyaW5nQ2FzZSIsImlkZW50aWZpZXIiLCJjb2RlTmFtZSIsImdldFRoZW1lTmFtZSIsInJlZmVyZW5jZUlkIiwiVG9rZW5OYW1lVHJhY2tlciIsInRva2VuTmFtZU1hcCIsIm5hbWVUb1Rva2VuTWFwIiwiaGllcmFyY2h5TmFtZU1hcCIsInJlc2V0IiwiY2xlYXIiLCJnZXRTaW1wbGVUb2tlbk5hbWUiLCJmb3JFeHBvcnQiLCJoaWVyYXJjaHlGdWxsS2V5IiwidG9rZW5zQXRMZXZlbCIsImFkZCIsImdldFRva2VuTmFtZSIsImNvdW50ZXIiLCJfX2NyZWF0ZUJpbmRpbmciLCJjcmVhdGUiLCJrMiIsImRlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsIl9fZXhwb3J0U3RhciIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlNQTElUX0xPV0VSX1VQUEVSX1JFIiwiU1BMSVRfVVBQRVJfVVBQRVJfUkUiLCJTUExJVF9TRVBBUkFURV9OVU1CRVJfUkUiLCJERUZBVUxUX1NUUklQX1JFR0VYUCIsIlNQTElUX1JFUExBQ0VfVkFMVUUiLCJERUZBVUxUX1BSRUZJWF9TVUZGSVhfQ0hBUkFDVEVSUyIsInJlc3VsdCIsInN0YXJ0IiwiZW5kIiwiY2hhckF0Iiwic3BsaXRTZXBhcmF0ZU51bWJlcnMiLCJ3b3JkcyIsIndvcmQiLCJleGVjIiwib2Zmc2V0Iiwic3BsaWNlIiwiaW5wdXQiLCJzdWZmaXgiLCJzcGxpdFByZWZpeFN1ZmZpeCIsImxvd2VyRmFjdG9yeSIsImxvY2FsZSIsImRlbGltaXRlciIsInVwcGVyRmFjdG9yeSIsInRyYW5zZm9ybSIsIm1lcmdlQW1iaWd1b3VzQ2hhcmFjdGVycyIsImNhcGl0YWxDYXNlVHJhbnNmb3JtRmFjdG9yeSIsInBhc2NhbENhc2VUcmFuc2Zvcm1GYWN0b3J5IiwicGFzY2FsU25ha2VDYXNlIiwidG9Mb2NhbGVMb3dlckNhc2UiLCJ0b1VwcGVyQ2FzZSIsInRvTG9jYWxlVXBwZXJDYXNlIiwiY2hhcjAiLCJzcGxpdEZuIiwic2VwYXJhdGVOdW1iZXJzIiwicHJlZml4Q2hhcmFjdGVycyIsInN1ZmZpeENoYXJhY3RlcnMiLCJwcmVmaXhJbmRleCIsInN1ZmZpeEluZGV4IiwiY2hhciIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJkZWZpbml0aW9uIiwib2JqIiwicHJvcCIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIl0sInNvdXJjZVJvb3QiOiIifQ==