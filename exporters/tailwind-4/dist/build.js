(()=>{var e={"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js ***!
  \***********************************************************************************/(e,t)=>{(()=>{"use strict";var e={1:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.GradientType=void 0,function(e){e.linear="Linear",e.radial="Radial",e.angular="Angular"}(o||(t.GradientType=o={}))},306:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockTextPropertyStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.default="Default",e.defaultBold="DefaultBold",e.defaultSemibold="DefaultSemibold",e.small="Small",e.smallBold="SmallBold",e.smallSemibold="SmallSemibold",e.custom="Custom"}(o||(t.DocsBlockTextPropertyStyle=o={}))},899:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScaleType=void 0,function(e){e.aspectFill="AspectFill",e.aspectFit="AspectFit"}(o||(t.AssetScaleType=o={}))},915:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScale=void 0,function(e){e.x1="x1",e.x2="x2",e.x3="x3",e.x4="x4"}(o||(t.AssetScale=o={}))},922:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextCase=void 0,function(e){e.original="Original",e.upper="Upper",e.lower="Lower",e.camel="Camel",e.smallCaps="SmallCaps"}(o||(t.TextCase=o={}))},934:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.IconSet=void 0,function(e){e.checkCircle="CheckCircle",e.crossCircle="CrossCircle",e.alert="Alert"}(o||(t.IconSet=o={}))},1160:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_POSITIONS=t.BorderPosition=void 0,function(e){e.inside="Inside",e.center="Center",e.outside="Outside"}(o||(t.BorderPosition=o={})),t.ALL_BORDER_POSITIONS=[o.inside,o.center,o.outside]},1233:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityType=void 0,function(e){e.group="Group",e.page="Page"}(o||(t.DocsEntityType=o={}))},1255:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameAlignment=void 0,function(e){e.frameHeight="FrameHeight",e.center="Center"}(o||(t.FrameAlignment=o={}))},1423:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageAssetType=void 0,function(e){e.image="image",e.figmaFrame="figmaFrame"}(o||(t.DocumentationLegacyPageAssetType=o={}))},1601:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockThemeType=void 0,function(e){e.override="Override",e.comparison="Comparison"}(o||(t.DocumentationLegacyPageBlockThemeType=o={}))},1846:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockType=void 0,function(e){e.text="Text",e.heading="Heading",e.code="Code",e.unorderedList="UnorderedList",e.orderedList="OrderedList",e.quote="Quote",e.callout="Callout",e.divider="Divider",e.image="Image",e.token="Token",e.tokenList="TokenList",e.tokenGroup="TokenGroup",e.shortcuts="Shortcuts",e.link="Link",e.figmaEmbed="FigmaEmbed",e.youtubeEmbed="YoutubeEmbed",e.storybookEmbed="StorybookEmbed",e.genericEmbed="Embed",e.figmaFrames="FigmaFrames",e.custom="Custom",e.renderCode="RenderCode",e.componentAssets="ComponentAssets",e.column="Column",e.columnItem="ColumnItem",e.tabs="Tabs",e.tabItem="TabItem",e.table="Table",e.tableCell="TableCell",e.tableRow="TableRow"}(o||(t.DocumentationLegacyPageBlockType=o={}))},2123:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyGroupBehavior=void 0,function(e){e.group="Group",e.tabs="Tabs"}(o||(t.DocumentationLegacyGroupBehavior=o={}))},2657:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockShortcut=t.DocumentationLegacyPageBlockShortcutType=void 0,function(e){e.external="External",e.internal="Internal"}(o||(t.DocumentationLegacyPageBlockShortcutType=o={})),t.DocumentationLegacyPageBlockShortcut=class{constructor(e){var t;e.url?this.type=o.external:this.type=o.internal,this.title=this.shortcutTitleFromModel(e,this.type),this.description=this.shortcutDescriptionFromModel(e,this.type),this.previewUrl=this.shortcutPreviewUrlFromModel(e),this.type===o.internal&&(null===(t=e.documentationItemPreview)||void 0===t?void 0:t.valid)&&e.documentationItemId?this.internalId=e.documentationItemId:(this.internalId=null,this.type===o.external&&e.url?this.externalUrl=e.url:this.externalUrl=null)}shortcutTitleFromModel(e,t){var r,n,i,a,l;let s=null;return e.title&&e.title.trim().length>0?s=e.title:t===o.internal?s=null!==(n=null===(r=e.documentationItemPreview)||void 0===r?void 0:r.title)&&void 0!==n?n:null:t===o.external&&(s=null!==(l=null!==(a=null===(i=e.urlPreview)||void 0===i?void 0:i.title)&&void 0!==a?a:e.url)&&void 0!==l?l:null),s&&0!==s.trim().length?s:null}shortcutDescriptionFromModel(e,t){var r;let n=null;return e.description&&e.description.trim().length>0?n=e.description:t===o.external&&(n=null===(r=e.urlPreview)||void 0===r?void 0:r.description),n&&0!==n.trim().length?n:null}shortcutPreviewUrlFromModel(e){var t,o,r,n,i;return null!==(i=null!==(r=null!==(t=e.assetUrl)&&void 0!==t?t:null===(o=e.asset)||void 0===o?void 0:o.url)&&void 0!==r?r:null===(n=e.urlPreview)||void 0===n?void 0:n.thumbnailUrl)&&void 0!==i?i:null}}},2674:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.RichTextSpanAttributeType=void 0,function(e){e.bold="Bold",e.italic="Italic",e.link="Link",e.strikethrough="Strikethrough",e.code="Code"}(o||(t.RichTextSpanAttributeType=o={}))},2802:(e,t)=>{var o,r;Object.defineProperty(t,"__esModule",{value:!0}),t.PulsarExecutor=t.OutputFileType=void 0,function(e){e.copyRemoteUrl="copyRemoteUrl",e.text="text",e.binary="binary"}(o||(t.OutputFileType=o={})),function(e){e.supernova="supernova",e.local="local"}(r||(t.PulsarExecutor=r={}))},3607:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionStatus=void 0,function(e){e.active="active",e.gracePeriod="gracePeriod",e.cancelled="cancelled",e.suspended="suspended"}(o||(t.WorkspaceSubscriptionStatus=o={}))},3718:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameLayout=void 0,function(e){e.c8="C8",e.c7="C7",e.c6="C6",e.c5="C5",e.c4="C4",e.c3="C3",e.c2="C2",e.c1="C1",e.c175="C1_75"}(o||(t.FrameLayout=o={}))},3733:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorSelectionType=void 0,function(e){e.entity="Entity",e.group="Group",e.entityAndGroup="EntityAndGroup"}(o||(t.DocsBlockBehaviorSelectionType=o={}))},3788:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DT_TOKEN_TYPES=t.tokenTypeIsReferencable=t.REFERENCABLE_TOKEN_TYPES=t.REPLACABLE_TOKEN_TYPES=t.tokenTypeIsNonPure=t.tokenTypeIsPure=t.PURE_TOKEN_TYPES=t.ALL_TOKEN_TYPES=t.MS_DIMENSION_TOKEN_TYPES=t.RAW_DIMENSION_TOKEN_TYPES=t.DIMENSION_TOKEN_TYPES=t.OPTION_TOKEN_TYPES=t.STRING_TOKEN_TYPES=t.TokenType=void 0,function(e){e.color="Color",e.typography="Typography",e.shadow="Shadow",e.border="Border",e.gradient="Gradient",e.blur="Blur",e.radius="BorderRadius",e.borderWidth="BorderWidth",e.duration="Duration",e.fontSize="FontSize",e.dimension="Dimension",e.letterSpacing="LetterSpacing",e.lineHeight="LineHeight",e.opacity="Opacity",e.paragraphSpacing="ParagraphSpacing",e.size="Size",e.space="Space",e.zIndex="ZIndex",e.textDecoration="TextDecoration",e.textCase="TextCase",e.visibility="Visibility",e.fontFamily="FontFamily",e.fontWeight="FontWeight",e.string="String",e.productCopy="ProductCopy"}(o||(t.TokenType=o={})),t.STRING_TOKEN_TYPES=[o.string,o.productCopy,o.fontFamily,o.fontWeight],t.OPTION_TOKEN_TYPES=[o.textCase,o.textDecoration,o.visibility],t.DIMENSION_TOKEN_TYPES=[o.dimension,o.size,o.space,o.opacity,o.fontSize,o.lineHeight,o.letterSpacing,o.paragraphSpacing,o.borderWidth,o.radius,o.duration,o.zIndex],t.RAW_DIMENSION_TOKEN_TYPES=[o.opacity,o.zIndex],t.MS_DIMENSION_TOKEN_TYPES=[o.duration],t.ALL_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES,o.color,o.gradient,o.border,o.radius,o.shadow,o.typography,o.blur],t.PURE_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.tokenTypeIsPure=e=>t.PURE_TOKEN_TYPES.includes(e),t.tokenTypeIsNonPure=e=>!(0,t.tokenTypeIsPure)(e),t.REPLACABLE_TOKEN_TYPES=[o.color,...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.REFERENCABLE_TOKEN_TYPES=[o.color,...t.DIMENSION_TOKEN_TYPES,o.fontFamily,o.fontWeight,o.textCase,o.textDecoration],t.tokenTypeIsReferencable=e=>t.REFERENCABLE_TOKEN_TYPES.includes(e),t.DT_TOKEN_TYPES=[o.color,o.shadow,o.gradient,o.typography,o.border,...t.DIMENSION_TOKEN_TYPES,o.fontFamily,o.fontWeight,o.string,...t.OPTION_TOKEN_TYPES]},4068:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityGroupBehavior=void 0,function(e){e.group="Group",e.tabs="Tabs"}(o||(t.DocsEntityGroupBehavior=o={}))},4290:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionProductCode=void 0,function(e){e.free="free",e.team="team",e.teamTest="team_test",e.company="company",e.enterprise="enterprise"}(o||(t.WorkspaceSubscriptionProductCode=o={}))},4379:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SupernovaError=void 0;class o extends Error{constructor(e,t,o,r,n,i,a){super(e),this.code=t,this.status=o,this.formErrors=r,this.requestId=n,this.serverTime=i,this.url=a}static fromNetworkResponse(e,t,r){var n,i,a;return new o(e.message,e.errorCode||e.reason||e.label||null,e.code||t,null!==(n=e.formErrors)&&void 0!==n?n:null,null!==(i=e.requestId)&&void 0!==i?i:null,null!==(a=e.serverTime)&&void 0!==a?a:null,r)}static fromNoNetworkResponse(e){return new o("No network or internet unreachable","NO_NETWORK",12163,null,(new Date).toISOString(),null,e)}static fromCode(e){return new o(e,e,null,null,null,null,null)}static fromMessage(e){return new o(e,null,null,null,null,null,null)}isFieldErrored(e){return void 0!==this.formErrors.find((t=>t.key===e))}errorForField(e){var t;return null!==(t=this.formErrors.find((t=>t.key===e)))&&void 0!==t?t:null}toString(){var e,t,o,r,n,i;return`\n    Error thrown: ${this.message}\n\n    Code: ${null!==(e=this.code)&&void 0!==e?e:"-"}\n\n    Status: ${null!==(t=this.status)&&void 0!==t?t:"-"}\n\n    Fields: ${JSON.stringify(this.formErrors,null,2)}\n\n    Request ID: ${null!==(o=this.requestId)&&void 0!==o?o:"-"}\n\n    Server time: ${null!==(r=this.serverTime)&&void 0!==r?r:"-"}\n\n    Network URL: ${null!==(n=this.url)&&void 0!==n?n:"-"}\n\n    Stack: ${null!==(i=this.stack)&&void 0!==i?i:"-"}\n    `}toHumanReadable(){return`${this.message}${this.requestId?` (request ${this.requestId})`:""}`}}t.SupernovaError=o},4546:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_STYLES=t.BorderStyle=void 0,function(e){e.dashed="Dashed",e.dotted="Dotted",e.solid="Solid",e.groove="Groove"}(o||(t.BorderStyle=o={})),t.ALL_BORDER_STYLES=[o.dashed,o.dotted,o.solid,o.groove]},4652:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.SourceType=void 0,function(e){e.figma="Figma",e.tokenStudio="TokenStudio",e.figmaVariablesPlugin="FigmaVariablesPlugin"}(o||(t.SourceType=o={}))},5102:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyCalloutType=void 0,function(e){e.info="Info",e.success="Success",e.warning="Warning",e.error="Error"}(o||(t.DocumentationLegacyCalloutType=o={}))},5503:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionPlanInterval=void 0,function(e){e.yearly="yearly",e.monthly="monthly"}(o||(t.WorkspaceSubscriptionPlanInterval=o={}))},5651:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorDataType=void 0,function(e){e.item="Item",e.token="Token",e.asset="Asset",e.component="Component",e.figmaNode="FigmaNode",e.figmaComponent="FigmaComponent"}(o||(t.DocsBlockBehaviorDataType=o={}))},5673:(e,t)=>{var o;function r(e){switch(e.type){case o.documentationItem:return`@page:${e.documentationItemId}`;case o.pageHeading:return`@page:${e.documentationItemId}#${e.pageHeadingId}`;case o.url:return e.url;default:return}}Object.defineProperty(t,"__esModule",{value:!0}),t.linkAttributeToDocsLink=t.docsLinkToLinkAttributes=t.docsLinkToUrl=t.DocsLinkRefType=void 0,function(e){e.documentationItem="DocumentationItem",e.pageHeading="PageHeading",e.url="Url"}(o||(t.DocsLinkRefType=o={})),t.docsLinkToUrl=r,t.docsLinkToLinkAttributes=function(e){const t=r(e);if(t)return{href:t,target:e.openInNewTab?"_blank":"_self"}},t.linkAttributeToDocsLink=function(e,t){if(!e)return;const r="_blank"===t;if(e.startsWith("@page:")){if(e.includes("#")){const[t,n]=e.replace("@page:","").split("#");return{type:o.pageHeading,documentationItemId:t,pageHeadingId:n,openInNewTab:r}}return{type:o.documentationItem,documentationItemId:e.replace("@page:",""),openInNewTab:r}}return{type:o.url,url:e,openInNewTab:r}}},5695:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainErrorCode=void 0,function(e){e.generalError="GeneralError",e.dnsNotConfigured="DNSNotConfigured",e.maintenance="Maintenance"}(o||(t.CustomDomainErrorCode=o={}))},5883:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyOptionRenderingStyle=void 0,function(e){e.segmentedControl="SegmentedControl",e.toggleButton="ToggleButton",e.select="Select",e.checkbox="Checkbox"}(o||(t.DocsBlockItemPropertyOptionRenderingStyle=o={}))},5963:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionRenderingStyle=void 0,function(e){e.segmentedControl="SegmentedControl",e.toggleButton="ToggleButton",e.select="Select",e.checkbox="Checkbox"}(o||(t.DocsBlockOptionRenderingStyle=o={}))},6141:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.VisibilityType=void 0,function(e){e.visible="Visible",e.hidden="Hidden"}(o||(t.VisibilityType=o={}))},6192:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.BlurType=void 0,function(e){e.layer="Layer",e.background="Background"}(o||(t.BlurType=o={}))},6298:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryAuthType=void 0,function(e){e.basic="Basic",e.bearer="Bearer"}(o||(t.WorkspaceNPMRegistryAuthType=o={}))},6644:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockRichTextPropertyStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.quote="Quote",e.callout="Callout",e.default="Default"}(o||(t.DocsBlockRichTextPropertyStyle=o={}))},6839:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyType=void 0,function(e){e.richText="RichText",e.multiRichText="MultiRichText",e.text="Text",e.richTextEditor="RichTextEditor",e.boolean="Boolean",e.number="Number",e.singleSelect="SingleSelect",e.multiSelect="MultiSelect",e.image="Image",e.token="Token",e.tokenType="TokenType",e.tokenProperty="TokenProperty",e.component="Component",e.componentProperty="ComponentProperty",e.asset="Asset",e.assetProperty="AssetProperty",e.embedURL="EmbedURL",e.url="URL",e.markdown="Markdown",e.code="Code",e.codeSandbox="CodeSandbox",e.table="Table",e.divider="Divider",e.storybook="Storybook",e.color="Color",e.figmaNode="FigmaNode",e.figmaComponent="FigmaComponent"}(o||(t.DocsBlockItemPropertyType=o={}))},7040:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoration=void 0,function(e){e.original="None",e.underline="Underline",e.strikethrough="Strikethrough"}(o||(t.TextDecoration=o={}))},7291:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutWidth=void 0,function(e){e.c1="1",e.c2="2",e.c3="3",e.c4="4",e.c5="5",e.c6="6",e.c7="7",e.c8="8",e.c9="9",e.c10="10",e.c11="11",e.c12="12"}(o||(t.DocsBlockItemVariantLayoutWidth=o={}))},7379:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyItemType=void 0,function(e){e.group="Group",e.page="Page"}(o||(t.DocumentationLegacyItemType=o={}))},7476:(e,t)=>{var o,r;Object.defineProperty(t,"__esModule",{value:!0}),t.TextAlignment=t.Alignment=void 0,function(e){e.left="Left",e.center="Center",e.stretch="Stretch"}(o||(t.Alignment=o={})),function(e){e.left="Left",e.center="Center",e.right="Right"}(r||(t.TextAlignment=r={}))},7479:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyTextStyle=void 0,function(e){e.small="Small",e.regular="Regular",e.bold="Bold"}(o||(t.DocsBlockItemPropertyTextStyle=o={}))},7737:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainState=void 0,function(e){e.initial="Initial",e.domainSetupInProgress="DomainSetupInProgress",e.domainSetupFailed="DomainSetupFailed",e.domainSetupsSucces="DomainSetupSuccess",e.sslSetupInProgress="SSLSetupInProgress",e.sslSetupFailed="SSLSetupFailed",e.sslSetupSuccess="SSLSetupSuccess"}(o||(t.CustomDomainState=o={}))},7968:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryType=void 0,function(e){e.npmJS="NPMJS",e.gitHub="GitHub",e.azureDevOps="AzureDevOps",e.artifactory="Artifactory",e.custom="Custom"}(o||(t.WorkspaceNPMRegistryType=o={}))},7971:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsSectionType=void 0,function(e){e.plain="Plain",e.tabs="Tabs"}(o||(t.DocsSectionType=o={}))},8042:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ImportWarningType=void 0,function(e){e.UnsupportedFill="UnsupportedFill",e.UnsupportedStroke="UnsupportedStroke",e.UnsupportedEffect="UnsupportedEffect",e.StyleNotApplied="StyleNotApplied",e.NoPublishedStyles="NoPublishedStyles",e.NoPublishedComponents="NoPublishedComponents",e.NoPublishedAssets="NoPublishedAssets",e.NoVersionFound="NoVersionFound",e.ComponentHasNoThumbnail="ComponentHasNoThumbnail",e.DuplicateImportedStyleId="DuplicateImportedStyleId",e.DuplicateImportedStylePath="DuplicateImportedStylePath",e.NoPublishedElements="NoPublishedElements",e.NoUnpublishedStyles="NoUnpublishedStyles"}(o||(t.ImportWarningType=o={}))},8061:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyRichTextStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.quote="Quote",e.callout="Callout",e.ol="OL",e.ul="UL"}(o||(t.DocsBlockItemPropertyRichTextStyle=o={}))},8095:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutType=void 0,function(e){e.column="Column",e.row="Row"}(o||(t.DocsBlockItemVariantLayoutType=o={}))},8607:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.MS_UNITS=t.PX_UNITS=t.RAW_UNITS=t.LINE_HEIGHT_UNITS=t.SIZE_UNITS=t.Unit=void 0,function(e){e.pixels="Pixels",e.percent="Percent",e.rem="Rem",e.ms="Ms",e.raw="Raw"}(o||(t.Unit=o={})),t.SIZE_UNITS=[o.pixels,o.percent,o.rem],t.LINE_HEIGHT_UNITS=[o.pixels,o.percent,o.rem,o.raw],t.RAW_UNITS=[o.raw],t.PX_UNITS=[o.pixels],t.MS_UNITS=[o.ms]},8738:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetFormat=void 0,function(e){e.png="png",e.pdf="pdf",e.svg="svg"}(o||(t.AssetFormat=o={}))},8890:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockImagePropertyAspectRatio=void 0,function(e){e.auto="Auto",e.square="Square",e.landscape="Landscape",e.portrait="Portrait",e.wide="Wide"}(o||(t.DocsBlockImagePropertyAspectRatio=o={}))},9125:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ShadowType=void 0,function(e){e.drop="Drop",e.inner="Inner"}(o||(t.ShadowType=o={}))},9133:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionColor=void 0,function(e){e.green="Green",e.red="Red",e.yellow="Yellow",e.blue="Blue",e.purple="Purple",e.orange="Orange",e.pink="Pink",e.teal="Teal",e.grey="Grey",e.lightGrey="LightGrey",e.cyan="Cyan",e.fuchsia="Fuchsia"}(o||(t.DocsBlockOptionColor=o={}))},9377:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemEntityType=void 0,function(e){e.token="Token",e.tokenGroup="TokenGroup",e.asset="Asset",e.assetGroup="AssetGroup",e.component="Component",e.componentGroup="ComponentGroup"}(o||(t.DocsBlockItemEntityType=o={}))},9478:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.convertRemoteToUserRole=t.UserRole=void 0;const r=o(4379);var n;!function(e){e.owner="Owner",e.admin="Admin",e.creator="Creator",e.contributor="Contributor",e.billing="Billing",e.viewer="Viewer"}(n||(t.UserRole=n={})),t.convertRemoteToUserRole=e=>{switch(e){case"Owner":return n.owner;case"Admin":return n.admin;case"Creator":return n.creator;case"Contributor":return n.contributor;case"Billing":return n.billing;case"Viewer":return n.viewer;default:throw r.SupernovaError.fromMessage(`Unknown role: ${e}`)}}},9896:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyHeadingType=void 0,function(e){e[e.h1=1]="h1",e[e.h2=2]="h2",e[e.h3=3]="h3"}(o||(t.DocumentationLegacyHeadingType=o={}))},9932:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.docsImageRefToUrl=t.DocsImageRefType=void 0,function(e){e.resource="Resource",e.figmaNode="FigmaNode"}(o||(t.DocsImageRefType=o={})),t.docsImageRefToUrl=function(e,t,r){var n;if(e)switch(e.type){case o.resource:return null===(n=e.resource)||void 0===n?void 0:n.url;case o.figmaNode:if(!e.figmaNode||!e.figmaNode.sourceId||!e.figmaNode.frameReferenceId)return;return t.resources.getFigmaFrameHostedUrl({designSystemId:r.dsId,versionId:r.versionId},e.figmaNode.frameReferenceId);default:return}}}},o={};function r(t){var n=o[t];if(void 0!==n)return n.exports;var i=o[t]={exports:{}};return e[t](i,i.exports,r),i.exports}var n={};(()=>{var e=n;Object.defineProperty(e,"__esModule",{value:!0}),e.TokenType=e.TextDecoration=e.TextCase=e.ShadowType=e.RichTextSpanAttributeType=e.GradientType=e.FrameLayout=e.FrameAlignment=e.IconSet=e.SourceType=e.DocsImageRefType=e.DocsLinkRefType=e.DocsSectionType=e.DocsEntityType=e.DocsEntityGroupBehavior=e.DocsBlockTextPropertyStyle=e.DocsBlockRichTextPropertyStyle=e.DocsBlockOptionColor=e.DocsBlockOptionRenderingStyle=e.DocsBlockItemVariantLayoutWidth=e.DocsBlockItemVariantLayoutType=e.DocsBlockItemPropertyType=e.DocsBlockItemPropertyTextStyle=e.DocsBlockItemPropertyRichTextStyle=e.DocsBlockItemPropertyOptionRenderingStyle=e.DocsBlockItemEntityType=e.DocsBlockImagePropertyAspectRatio=e.DocsBlockBehaviorSelectionType=e.DocsBlockBehaviorDataType=e.DocumentationLegacyPageBlockShortcutType=e.DocumentationLegacyPageBlockThemeType=e.DocumentationLegacyPageBlockType=e.DocumentationLegacyPageAssetType=e.DocumentationLegacyItemType=e.DocumentationLegacyHeadingType=e.DocumentationLegacyGroupBehavior=e.DocumentationLegacyCalloutType=e.BorderStyle=e.BorderPosition=e.BlurType=e.AssetScaleType=e.AssetScale=e.AssetFormat=e.Alignment=e.ALL_TOKEN_TYPES=e.ALL_BORDER_STYLES=e.ALL_BORDER_POSITIONS=e.OPTION_TOKEN_TYPES=e.STRING_TOKEN_TYPES=e.DIMENSION_TOKEN_TYPES=void 0,e.PulsarExecutor=e.OutputFileType=e.CustomDomainState=e.CustomDomainErrorCode=e.ImportWarningType=e.WorkspaceNPMRegistryType=e.WorkspaceNPMRegistryAuthType=e.WorkspaceSubscriptionStatus=e.WorkspaceSubscriptionProductCode=e.WorkspaceSubscriptionPlanInterval=e.VisibilityType=e.UserRole=e.Unit=void 0;var t=r(3788);Object.defineProperty(e,"DIMENSION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.DIMENSION_TOKEN_TYPES}}),Object.defineProperty(e,"STRING_TOKEN_TYPES",{enumerable:!0,get:function(){return t.STRING_TOKEN_TYPES}}),Object.defineProperty(e,"OPTION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.OPTION_TOKEN_TYPES}});var o=r(1160);Object.defineProperty(e,"ALL_BORDER_POSITIONS",{enumerable:!0,get:function(){return o.ALL_BORDER_POSITIONS}});var i=r(4546);Object.defineProperty(e,"ALL_BORDER_STYLES",{enumerable:!0,get:function(){return i.ALL_BORDER_STYLES}});var a=r(3788);Object.defineProperty(e,"ALL_TOKEN_TYPES",{enumerable:!0,get:function(){return a.ALL_TOKEN_TYPES}});var l=r(7476);Object.defineProperty(e,"Alignment",{enumerable:!0,get:function(){return l.Alignment}});var s=r(8738);Object.defineProperty(e,"AssetFormat",{enumerable:!0,get:function(){return s.AssetFormat}});var c=r(915);Object.defineProperty(e,"AssetScale",{enumerable:!0,get:function(){return c.AssetScale}});var u=r(899);Object.defineProperty(e,"AssetScaleType",{enumerable:!0,get:function(){return u.AssetScaleType}});var p=r(6192);Object.defineProperty(e,"BlurType",{enumerable:!0,get:function(){return p.BlurType}});var d=r(1160);Object.defineProperty(e,"BorderPosition",{enumerable:!0,get:function(){return d.BorderPosition}});var y=r(4546);Object.defineProperty(e,"BorderStyle",{enumerable:!0,get:function(){return y.BorderStyle}});var m=r(5102);Object.defineProperty(e,"DocumentationLegacyCalloutType",{enumerable:!0,get:function(){return m.DocumentationLegacyCalloutType}});var T=r(2123);Object.defineProperty(e,"DocumentationLegacyGroupBehavior",{enumerable:!0,get:function(){return T.DocumentationLegacyGroupBehavior}});var f=r(9896);Object.defineProperty(e,"DocumentationLegacyHeadingType",{enumerable:!0,get:function(){return f.DocumentationLegacyHeadingType}});var g=r(7379);Object.defineProperty(e,"DocumentationLegacyItemType",{enumerable:!0,get:function(){return g.DocumentationLegacyItemType}});var b=r(1423);Object.defineProperty(e,"DocumentationLegacyPageAssetType",{enumerable:!0,get:function(){return b.DocumentationLegacyPageAssetType}});var h=r(1846);Object.defineProperty(e,"DocumentationLegacyPageBlockType",{enumerable:!0,get:function(){return h.DocumentationLegacyPageBlockType}});var S=r(1601);Object.defineProperty(e,"DocumentationLegacyPageBlockThemeType",{enumerable:!0,get:function(){return S.DocumentationLegacyPageBlockThemeType}});var v=r(2657);Object.defineProperty(e,"DocumentationLegacyPageBlockShortcutType",{enumerable:!0,get:function(){return v.DocumentationLegacyPageBlockShortcutType}});var k=r(5651);Object.defineProperty(e,"DocsBlockBehaviorDataType",{enumerable:!0,get:function(){return k.DocsBlockBehaviorDataType}});var P=r(3733);Object.defineProperty(e,"DocsBlockBehaviorSelectionType",{enumerable:!0,get:function(){return P.DocsBlockBehaviorSelectionType}});var C=r(8890);Object.defineProperty(e,"DocsBlockImagePropertyAspectRatio",{enumerable:!0,get:function(){return C.DocsBlockImagePropertyAspectRatio}});var O=r(9377);Object.defineProperty(e,"DocsBlockItemEntityType",{enumerable:!0,get:function(){return O.DocsBlockItemEntityType}});var _=r(5883);Object.defineProperty(e,"DocsBlockItemPropertyOptionRenderingStyle",{enumerable:!0,get:function(){return _.DocsBlockItemPropertyOptionRenderingStyle}});var I=r(8061);Object.defineProperty(e,"DocsBlockItemPropertyRichTextStyle",{enumerable:!0,get:function(){return I.DocsBlockItemPropertyRichTextStyle}});var D=r(7479);Object.defineProperty(e,"DocsBlockItemPropertyTextStyle",{enumerable:!0,get:function(){return D.DocsBlockItemPropertyTextStyle}});var x=r(6839);Object.defineProperty(e,"DocsBlockItemPropertyType",{enumerable:!0,get:function(){return x.DocsBlockItemPropertyType}});var E=r(8095);Object.defineProperty(e,"DocsBlockItemVariantLayoutType",{enumerable:!0,get:function(){return E.DocsBlockItemVariantLayoutType}});var N=r(7291);Object.defineProperty(e,"DocsBlockItemVariantLayoutWidth",{enumerable:!0,get:function(){return N.DocsBlockItemVariantLayoutWidth}});var R=r(5963);Object.defineProperty(e,"DocsBlockOptionRenderingStyle",{enumerable:!0,get:function(){return R.DocsBlockOptionRenderingStyle}});var B=r(9133);Object.defineProperty(e,"DocsBlockOptionColor",{enumerable:!0,get:function(){return B.DocsBlockOptionColor}});var j=r(6644);Object.defineProperty(e,"DocsBlockRichTextPropertyStyle",{enumerable:!0,get:function(){return j.DocsBlockRichTextPropertyStyle}});var L=r(306);Object.defineProperty(e,"DocsBlockTextPropertyStyle",{enumerable:!0,get:function(){return L.DocsBlockTextPropertyStyle}});var M=r(4068);Object.defineProperty(e,"DocsEntityGroupBehavior",{enumerable:!0,get:function(){return M.DocsEntityGroupBehavior}});var F=r(1233);Object.defineProperty(e,"DocsEntityType",{enumerable:!0,get:function(){return F.DocsEntityType}});var w=r(7971);Object.defineProperty(e,"DocsSectionType",{enumerable:!0,get:function(){return w.DocsSectionType}});var A=r(5673);Object.defineProperty(e,"DocsLinkRefType",{enumerable:!0,get:function(){return A.DocsLinkRefType}});var $=r(9932);Object.defineProperty(e,"DocsImageRefType",{enumerable:!0,get:function(){return $.DocsImageRefType}});var H=r(4652);Object.defineProperty(e,"SourceType",{enumerable:!0,get:function(){return H.SourceType}});var U=r(934);Object.defineProperty(e,"IconSet",{enumerable:!0,get:function(){return U.IconSet}});var W=r(1255);Object.defineProperty(e,"FrameAlignment",{enumerable:!0,get:function(){return W.FrameAlignment}});var V=r(3718);Object.defineProperty(e,"FrameLayout",{enumerable:!0,get:function(){return V.FrameLayout}});var G=r(1);Object.defineProperty(e,"GradientType",{enumerable:!0,get:function(){return G.GradientType}});var Y=r(2674);Object.defineProperty(e,"RichTextSpanAttributeType",{enumerable:!0,get:function(){return Y.RichTextSpanAttributeType}});var K=r(9125);Object.defineProperty(e,"ShadowType",{enumerable:!0,get:function(){return K.ShadowType}});var z=r(922);Object.defineProperty(e,"TextCase",{enumerable:!0,get:function(){return z.TextCase}});var q=r(7040);Object.defineProperty(e,"TextDecoration",{enumerable:!0,get:function(){return q.TextDecoration}});var Z=r(3788);Object.defineProperty(e,"TokenType",{enumerable:!0,get:function(){return Z.TokenType}});var J=r(8607);Object.defineProperty(e,"Unit",{enumerable:!0,get:function(){return J.Unit}});var X=r(9478);Object.defineProperty(e,"UserRole",{enumerable:!0,get:function(){return X.UserRole}});var Q=r(6141);Object.defineProperty(e,"VisibilityType",{enumerable:!0,get:function(){return Q.VisibilityType}});var ee=r(5503);Object.defineProperty(e,"WorkspaceSubscriptionPlanInterval",{enumerable:!0,get:function(){return ee.WorkspaceSubscriptionPlanInterval}});var te=r(4290);Object.defineProperty(e,"WorkspaceSubscriptionProductCode",{enumerable:!0,get:function(){return te.WorkspaceSubscriptionProductCode}});var oe=r(3607);Object.defineProperty(e,"WorkspaceSubscriptionStatus",{enumerable:!0,get:function(){return oe.WorkspaceSubscriptionStatus}});var re=r(6298);Object.defineProperty(e,"WorkspaceNPMRegistryAuthType",{enumerable:!0,get:function(){return re.WorkspaceNPMRegistryAuthType}});var ne=r(7968);Object.defineProperty(e,"WorkspaceNPMRegistryType",{enumerable:!0,get:function(){return ne.WorkspaceNPMRegistryType}});var ie=r(8042);Object.defineProperty(e,"ImportWarningType",{enumerable:!0,get:function(){return ie.ImportWarningType}});var ae=r(5695);Object.defineProperty(e,"CustomDomainErrorCode",{enumerable:!0,get:function(){return ae.CustomDomainErrorCode}});var le=r(7737);Object.defineProperty(e,"CustomDomainState",{enumerable:!0,get:function(){return le.CustomDomainState}});var se=r(2802);Object.defineProperty(e,"OutputFileType",{enumerable:!0,get:function(){return se.OutputFileType}}),Object.defineProperty(e,"PulsarExecutor",{enumerable:!0,get:function(){return se.PulsarExecutor}})})();var i=t;for(var a in n)i[a]=n[a];n.__esModule&&Object.defineProperty(i,"__esModule",{value:!0})})()},"./config.ts":
/*!*******************!*\
  !*** ./config.ts ***!
  \*******************/(e,t)=>{"use strict";var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ThemeExportStyle=void 0,function(e){e.ApplyDirectly="applyDirectly",e.SeparateFiles="separateFiles",e.MergedTheme="mergedTheme"}(o||(t.ThemeExportStyle=o={}))},"./src/constants/defaults.ts":
/*!***********************************!*\
  !*** ./src/constants/defaults.ts ***!
  \***********************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TAILWIND_ALLOWED_CUSTOMIZATION=t.TAILWIND_TOKEN_PREFIXES=void 0;const r=o(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js");t.TAILWIND_TOKEN_PREFIXES={Color:"color",Typography:"text",Dimension:"size",Size:"size",Space:"spacing",Opacity:"opacity",FontSize:"text",LineHeight:"leading",LetterSpacing:"tracking",ParagraphSpacing:"paragraph",BorderWidth:"border",BorderRadius:"radius",Duration:"duration",ZIndex:"z",Shadow:"shadow",Border:"border",Gradient:"gradient",String:"string",ProductCopy:"product-copy",FontFamily:"font",FontWeight:"font-weight",TextCase:"text-case",TextDecoration:"text-decoration",Visibility:"visibility",Blur:"blur"},t.TAILWIND_ALLOWED_CUSTOMIZATION=[r.TokenType.color,r.TokenType.space,r.TokenType.size,r.TokenType.fontSize,r.TokenType.lineHeight,r.TokenType.letterSpacing,r.TokenType.radius,r.TokenType.borderWidth,r.TokenType.fontFamily,r.TokenType.fontWeight,r.TokenType.shadow,r.TokenType.opacity,r.TokenType.duration,r.TokenType.zIndex,r.TokenType.blur,r.TokenType.typography,r.TokenType.border]},"./src/content/token.ts":
/*!******************************!*\
  !*** ./src/content/token.ts ***!
  \******************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getTokenPrefix=l,t.isAllowedTokenType=s,t.convertedToken=function(e,t,o){if(!s(e.tokenType))return null;if(e.tokenType===n.TokenType.typography)return function(e,t,o){const a=r.GeneralHelper.indent(i.exportConfiguration.indent);let l="";l+=c(e,a),i.exportConfiguration.showDescriptions&&e.description&&(l+=`${a}/* ${e.description.trim()} */\n`);const s=u(e,o),p=e.value,d=(c,d="")=>{if(p[c]){const y=p[c],m={...y,referencedTokenId:y.referencedTokenId||null},T={fontSize:n.TokenType.fontSize,lineHeight:n.TokenType.lineHeight,letterSpacing:n.TokenType.letterSpacing,fontWeight:n.TokenType.fontWeight,fontFamily:n.TokenType.fontFamily,textDecoration:n.TokenType.textDecoration,textCase:n.TokenType.textCase,paragraphIndent:n.TokenType.paragraphSpacing,paragraphSpacing:n.TokenType.paragraphSpacing};l+=`${a}--${s}${d}: ${r.CSSHelper.tokenToCSS({...e,value:m,tokenType:T[c]},t,{allowReferences:i.exportConfiguration.useReferences,decimals:i.exportConfiguration.colorPrecision,colorFormat:i.exportConfiguration.colorFormat,forceRemUnit:i.exportConfiguration.forceRemUnit,remBase:i.exportConfiguration.remBase,tokenToVariableRef:e=>`var(--${u(e,o)})`})};\n`}};return d("fontSize"),d("lineHeight","--line-height"),d("letterSpacing","--letter-spacing"),d("fontWeight","--font-weight"),l}(e,t,o);let a=u(e,o);const l=r.CSSHelper.tokenToCSS(e,t,{allowReferences:i.exportConfiguration.useReferences,decimals:i.exportConfiguration.colorPrecision,colorFormat:i.exportConfiguration.colorFormat,forceRemUnit:i.exportConfiguration.forceRemUnit,remBase:i.exportConfiguration.remBase,tokenToVariableRef:e=>s(e.tokenType)?`var(--${u(e,o)})`:r.CSSHelper.tokenToCSS(e,t,{allowReferences:!1,decimals:i.exportConfiguration.colorPrecision,colorFormat:i.exportConfiguration.colorFormat,forceRemUnit:i.exportConfiguration.forceRemUnit,remBase:i.exportConfiguration.remBase,tokenToVariableRef:()=>"",valueTransformer:void 0}),valueTransformer:(e,t)=>{if(t.tokenType===n.TokenType.blur){const t=e.match(/^blur\((.*)\)$/);return t?t[1]:e}}}),p=r.GeneralHelper.indent(i.exportConfiguration.indent);let d="";d+=c(e,p),i.exportConfiguration.showDescriptions&&e.description&&(d+=`${p}/* ${e.description.trim()} */\n`);if(e.tokenType===n.TokenType.blur){const t=[...e.tokenPath||[],e.name].join("/").toLowerCase().includes("background")?"backdrop-blur":"blur"===e.name.toLowerCase()?"blur-default":`blur-${e.name}`;a=r.NamingHelper.codeSafeVariableName(t,r.StringCase.kebabCase)}return d+=`${p}--${a}: ${l};`,d},t.tokenVariableName=u;const r=o(/*! @supernovaio/export-utils */"../../utils/dist/index.js"),n=o(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),i=o(/*! .. */"./src/index.ts"),a=o(/*! ../constants/defaults */"./src/constants/defaults.ts");function l(e){return a.TAILWIND_TOKEN_PREFIXES[e]}function s(e){return a.TAILWIND_ALLOWED_CUSTOMIZATION.includes(e)}function c(e,t){if(!i.exportConfiguration.debug)return"";return`${t}/* Path: ${[...e.tokenPath||[],e.name].join("/")} */\n${t}/* Token: ${JSON.stringify({name:e.name,type:e.tokenType,path:e.tokenPath,prefix:l(e.tokenType),value:e.value})} */\n`}function u(e,t){let o=l(e.tokenType);if(i.exportConfiguration.useColorUtilityPrefixes&&e.tokenType===n.TokenType.color){const n=t.find((t=>t.id===e.parentGroupId)),a=e.tokenPath||[],l=[...a,e.name].join("/").toLowerCase();for(const[t,o]of Object.entries(i.exportConfiguration.colorUtilityPrefixes)){const n=o.split(",").map((e=>e.trim().toLowerCase())).find((e=>l.includes(e)));if(n){const o=a.findIndex((e=>e.toLowerCase().includes(n))),l=[...o>=0?a.slice(o+1):a,e.name].join("-").toLowerCase().trim().replace(/^[-\s]+|[-\s]+$/g,"");return r.NamingHelper.codeSafeVariableName(`${t}-color-${l}`,r.StringCase.kebabCase,i.exportConfiguration.findReplace,!0)}}return r.NamingHelper.codeSafeVariableNameForToken(e,r.StringCase.kebabCase,n||null,o,i.exportConfiguration.findReplace)}const a=t.find((t=>t.id===e.parentGroupId));return r.NamingHelper.codeSafeVariableNameForToken(e,r.StringCase.kebabCase,a||null,o,i.exportConfiguration.findReplace)}},"./src/content/typography.ts":
/*!***********************************!*\
  !*** ./src/content/typography.ts ***!
  \***********************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.generateTypographyClass=function(e,t){if(e.tokenType!==n.TokenType.typography)return null;const o="  ";let l="";if(i.exportConfiguration.debug){l+=`${o}/* Path: ${[...e.tokenPath||[],e.name].join("/")} */\n`,l+=`${o}/* Token: ${JSON.stringify({name:e.name,type:e.tokenType,path:e.tokenPath,value:e.value})} */\n`}i.exportConfiguration.showDescriptions&&e.description&&(l+=`${o}/* ${e.description.trim()} */\n`);const s=r.NamingHelper.codeSafeVariableName([...e.tokenPath||[],e.name].join("-"),r.StringCase.kebabCase,i.exportConfiguration.findReplace),c=(0,a.tokenVariableName)(e,t),u=e.value,p=new Map,d={allowReferences:!1,decimals:i.exportConfiguration.colorPrecision,colorFormat:i.exportConfiguration.colorFormat,tokenToVariableRef:()=>"",forceRemUnit:i.exportConfiguration.forceRemUnit,remBase:i.exportConfiguration.remBase};if(l+=`${o}.${s} {\n`,u.fontFamily){const e=u.fontFamily;l+=`${o}  font-family: ${r.CSSHelper.stringTokenValueToCSS(e,p,d)};\n`}l+=`${o}  font-size: var(--${c});\n`,l+=`${o}  font-weight: var(--${c}--font-weight);\n`,u.lineHeight&&(l+=`${o}  line-height: var(--${c}--line-height);\n`);if(l+=`${o}  letter-spacing: var(--${c}--letter-spacing);\n`,u.textDecoration){const e=u.textDecoration;l+=`${o}  text-decoration: ${r.CSSHelper.optionTokenValueToCSS(e,p,d,n.TokenType.textDecoration)};\n`}if(u.textCase){const e=u.textCase;l+=`${o}  text-transform: ${r.CSSHelper.optionTokenValueToCSS(e,p,d,n.TokenType.textCase)};\n`}if(u.paragraphIndent){const e=u.paragraphIndent;l+=`${o}  text-indent: ${r.CSSHelper.dimensionTokenValueToCSS(e,p,d)};\n`}if(u.paragraphSpacing){const e=u.paragraphSpacing;l+=`${o}  margin-bottom: ${r.CSSHelper.dimensionTokenValueToCSS(e,p,d)};\n`}return l+=`${o}}\n`,l};const r=o(/*! @supernovaio/export-utils */"../../utils/dist/index.js"),n=o(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),i=o(/*! .. */"./src/index.ts"),a=o(/*! ./token */"./src/content/token.ts")},"./src/files/tailwind-file.ts":
/*!************************************!*\
  !*** ./src/files/tailwind-file.ts ***!
  \************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.styleOutputFile=function(e,t,o="",s){if(!i.exportConfiguration.generateEmptyFiles&&0===e.length)return null;let c=e;if(o&&s&&i.exportConfiguration.exportOnlyThemedTokens&&(c=r.ThemeHelper.filterThemedTokens(e,s),0===c.length))return null;if(c=c.filter((e=>(0,a.isAllowedTokenType)(e.tokenType))),0===c.length)return null;const u=new Map;c.forEach((e=>{const t=e.tokenType;u.has(t)||u.set(t,[]),u.get(t).push(e)}));const p=new Map(e.map((e=>[e.id,e])));let d="";o||(d=i.exportConfiguration.globalPrefix?`@import "tailwindcss" prefix(${i.exportConfiguration.globalPrefix});\n\n`:'@import "tailwindcss";\n\n');if(i.exportConfiguration.debug){if(d+="/* Debug Information\n",d+=" * Exporter: Tailwind CSS by Supernova\n",d+=` * Theme: ${o||"Base"}\n`,d+=` * Token Count: ${c.length}\n`,d+=` * Token Types: ${Array.from(u.keys()).join(", ")}\n`,d+=` * Color Format: ${i.exportConfiguration.colorFormat}\n`,d+=` * Prefix: ${i.exportConfiguration.globalPrefix||"None"}\n`,d+=` * Find/Replace Rules: ${JSON.stringify(i.exportConfiguration.findReplace)}\n`,i.exportConfiguration.useColorUtilityPrefixes){d+=" * Color Utility Prefixes:\n";for(const[e,t]of Object.entries(i.exportConfiguration.colorUtilityPrefixes)){d+=`    - ${e}: ${t.split(",").map((e=>e.trim())).join(", ")}\n`}}else d+=" * Color Utility Prefixes: Disabled\n";d+=` * Generated: ${(new Date).toISOString()}\n`,d+=" */\n\n"}const y=o&&s?i.exportConfiguration.themeSelector.replace("{theme}",o):i.exportConfiguration.cssSelector;let m="";const T=r.GeneralHelper.indent(i.exportConfiguration.indent),f=[];i.exportConfiguration.disableAllDefaults?f.push("--*: initial;"):(i.exportConfiguration.disableAnimateDefaults&&f.push("--animate-*: initial;"),i.exportConfiguration.disableBlurDefaults&&f.push("--blur-*: initial;"),i.exportConfiguration.disableBorderRadiusDefaults&&f.push("--radius-*: initial;"),i.exportConfiguration.disableBreakpointDefaults&&f.push("--breakpoint-*: initial;"),i.exportConfiguration.disableColorDefaults&&f.push("--color-*: initial;"),i.exportConfiguration.disableContainerDefaults&&f.push("--container-*: initial;"),i.exportConfiguration.disableDropShadowDefaults&&f.push("--drop-shadow-*: initial;"),i.exportConfiguration.disableFontDefaults&&f.push("--font-*: initial;"),i.exportConfiguration.disableFontWeightDefaults&&f.push("--font-weight-*: initial;"),i.exportConfiguration.disableInsetDefaults&&f.push("--inset-*: initial;"),i.exportConfiguration.disableLeadingDefaults&&f.push("--leading-*: initial;"),i.exportConfiguration.disablePerspectiveDefaults&&f.push("--perspective-*: initial;"),i.exportConfiguration.disableShadowDefaults&&f.push("--shadow-*: initial;"),i.exportConfiguration.disableSpacingDefaults&&f.push("--spacing-*: initial;"),i.exportConfiguration.disableTextDefaults&&f.push("--text-*: initial;"),i.exportConfiguration.disableTrackingDefaults&&f.push("--tracking-*: initial;"));f.length>0&&"@theme"===y&&(m+=`\n${T}/* Reset default Tailwind configuration */\n${T}${f.join(`\n${T}`)}\n`);let g="";const b=c.filter((e=>e.tokenType===n.TokenType.typography));b.length>0&&i.exportConfiguration.generateTypographyClasses&&(g="\n@layer components {\n",b.forEach((e=>{const o=(0,l.generateTypographyClass)(e,t);o&&(g+=o)})),g+="}\n");u.forEach(((e,o)=>{m+=`\n${T}/* ${o} */\n`,i.exportConfiguration.debug&&(m+=`${T}/* ${e.length} ${o} tokens */\n`);const r=e.map((e=>(0,a.convertedToken)(e,p,t))).filter((e=>null!==e)).join("\n");m+=r+"\n"}));const h=i.exportConfiguration.useReferences&&c.some((e=>e.value.referencedTokenId&&null!==e.value.referencedTokenId&&void 0!==e.value.referencedTokenId));d+=`${y==="@theme"&&h?"@theme inline":y} {\n${m}}\n`,d+=g,i.exportConfiguration.showGeneratedFileDisclaimer&&(d=r.GeneralHelper.addDisclaimer(i.exportConfiguration.disclaimer,d));const S=o?`tailwind.${o}.css`:"tailwind.css";return r.FileHelper.createTextFile({relativePath:"./",fileName:S,content:d})};const r=o(/*! @supernovaio/export-utils */"../../utils/dist/index.js"),n=o(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),i=o(/*! .. */"./src/index.ts"),a=o(/*! ../content/token */"./src/content/token.ts"),l=o(/*! ../content/typography */"./src/content/typography.ts")},"./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.exportConfiguration=void 0,t.generateFiles=function(e,t,o=[]){const r=[],a=(0,n.styleOutputFile)(e,t);a&&r.push(a);return o.forEach((o=>{const a=(0,n.styleOutputFile)(e,t,i.ThemeHelper.getThemeIdentifier(o),o);a&&r.push(a)})),r};const r=o(/*! ../config */"./config.ts"),n=o(/*! ./files/tailwind-file */"./src/files/tailwind-file.ts"),i=o(/*! @supernovaio/export-utils */"../../utils/dist/index.js"),a=o(/*! ./content/token */"./src/content/token.ts");function l(e){return e.filter((e=>null!==e))}t.exportConfiguration=Pulsar.exportConfig(),Pulsar.export((async(e,o)=>{const s={designSystemId:o.dsId,versionId:o.versionId};let c=await e.tokens.getTokens(s),u=await e.tokens.getTokenGroups(s);if(o.brandId){const t=(await e.brands.getBrands(s)).find((e=>e.id===o.brandId||e.idInVersion===o.brandId));if(!t)throw new Error(`Unable to find brand ${o.brandId}.`);c=c.filter((e=>e.brandId===t.id)),u=u.filter((e=>e.brandId===t.id))}if(o.themeIds&&o.themeIds.length>0){const a=await e.tokens.getTokenThemes(s),p=o.themeIds.map((e=>{const t=a.find((t=>t.id===e||t.idInVersion===e));if(!t)throw new Error(`Unable to find theme ${e}.`);return t}));switch(t.exportConfiguration.exportThemesAs){case r.ThemeExportStyle.ApplyDirectly:return c=e.tokens.computeTokensByApplyingThemes(c,c,p),l([(0,n.styleOutputFile)(c,u)]);case r.ThemeExportStyle.SeparateFiles:const o=p.flatMap((t=>{const o=e.tokens.computeTokensByApplyingThemes(c,c,[t]);return(0,n.styleOutputFile)(o,u,i.ThemeHelper.getThemeIdentifier(t),t)}));return l([t.exportConfiguration.exportBaseValues?(0,n.styleOutputFile)(c,u):null,...o]);case r.ThemeExportStyle.MergedTheme:const a=t.exportConfiguration.exportBaseValues?(0,n.styleOutputFile)(c,u):null,s=e.tokens.computeTokensByApplyingThemes(c,c,p);return l([a,(0,n.styleOutputFile)(s,u,"themed",p[0])])}}if(!o.isPreview&&t.exportConfiguration.writeNameToProperty){const o=new i.WriteTokenPropStore(e,s);await o.writeTokenProperties(t.exportConfiguration.propertyToWriteNameTo,c,(e=>(0,a.tokenVariableName)(e,u)))}return l([t.exportConfiguration.exportBaseValues?(0,n.styleOutputFile)(c,u):null])}))},"../../utils/dist/enums/ColorFormat.js":
/*!*********************************************!*\
  !*** ../../utils/dist/enums/ColorFormat.js ***!
  \*********************************************/(e,t)=>{"use strict";var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ColorFormat=void 0,function(e){e.rgb="rgb",e.rgba="rgba",e.smartRgba="smartRgba",e.hex6="hex6",e.hex8="hex8",e.hashHex6="hashHex6",e.hashHex8="hashHex8",e.smartHashHex="smartHashHex",e.smartHex="smartHex",e.hsl="hsl",e.hsla="hsla",e.smartHsla="smartHsla",e.smartUIColor="smartUIColor",e.oklch="oklch",e.oklcha="oklcha",e.smartOklch="smartOklch"}(o||(t.ColorFormat=o={}))},"../../utils/dist/enums/StringCase.js":
/*!********************************************!*\
  !*** ../../utils/dist/enums/StringCase.js ***!
  \********************************************/(e,t)=>{"use strict";var o;Object.defineProperty(t,"__esModule",{value:!0}),t.StringCase=void 0,function(e){e.camelCase="camelCase",e.capitalCase="capitalCase",e.constantCase="constantCase",e.dotCase="dotCase",e.trainCase="trainCase",e.noCase="noCase",e.kebabCase="kebabCase",e.pascalCase="pascalCase",e.pathCase="pathCase",e.sentenceCase="sentenceCase",e.snakeCase="snakeCase",e.flatCase="flatCase"}(o||(t.StringCase=o={}))},"../../utils/dist/helpers/CSSHelper.js":
/*!*********************************************!*\
  !*** ../../utils/dist/helpers/CSSHelper.js ***!
  \*********************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CSSHelper=void 0;const r=o(/*! @supernovaio/sdk-exporters */"../../utils/node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),n=o(/*! ./TokenHelper */"../../utils/dist/helpers/TokenHelper.js"),i=o(/*! ./ColorHelper */"../../utils/dist/helpers/ColorHelper.js");t.CSSHelper=class{static tokenToCSS(e,t,o){let n;switch(e.tokenType){case r.TokenType.color:n=this.colorTokenValueToCSS(e.value,t,o);break;case r.TokenType.border:n=this.borderTokenValueToCSS(e.value,t,o);break;case r.TokenType.gradient:n=this.gradientTokenValueToCSS(e.value,t,o);break;case r.TokenType.dimension:case r.TokenType.size:case r.TokenType.space:case r.TokenType.opacity:case r.TokenType.fontSize:case r.TokenType.lineHeight:case r.TokenType.letterSpacing:case r.TokenType.paragraphSpacing:case r.TokenType.borderWidth:case r.TokenType.radius:case r.TokenType.duration:case r.TokenType.zIndex:n=this.dimensionTokenValueToCSS(e.value,t,o);break;case r.TokenType.shadow:n=this.shadowTokenValueToCSS(e.value,t,o);break;case r.TokenType.fontWeight:n=this.fontWeightTokenValueToCSS(e.value,t,o);break;case r.TokenType.fontFamily:case r.TokenType.productCopy:case r.TokenType.string:n=this.stringTokenValueToCSS(e.value,t,o);break;case r.TokenType.textCase:case r.TokenType.textDecoration:case r.TokenType.visibility:n=this.optionTokenValueToCSS(e.value,t,o,e.tokenType);break;case r.TokenType.blur:n=this.blurTokenValueToCSS(e.value,t,o);break;case r.TokenType.typography:n=this.typographyTokenValueToCSS(e.value,t,o);break;default:throw new r.UnreachableCaseError(e.tokenType,"Unsupported token type for transformation to CSS:")}if(o.valueTransformer){const t=o.valueTransformer(n,e);if(void 0!==t)return t}return n}static colorTokenValueToCSS(e,t,o){return i.ColorHelper.formattedColorOrVariableName(e,t,o)}static borderTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(r)return o.tokenToVariableRef(r);const i=this.dimensionTokenValueToCSS(e.width,t,o),a=this.borderStyleToCSS(e.style),l=this.colorTokenValueToCSS(e.color,t,o);this.borderPositionToCSS(e.position);return`${i} ${a} ${l}`}static gradientTokenValueToCSS(e,t,o){return e.map((e=>this.gradientLayerToCSS(e,t,o))).join(", ")}static gradientLayerToCSS(e,t,o){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(a)return o.tokenToVariableRef(a);const l=i.ColorHelper.roundToDecimals(e.to.x,o.decimals)-i.ColorHelper.roundToDecimals(e.from.x,o.decimals),s=i.ColorHelper.roundToDecimals(e.to.y,o.decimals)-i.ColorHelper.roundToDecimals(e.from.y,o.decimals),c=Math.atan2(s,l)*(180/Math.PI),u=()=>l>=0&&s>0||l>0&&s<=0||l<=0&&s<0?90+c:c-270;let p="";switch(e.type){case r.GradientType.linear:p=`linear-gradient(${u()}deg, `;break;case r.GradientType.radial:p="radial-gradient(circle, ";break;case r.GradientType.angular:p="conic-gradient(";break;default:p=`linear-gradient(${u()}deg, `}return`${p}${e.stops.map((e=>`${this.colorTokenValueToCSS(e.color,t,o)} ${i.ColorHelper.roundToDecimals(100*e.position,o.decimals)}%`)).join(", ")})`}static dimensionTokenValueToCSS(e,t,o){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(a)return o.tokenToVariableRef(a);if(o.forceRemUnit&&e.unit===r.Unit.pixels){const t=o.remBase||16,r=e.measure/t;return`${i.ColorHelper.roundToDecimals(r,o.decimals)}rem`}return`${i.ColorHelper.roundToDecimals(e.measure,o.decimals)}${this.unitToCSS(e.unit)}`}static shadowTokenValueToCSS(e,t,o){return e.map((e=>this.shadowLayerToCSS(e,t,o))).join(", ")}static shadowLayerToCSS(e,t,o){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(a)return o.tokenToVariableRef(a);const l=e=>{if(o.forceRemUnit){const t=e/(o.remBase||16);return`${i.ColorHelper.roundToDecimals(t,o.decimals)}rem`}return`${e}px`};return`${e.type===r.ShadowType.inner?"inset ":""}${l(e.x)} ${l(e.y)} ${l(e.radius)} ${l(e.spread)} ${this.colorTokenValueToCSS({...e.color,...e.opacity&&{opacity:e.opacity}},t,o)}`}static fontWeightTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(r)return o.tokenToVariableRef(r);return`${this.normalizeTextWeight(e.text)}`}static normalizeTextWeight(e){const t=e.toLowerCase().trim(),o=parseInt(t);if(!isNaN(o))return o;switch(t){case"thin":case"hairline":return 100;case"extra light":case"extralight":case"ultra light":case"ultralight":return 200;case"light":return 300;case"normal":case"regular":case"book":default:return 400;case"medium":return 500;case"semi bold":case"semibold":case"demi bold":case"demibold":return 600;case"bold":return 700;case"extra bold":case"extrabold":case"ultra bold":case"ultrabold":return 800;case"black":case"heavy":return 900}}static stringTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);return r?o.tokenToVariableRef(r):`"${e.text}"`}static optionTokenValueToCSS(e,t,o,i){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);return a?o.tokenToVariableRef(a):i===r.TokenType.textCase?this.textCaseToCSS(e.value):i===r.TokenType.textDecoration?this.textDecorationToCSS(e.value):e.value.toLowerCase()}static blurTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);return r?o.tokenToVariableRef(r):`blur(${this.dimensionTokenValueToCSS(e.radius,t,o)})`}static typographyTokenValueToCSS(e,t,o){const i=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(i)return o.tokenToVariableRef(i);const a=(0,n.sureOptionalReference)(e.fontFamily.referencedTokenId,t,o.allowReferences),l=(0,n.sureOptionalReference)(e.fontWeight.referencedTokenId,t,o.allowReferences),s=(0,n.sureOptionalReference)(e.textDecoration.referencedTokenId,t,o.allowReferences),c=(0,n.sureOptionalReference)(e.textCase.referencedTokenId,t,o.allowReferences),u={fontFamily:a?o.tokenToVariableRef(a):e.fontFamily.text,fontWeight:l?o.tokenToVariableRef(l):this.normalizeTextWeight(e.fontWeight.text),textDecoration:s?o.tokenToVariableRef(s):e.textDecoration.value===r.TextDecoration.original?this.textDecorationToCSS(e.textDecoration.value):void 0,textCase:c?o.tokenToVariableRef(c):e.textCase.value===r.TextCase.original?this.textCaseToCSS(e.textCase.value):void 0,caps:e.textCase.value===r.TextCase.smallCaps,fontSize:this.dimensionTokenValueToCSS(e.fontSize,t,o),lineHeight:e.lineHeight?this.dimensionTokenValueToCSS(e.lineHeight,t,o):void 0},p=u.fontSize;return`${u.caps?"small-caps ":""}${u.fontWeight} ${u.lineHeight?`${p}/${u.lineHeight}`:p} ${a?u.fontFamily:`"${u.fontFamily}"`}`}static borderStyleToCSS(e){switch(e){case r.BorderStyle.dashed:return"dashed";case r.BorderStyle.dotted:return"dotted";case r.BorderStyle.solid:return"solid";case r.BorderStyle.groove:return"groove";default:return"solid"}}static borderPositionToCSS(e){switch(e){case r.BorderPosition.center:return"center";case r.BorderPosition.inside:return"inside";case r.BorderPosition.outside:default:return"outside"}}static unitToCSS(e){switch(e){case r.Unit.percent:return"%";case r.Unit.pixels:return"px";case r.Unit.rem:return"rem";case r.Unit.raw:return"";case r.Unit.ms:return"ms";default:return"px"}}static textCaseToCSS(e){switch(e){case r.TextCase.original:return"none";case r.TextCase.upper:return"uppercase";case r.TextCase.lower:return"lowercase";case r.TextCase.camel:return"capitalize";case r.TextCase.smallCaps:return"small-caps"}}static textDecorationToCSS(e){switch(e){case r.TextDecoration.original:return"none";case r.TextDecoration.underline:return"underline";case r.TextDecoration.strikethrough:return"line-through"}}}},"../../utils/dist/helpers/ColorHelper.js":
/*!***********************************************!*\
  !*** ../../utils/dist/helpers/ColorHelper.js ***!
  \***********************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ColorHelper=void 0;const r=o(/*! ../enums/ColorFormat */"../../utils/dist/enums/ColorFormat.js"),n=o(/*! ./TokenHelper */"../../utils/dist/helpers/TokenHelper.js");class i{static formattedColorOrVariableName(e,t,o){let i,a=null,l=null;const s=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(s)i=o.tokenToVariableRef(s);else{const r=(0,n.sureOptionalReference)(e.color.referencedTokenId,t,o.allowReferences);r&&(a=o.tokenToVariableRef(r));const i=(0,n.sureOptionalReference)(e.opacity.referencedTokenId,t,o.allowReferences);i&&(l=o.tokenToVariableRef(i))}if(i)return i;if(!i&&!a&&!l)return this.formattedColor(e,o.colorFormat,o.decimals);switch(o.colorFormat){case r.ColorFormat.rgb:case r.ColorFormat.rgba:case r.ColorFormat.smartRgba:return this.colorToRgb(o.colorFormat,this.normalizedIntColor(e),e.opacity.measure,o.decimals,a,l);default:return this.formattedColor(e,o.colorFormat,o.decimals)}}static formattedColor(e,t,o=3){switch(t){case r.ColorFormat.hex6:case r.ColorFormat.hex8:case r.ColorFormat.hashHex6:case r.ColorFormat.hashHex8:case r.ColorFormat.smartHex:case r.ColorFormat.smartHashHex:return this.colorToHex(t,this.normalizedIntColor(e),e.opacity.measure);case r.ColorFormat.rgb:case r.ColorFormat.rgba:case r.ColorFormat.smartRgba:return this.colorToRgb(t,this.normalizedIntColor(e),e.opacity.measure,o,null,null);case r.ColorFormat.hsl:case r.ColorFormat.hsla:case r.ColorFormat.smartHsla:return this.colorToHsl(t,this.normalizedFractionalColor(e),e.opacity.measure,o);case r.ColorFormat.smartUIColor:return this.colorToUIColor(this.normalizedIntColor(e),e.opacity.measure,o);case r.ColorFormat.oklch:case r.ColorFormat.oklcha:case r.ColorFormat.smartOklch:return this.colorToOklch(t,this.normalizedIntColor(e),e.opacity.measure,o);default:return this.colorToHex(r.ColorFormat.smartHashHex,this.normalizedIntColor(e),e.opacity.measure)}}static colorToRgb(e,t,o,n,i,a){let l;return l=e===r.ColorFormat.rgba||e===r.ColorFormat.smartRgba&&o<1?`rgba(${i||`${t.r}, ${t.g}, ${t.b}`}, ${a||this.roundToDecimals(o,n)})`:`rgb(${i||`${t.r}, ${t.g}, ${t.b}`})`,l}static colorToHex(e,t,o){let n=`${this.pHex(t.r)}${this.pHex(t.g)}${this.pHex(t.b)}`;return(e===r.ColorFormat.hex8||e===r.ColorFormat.hashHex8||e===r.ColorFormat.smartHex&&o<1||e===r.ColorFormat.smartHashHex&&o<1)&&(n+=`${this.pHex(Math.round(255*o))}`),e!==r.ColorFormat.hashHex6&&e!==r.ColorFormat.hashHex8&&e!==r.ColorFormat.smartHashHex||(n=`#${n}`),n}static colorToHsl(e,t,o,n){const i=Math.max(t.r,t.g,t.b),a=Math.min(t.r,t.g,t.b);let l,s=0,c=0,u=(i+a)/2;if(i===a)s=c=0;else{const e=i-a;switch(c=u>.5?e/(2-i-a):e/(i+a),i){case t.r:s=(t.g-t.b)/e+(t.g<t.b?6:0);break;case t.g:s=(t.b-t.r)/e+2;break;case t.b:s=(t.r-t.g)/e+4}s/=6}return l=e===r.ColorFormat.hsla||e===r.ColorFormat.smartHsla&&o<1?`hsla(${Math.round(360*s)}%, ${Math.round(100*c)}%, ${Math.round(100*u)}%, ${this.roundToDecimals(o,n)})`:`hsl(${Math.round(360*s)}%, ${Math.round(100*c)}%, ${Math.round(100*u)}%)`,l}static colorToUIColor(e,t,o=3){let r=`UIColor(rgb: 0x${this.pHex(e.r)}${this.pHex(e.g)}${this.pHex(e.b)})`;return t<1&&(r+=`.withAlphaComponent(${t})`),r}static normalizedIntColor(e){return{r:Math.round(e.color.r),g:Math.round(e.color.g),b:Math.round(e.color.b)}}static normalizedFractionalColor(e,t=3){return{r:this.roundToDecimals(e.color.r/255,t),g:i.roundToDecimals(e.color.g/255,t),b:i.roundToDecimals(e.color.b/255,t)}}static roundToDecimals(e,t,o=!1){const r=Math.pow(10,t),n=Math.round(e*r)/r;return o?Number(n.toFixed(t)):parseFloat(n.toFixed(t))}static pHex(e){return e.toString(16).padStart(2,"0")}static colorToOklch(e,t,o,n){const{l:i,c:a,h:l}=this.rgbToOklch(t.r,t.g,t.b);switch(e){case r.ColorFormat.oklcha:return`oklch(${i}% ${a} ${l} / ${this.roundToDecimals(100*o,n)}%)`;case r.ColorFormat.smartOklch:return o<1?`oklch(${i}% ${a} ${l} / ${this.roundToDecimals(100*o,n)}%)`:`oklch(${i}% ${a} ${l})`;case r.ColorFormat.oklch:default:return`oklch(${i}% ${a} ${l})`}}static rgbToOklch(e,t,o){const r=this.sRGBtoLinear(e/255),n=this.sRGBtoLinear(t/255),i=this.sRGBtoLinear(o/255),a=.4124564*r+.3575761*n+.1804375*i,l=.2126729*r+.7151522*n+.072175*i,s=.0193339*r+.119192*n+.9503041*i,c=.8189330101*a+.3618667424*l-.1288597137*s,u=.0329845436*a+.9293118715*l+.0361456387*s,p=.0482003018*a+.2643662691*l+.633851707*s,d=Math.cbrt(c),y=Math.cbrt(u),m=Math.cbrt(p),T=.2104542553*d+.793617785*y-.0040720468*m,f=1.9779984951*d-2.428592205*y+.4505937099*m,g=.0259040371*d+.7827717662*y-.808675766*m,b=Math.sqrt(f*f+g*g);let h=180*Math.atan2(g,f)/Math.PI;return h<0&&(h+=360),{l:this.roundToDecimals(100*T,2),c:this.roundToDecimals(b,3,!0),h:this.roundToDecimals(h,2)}}static sRGBtoLinear(e){return e<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}}t.ColorHelper=i},"../../utils/dist/helpers/FileHelper.js":
/*!**********************************************!*\
  !*** ../../utils/dist/helpers/FileHelper.js ***!
  \**********************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FileHelper=void 0;const r=o(/*! @supernovaio/sdk-exporters */"../../utils/node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js");t.FileHelper=class{static createCopyRemoteFile({relativePath:e,fileName:t,url:o}){return{path:e,name:t,type:r.OutputFileType.copyRemoteUrl,url:o}}static createTextFile({relativePath:e,fileName:t,content:o}){return{path:e,name:t,type:r.OutputFileType.text,content:o}}static createBinaryFile({relativePath:e,fileName:t,data:o}){return{path:e,name:t,type:r.OutputFileType.binary,data:o}}}},"../../utils/dist/helpers/FileNameHelper.js":
/*!**************************************************!*\
  !*** ../../utils/dist/helpers/FileNameHelper.js ***!
  \**************************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FileNameHelper=void 0;t.FileNameHelper=class{static ensureFileExtension(e,t){const o=t.startsWith(".")?t:`.${t}`;return e.toLowerCase().endsWith(o.toLowerCase())?e:e+o}static replaceFileExtension(e,t,o){const r=t.startsWith(".")?t:`.${t}`,n=o.startsWith(".")?o:`.${o}`;return e.replace(new RegExp(`${r}$`),n)}static getDefaultStyleFileName(e,t=".css"){const o=t.startsWith(".")?t:`.${t}`;return{Color:"color",Typography:"typography",Dimension:"dimension",Size:"size",Space:"space",Opacity:"opacity",FontSize:"font-size",LineHeight:"line-height",LetterSpacing:"letter-spacing",ParagraphSpacing:"paragraph-spacing",BorderWidth:"border-width",BorderRadius:"border-radius",Duration:"duration",ZIndex:"z-index",Shadow:"shadow",Border:"border",Gradient:"gradient",String:"string",ProductCopy:"product-copy",FontFamily:"font-family",FontWeight:"font-weight",TextCase:"text-case",TextDecoration:"text-decoration",Visibility:"visibility",Blur:"blur"}[e]+o}}},"../../utils/dist/helpers/GeneralHelper.js":
/*!*************************************************!*\
  !*** ../../utils/dist/helpers/GeneralHelper.js ***!
  \*************************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GeneralHelper=void 0;t.GeneralHelper=class{static indent(e=2){return" ".repeat(Math.max(0,e))}static addDisclaimer(e,t){if(!e)return t;return`/**\n * ${e.replace(/\n/g,"\n * ")} \n */\n\n${t}`}}},"../../utils/dist/helpers/NamingHelper.js":
/*!************************************************!*\
  !*** ../../utils/dist/helpers/NamingHelper.js ***!
  \************************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NamingHelper=void 0;const r=o(/*! ../enums/StringCase */"../../utils/dist/enums/StringCase.js"),n=o(/*! change-case */"../../utils/node_modules/change-case/dist/index.js");class i{static applyFindReplace(e,t){if(!t)return e;const o=Object.entries(t).sort((([e],[t])=>t.length-e.length));let r=e;for(const[e,t]of o){const o=e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),n=new RegExp(`\\b${o}\\b|(?<=^|\\s)${o}(?=\\s|$)`,"gi");r=r.replace(n,t)}return r}static codeSafeVariableNameForToken(e,t,o,r,n,a=!0){let l=[];o&&(l.push(...o.path),o.isRoot||l.push(o.name));const s=e.name.split(/[\s-_]+/);if(l.length>0&&s.length>1&&s[0].toLowerCase()===l[l.length-1].toLowerCase()?l.push(s.slice(1).join(" ")):l.push(e.name),n){let e=l.join(" ");e=i.applyFindReplace(e,n),l=e.split(/\s+/).filter((e=>e.length>0)).map((e=>e.trim()))}return r&&r.length>0&&l.unshift(r),i.codeSafeVariableName(l,t,void 0,a)}static codeSafeVariableName(e,t,o,a=!1){let l="string"==typeof e?e:e.join(" ");if(l=i.applyFindReplace(l,o),l=l.replaceAll(/[^a-zA-Z0-9_-]/g,"_"),a){const e=(0,n.kebabCase)(l).split("-").filter((e=>e.length>0));l=e.filter(((t,o)=>0===o||t!==e[o-1])).join(" ")}switch(t){case r.StringCase.camelCase:l=(0,n.camelCase)(l);break;case r.StringCase.capitalCase:l=(0,n.capitalCase)(l);break;case r.StringCase.constantCase:l=(0,n.constantCase)(l);break;case r.StringCase.dotCase:l=(0,n.dotCase)(l);break;case r.StringCase.trainCase:l=(0,n.trainCase)(l);break;case r.StringCase.noCase:l=(0,n.noCase)(l);break;case r.StringCase.kebabCase:l=(0,n.kebabCase)(l);break;case r.StringCase.pascalCase:l=(0,n.pascalCase)(l);break;case r.StringCase.pathCase:l=(0,n.pathCase)(l);break;case r.StringCase.sentenceCase:l=(0,n.sentenceCase)(l);break;case r.StringCase.snakeCase:l=(0,n.snakeCase)(l);break;case r.StringCase.flatCase:l=(0,n.camelCase)(l).toLowerCase()}return t!==r.StringCase.snakeCase&&t!==r.StringCase.constantCase&&(l=l.replaceAll("_","")),l.match(/^[^a-zA-Z]/)&&(l="_"+l),l}static nameAsCSSVarReference(e){return`var(--${e})`}static nameAsCSSVarDeclaration(e){return`--${e}`}}t.NamingHelper=i},"../../utils/dist/helpers/ThemeHelper.js":
/*!***********************************************!*\
  !*** ../../utils/dist/helpers/ThemeHelper.js ***!
  \***********************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ThemeHelper=void 0;const r=o(/*! ./NamingHelper */"../../utils/dist/helpers/NamingHelper.js"),n=o(/*! ../enums/StringCase */"../../utils/dist/enums/StringCase.js");t.ThemeHelper=class{static hasThemedTokens(e,t,o){const r=e.filter((e=>e.tokenType===t)),n=new Set(o.overriddenTokens.map((e=>e.id)));return r.some((e=>n.has(e.id)))}static filterThemedTokens(e,t){const o=new Set(t.overriddenTokens.map((e=>e.id)));return e.filter((e=>o.has(e.id)))}static getThemeIdentifier(e,t=n.StringCase.kebabCase){if("string"==typeof e)return e;const o=e.codeName||e.name;return r.NamingHelper.codeSafeVariableName(o,t)}static getThemeName(e){if("string"==typeof e)return e;const t=e.codeName||e.name;return r.NamingHelper.codeSafeVariableName(t,n.StringCase.capitalCase)}}},"../../utils/dist/helpers/TokenHelper.js":
/*!***********************************************!*\
  !*** ../../utils/dist/helpers/TokenHelper.js ***!
  \***********************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sureOptionalReference=function(e,t,o=!0){if(!e||!o)return null;const r=t.get(e);if(!r)throw new Error(`Trying to retrieve unknown referenced token ${e}`);return r}},"../../utils/dist/helpers/TokenNameTracker.js":
/*!****************************************************!*\
  !*** ../../utils/dist/helpers/TokenNameTracker.js ***!
  \****************************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TokenNameTracker=void 0;const r=o(/*! ./NamingHelper */"../../utils/dist/helpers/NamingHelper.js");t.TokenNameTracker=class{constructor(){this.tokenNameMap=new Map,this.nameToTokenMap=new Map,this.hierarchyNameMap=new Map}reset(){this.tokenNameMap.clear(),this.nameToTokenMap.clear(),this.hierarchyNameMap.clear()}getSimpleTokenName(e,t,o=!1,n=[]){const i=`${n.join("/")}/${e.name}`;if(!o&&this.tokenNameMap.has(e.id))return this.tokenNameMap.get(e.id);let a=r.NamingHelper.codeSafeVariableName(e.name,t);this.hierarchyNameMap.has(i)||this.hierarchyNameMap.set(i,new Set);const l=this.hierarchyNameMap.get(i);return l.size>0&&!l.has(e.id)&&(a=`${a}_${l.size}`),l.add(e.id),o||(this.tokenNameMap.set(e.id,a),this.nameToTokenMap.set(a,e.id)),a}getTokenName(e,t,o,n,i=!1){if(!i&&this.tokenNameMap.has(e.id))return this.tokenNameMap.get(e.id);const a=t.find((t=>t.id===e.parentGroupId));let l=r.NamingHelper.codeSafeVariableNameForToken(e,o,a,n),s=1;for(;this.nameToTokenMap.has(l)&&this.nameToTokenMap.get(l)!==e.id;)l=`${l}_copy_${s++}`;return i||(this.tokenNameMap.set(e.id,l),this.nameToTokenMap.set(l,e.id)),l}}},"../../utils/dist/helpers/WriteTokenPropStore.js":
/*!*******************************************************!*\
  !*** ../../utils/dist/helpers/WriteTokenPropStore.js ***!
  \*******************************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WriteTokenPropStore=void 0;const r=o(/*! ./NamingHelper */"../../utils/dist/helpers/NamingHelper.js"),n=o(/*! ../enums/StringCase */"../../utils/dist/enums/StringCase.js");t.WriteTokenPropStore=class{constructor(e,t){this.tokenPropertyWriteMap=new Map,this.sdk=e,this.target=t}storeValueForTokenProperty(e,t,o){let r=this.tokenPropertyWriteMap.get(t);r||(r=new Map,this.tokenPropertyWriteMap.set(t,r)),r.set(e,o)}async batchUpdateStoredTokenProperties(){if(0===this.tokenPropertyWriteMap.size)return;let e=await this.sdk.tokens.getTokenProperties(this.target);for(const[t,o]of this.tokenPropertyWriteMap){let i=e.find((e=>e.name===t));if(i||(await this.sdk.tokens.createTokenProperty(this.target,{type:"Generic",name:t,codeName:r.NamingHelper.codeSafeVariableName([t],n.StringCase.camelCase),columnWidth:200,description:"Variable name to use in code"}),e=await this.sdk.tokens.getTokenProperties(this.target),i=e.find((e=>e.name===t))),!i)throw new Error(`Failed to retrieve or create property ${t}.`);const a=Array.from(o).map((([e,t])=>({definitionId:i.id,targetElementId:e.id,value:t})));await this.sdk.bulkOperations.updateElementProperties(this.target,a)}}async writeTokenProperties(e,t,o){const r=e?.trim();if(r){for(const e of t){const t=o(e);this.storeValueForTokenProperty(e,r,t)}await this.batchUpdateStoredTokenProperties()}}}},"../../utils/dist/index.js":
/*!*********************************!*\
  !*** ../../utils/dist/index.js ***!
  \*********************************/function(e,t,o){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,o,r){void 0===r&&(r=o);var n=Object.getOwnPropertyDescriptor(t,o);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,r,n)}:function(e,t,o,r){void 0===r&&(r=o),e[r]=t[o]}),n=this&&this.__exportStar||function(e,t){for(var o in e)"default"===o||Object.prototype.hasOwnProperty.call(t,o)||r(t,e,o)};Object.defineProperty(t,"__esModule",{value:!0}),n(o(/*! ./helpers/NamingHelper */"../../utils/dist/helpers/NamingHelper.js"),t),n(o(/*! ./helpers/ColorHelper */"../../utils/dist/helpers/ColorHelper.js"),t),n(o(/*! ./helpers/TokenHelper */"../../utils/dist/helpers/TokenHelper.js"),t),n(o(/*! ./helpers/CSSHelper */"../../utils/dist/helpers/CSSHelper.js"),t),n(o(/*! ./helpers/FileHelper */"../../utils/dist/helpers/FileHelper.js"),t),n(o(/*! ./helpers/ThemeHelper */"../../utils/dist/helpers/ThemeHelper.js"),t),n(o(/*! ./helpers/FileNameHelper */"../../utils/dist/helpers/FileNameHelper.js"),t),n(o(/*! ./helpers/GeneralHelper */"../../utils/dist/helpers/GeneralHelper.js"),t),n(o(/*! ./enums/StringCase */"../../utils/dist/enums/StringCase.js"),t),n(o(/*! ./enums/ColorFormat */"../../utils/dist/enums/ColorFormat.js"),t),n(o(/*! ./helpers/TokenNameTracker */"../../utils/dist/helpers/TokenNameTracker.js"),t),n(o(/*! ./helpers/WriteTokenPropStore */"../../utils/dist/helpers/WriteTokenPropStore.js"),t)},"../../utils/node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js":
/*!*********************************************************************************************!*\
  !*** ../../utils/node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js ***!
  \*********************************************************************************************/(e,t)=>{(()=>{"use strict";var e={1:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.GradientType=void 0,function(e){e.linear="Linear",e.radial="Radial",e.angular="Angular"}(o||(t.GradientType=o={}))},306:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockTextPropertyStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.default="Default",e.defaultBold="DefaultBold",e.defaultSemibold="DefaultSemibold",e.small="Small",e.smallBold="SmallBold",e.smallSemibold="SmallSemibold",e.custom="Custom"}(o||(t.DocsBlockTextPropertyStyle=o={}))},899:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScaleType=void 0,function(e){e.aspectFill="AspectFill",e.aspectFit="AspectFit"}(o||(t.AssetScaleType=o={}))},915:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScale=void 0,function(e){e.x1="x1",e.x2="x2",e.x3="x3",e.x4="x4"}(o||(t.AssetScale=o={}))},922:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextCase=void 0,function(e){e.original="Original",e.upper="Upper",e.lower="Lower",e.camel="Camel",e.smallCaps="SmallCaps"}(o||(t.TextCase=o={}))},934:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.IconSet=void 0,function(e){e.checkCircle="CheckCircle",e.crossCircle="CrossCircle",e.alert="Alert"}(o||(t.IconSet=o={}))},1160:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_POSITIONS=t.BorderPosition=void 0,function(e){e.inside="Inside",e.center="Center",e.outside="Outside"}(o||(t.BorderPosition=o={})),t.ALL_BORDER_POSITIONS=[o.inside,o.center,o.outside]},1233:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityType=void 0,function(e){e.group="Group",e.page="Page"}(o||(t.DocsEntityType=o={}))},1255:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameAlignment=void 0,function(e){e.frameHeight="FrameHeight",e.center="Center"}(o||(t.FrameAlignment=o={}))},1423:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageAssetType=void 0,function(e){e.image="image",e.figmaFrame="figmaFrame"}(o||(t.DocumentationLegacyPageAssetType=o={}))},1601:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockThemeType=void 0,function(e){e.override="Override",e.comparison="Comparison"}(o||(t.DocumentationLegacyPageBlockThemeType=o={}))},1846:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockType=void 0,function(e){e.text="Text",e.heading="Heading",e.code="Code",e.unorderedList="UnorderedList",e.orderedList="OrderedList",e.quote="Quote",e.callout="Callout",e.divider="Divider",e.image="Image",e.token="Token",e.tokenList="TokenList",e.tokenGroup="TokenGroup",e.shortcuts="Shortcuts",e.link="Link",e.figmaEmbed="FigmaEmbed",e.youtubeEmbed="YoutubeEmbed",e.storybookEmbed="StorybookEmbed",e.genericEmbed="Embed",e.figmaFrames="FigmaFrames",e.custom="Custom",e.renderCode="RenderCode",e.componentAssets="ComponentAssets",e.column="Column",e.columnItem="ColumnItem",e.tabs="Tabs",e.tabItem="TabItem",e.table="Table",e.tableCell="TableCell",e.tableRow="TableRow"}(o||(t.DocumentationLegacyPageBlockType=o={}))},2123:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyGroupBehavior=void 0,function(e){e.group="Group",e.tabs="Tabs"}(o||(t.DocumentationLegacyGroupBehavior=o={}))},2657:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockShortcut=t.DocumentationLegacyPageBlockShortcutType=void 0,function(e){e.external="External",e.internal="Internal"}(o||(t.DocumentationLegacyPageBlockShortcutType=o={})),t.DocumentationLegacyPageBlockShortcut=class{constructor(e){var t;e.url?this.type=o.external:this.type=o.internal,this.title=this.shortcutTitleFromModel(e,this.type),this.description=this.shortcutDescriptionFromModel(e,this.type),this.previewUrl=this.shortcutPreviewUrlFromModel(e),this.type===o.internal&&(null===(t=e.documentationItemPreview)||void 0===t?void 0:t.valid)&&e.documentationItemId?this.internalId=e.documentationItemId:(this.internalId=null,this.type===o.external&&e.url?this.externalUrl=e.url:this.externalUrl=null)}shortcutTitleFromModel(e,t){var r,n,i,a,l;let s=null;return e.title&&e.title.trim().length>0?s=e.title:t===o.internal?s=null!==(n=null===(r=e.documentationItemPreview)||void 0===r?void 0:r.title)&&void 0!==n?n:null:t===o.external&&(s=null!==(l=null!==(a=null===(i=e.urlPreview)||void 0===i?void 0:i.title)&&void 0!==a?a:e.url)&&void 0!==l?l:null),s&&0!==s.trim().length?s:null}shortcutDescriptionFromModel(e,t){var r;let n=null;return e.description&&e.description.trim().length>0?n=e.description:t===o.external&&(n=null===(r=e.urlPreview)||void 0===r?void 0:r.description),n&&0!==n.trim().length?n:null}shortcutPreviewUrlFromModel(e){var t,o,r,n,i;return null!==(i=null!==(r=null!==(t=e.assetUrl)&&void 0!==t?t:null===(o=e.asset)||void 0===o?void 0:o.url)&&void 0!==r?r:null===(n=e.urlPreview)||void 0===n?void 0:n.thumbnailUrl)&&void 0!==i?i:null}}},2674:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.RichTextSpanAttributeType=void 0,function(e){e.bold="Bold",e.italic="Italic",e.link="Link",e.strikethrough="Strikethrough",e.code="Code"}(o||(t.RichTextSpanAttributeType=o={}))},2802:(e,t)=>{var o,r;Object.defineProperty(t,"__esModule",{value:!0}),t.PulsarExecutor=t.OutputFileType=void 0,function(e){e.copyRemoteUrl="copyRemoteUrl",e.text="text",e.binary="binary"}(o||(t.OutputFileType=o={})),function(e){e.supernova="supernova",e.local="local"}(r||(t.PulsarExecutor=r={}))},3607:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionStatus=void 0,function(e){e.active="active",e.gracePeriod="gracePeriod",e.cancelled="cancelled",e.suspended="suspended"}(o||(t.WorkspaceSubscriptionStatus=o={}))},3718:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameLayout=void 0,function(e){e.c8="C8",e.c7="C7",e.c6="C6",e.c5="C5",e.c4="C4",e.c3="C3",e.c2="C2",e.c1="C1",e.c175="C1_75"}(o||(t.FrameLayout=o={}))},3733:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorSelectionType=void 0,function(e){e.entity="Entity",e.group="Group",e.entityAndGroup="EntityAndGroup"}(o||(t.DocsBlockBehaviorSelectionType=o={}))},3788:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DT_TOKEN_TYPES=t.tokenTypeIsReferencable=t.REFERENCABLE_TOKEN_TYPES=t.REPLACABLE_TOKEN_TYPES=t.tokenTypeIsNonPure=t.tokenTypeIsPure=t.PURE_TOKEN_TYPES=t.ALL_TOKEN_TYPES=t.MS_DIMENSION_TOKEN_TYPES=t.RAW_DIMENSION_TOKEN_TYPES=t.DIMENSION_TOKEN_TYPES=t.OPTION_TOKEN_TYPES=t.STRING_TOKEN_TYPES=t.TokenType=void 0,function(e){e.color="Color",e.typography="Typography",e.shadow="Shadow",e.border="Border",e.gradient="Gradient",e.blur="Blur",e.radius="BorderRadius",e.borderWidth="BorderWidth",e.duration="Duration",e.fontSize="FontSize",e.dimension="Dimension",e.letterSpacing="LetterSpacing",e.lineHeight="LineHeight",e.opacity="Opacity",e.paragraphSpacing="ParagraphSpacing",e.size="Size",e.space="Space",e.zIndex="ZIndex",e.textDecoration="TextDecoration",e.textCase="TextCase",e.visibility="Visibility",e.fontFamily="FontFamily",e.fontWeight="FontWeight",e.string="String",e.productCopy="ProductCopy"}(o||(t.TokenType=o={})),t.STRING_TOKEN_TYPES=[o.string,o.productCopy,o.fontFamily,o.fontWeight],t.OPTION_TOKEN_TYPES=[o.textCase,o.textDecoration,o.visibility],t.DIMENSION_TOKEN_TYPES=[o.dimension,o.size,o.space,o.opacity,o.fontSize,o.lineHeight,o.letterSpacing,o.paragraphSpacing,o.borderWidth,o.radius,o.duration,o.zIndex],t.RAW_DIMENSION_TOKEN_TYPES=[o.opacity,o.zIndex],t.MS_DIMENSION_TOKEN_TYPES=[o.duration],t.ALL_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES,o.color,o.gradient,o.border,o.radius,o.shadow,o.typography,o.blur],t.PURE_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.tokenTypeIsPure=e=>t.PURE_TOKEN_TYPES.includes(e),t.tokenTypeIsNonPure=e=>!(0,t.tokenTypeIsPure)(e),t.REPLACABLE_TOKEN_TYPES=[o.color,...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.REFERENCABLE_TOKEN_TYPES=[o.color,...t.DIMENSION_TOKEN_TYPES,o.fontFamily,o.fontWeight,o.textCase,o.textDecoration],t.tokenTypeIsReferencable=e=>t.REFERENCABLE_TOKEN_TYPES.includes(e),t.DT_TOKEN_TYPES=[o.color,o.shadow,o.gradient,o.typography,o.border,...t.DIMENSION_TOKEN_TYPES,o.fontFamily,o.fontWeight,o.string,...t.OPTION_TOKEN_TYPES]},4068:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityGroupBehavior=void 0,function(e){e.group="Group",e.tabs="Tabs"}(o||(t.DocsEntityGroupBehavior=o={}))},4290:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionProductCode=void 0,function(e){e.free="free",e.team="team",e.teamTest="team_test",e.company="company",e.enterprise="enterprise"}(o||(t.WorkspaceSubscriptionProductCode=o={}))},4379:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SupernovaError=void 0;class o extends Error{constructor(e,t,o,r,n,i,a){super(e),this.code=t,this.status=o,this.formErrors=r,this.requestId=n,this.serverTime=i,this.url=a}static fromNetworkResponse(e,t,r){var n,i,a;return new o(e.message,e.errorCode||e.reason||e.label||null,e.code||t,null!==(n=e.formErrors)&&void 0!==n?n:null,null!==(i=e.requestId)&&void 0!==i?i:null,null!==(a=e.serverTime)&&void 0!==a?a:null,r)}static fromNoNetworkResponse(e){return new o("No network or internet unreachable","NO_NETWORK",12163,null,(new Date).toISOString(),null,e)}static fromCode(e){return new o(e,e,null,null,null,null,null)}static fromMessage(e){return new o(e,null,null,null,null,null,null)}isFieldErrored(e){return void 0!==this.formErrors.find((t=>t.key===e))}errorForField(e){var t;return null!==(t=this.formErrors.find((t=>t.key===e)))&&void 0!==t?t:null}toString(){var e,t,o,r,n,i;return`\n    Error thrown: ${this.message}\n\n    Code: ${null!==(e=this.code)&&void 0!==e?e:"-"}\n\n    Status: ${null!==(t=this.status)&&void 0!==t?t:"-"}\n\n    Fields: ${JSON.stringify(this.formErrors,null,2)}\n\n    Request ID: ${null!==(o=this.requestId)&&void 0!==o?o:"-"}\n\n    Server time: ${null!==(r=this.serverTime)&&void 0!==r?r:"-"}\n\n    Network URL: ${null!==(n=this.url)&&void 0!==n?n:"-"}\n\n    Stack: ${null!==(i=this.stack)&&void 0!==i?i:"-"}\n    `}toHumanReadable(){return`${this.message}${this.requestId?` (request ${this.requestId})`:""}`}}t.SupernovaError=o},4546:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_STYLES=t.BorderStyle=void 0,function(e){e.dashed="Dashed",e.dotted="Dotted",e.solid="Solid",e.groove="Groove"}(o||(t.BorderStyle=o={})),t.ALL_BORDER_STYLES=[o.dashed,o.dotted,o.solid,o.groove]},4652:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.SourceType=void 0,function(e){e.figma="Figma",e.tokenStudio="TokenStudio",e.figmaVariablesPlugin="FigmaVariablesPlugin"}(o||(t.SourceType=o={}))},5102:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyCalloutType=void 0,function(e){e.info="Info",e.success="Success",e.warning="Warning",e.error="Error"}(o||(t.DocumentationLegacyCalloutType=o={}))},5503:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionPlanInterval=void 0,function(e){e.yearly="yearly",e.monthly="monthly"}(o||(t.WorkspaceSubscriptionPlanInterval=o={}))},5651:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorDataType=void 0,function(e){e.item="Item",e.token="Token",e.asset="Asset",e.component="Component",e.figmaNode="FigmaNode",e.figmaComponent="FigmaComponent"}(o||(t.DocsBlockBehaviorDataType=o={}))},5673:(e,t)=>{var o;function r(e){switch(e.type){case o.documentationItem:return`@page:${e.documentationItemId}`;case o.pageHeading:return`@page:${e.documentationItemId}#${e.pageHeadingId}`;case o.url:return e.url;default:return}}Object.defineProperty(t,"__esModule",{value:!0}),t.linkAttributeToDocsLink=t.docsLinkToLinkAttributes=t.docsLinkToUrl=t.DocsLinkRefType=void 0,function(e){e.documentationItem="DocumentationItem",e.pageHeading="PageHeading",e.url="Url"}(o||(t.DocsLinkRefType=o={})),t.docsLinkToUrl=r,t.docsLinkToLinkAttributes=function(e){const t=r(e);if(t)return{href:t,target:e.openInNewTab?"_blank":"_self"}},t.linkAttributeToDocsLink=function(e,t){if(!e)return;const r="_blank"===t;if(e.startsWith("@page:")){if(e.includes("#")){const[t,n]=e.replace("@page:","").split("#");return{type:o.pageHeading,documentationItemId:t,pageHeadingId:n,openInNewTab:r}}return{type:o.documentationItem,documentationItemId:e.replace("@page:",""),openInNewTab:r}}return{type:o.url,url:e,openInNewTab:r}}},5695:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainErrorCode=void 0,function(e){e.generalError="GeneralError",e.dnsNotConfigured="DNSNotConfigured",e.maintenance="Maintenance"}(o||(t.CustomDomainErrorCode=o={}))},5883:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyOptionRenderingStyle=void 0,function(e){e.segmentedControl="SegmentedControl",e.toggleButton="ToggleButton",e.select="Select",e.checkbox="Checkbox"}(o||(t.DocsBlockItemPropertyOptionRenderingStyle=o={}))},5963:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionRenderingStyle=void 0,function(e){e.segmentedControl="SegmentedControl",e.toggleButton="ToggleButton",e.select="Select",e.checkbox="Checkbox"}(o||(t.DocsBlockOptionRenderingStyle=o={}))},6141:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.VisibilityType=void 0,function(e){e.visible="Visible",e.hidden="Hidden"}(o||(t.VisibilityType=o={}))},6192:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.BlurType=void 0,function(e){e.layer="Layer",e.background="Background"}(o||(t.BlurType=o={}))},6298:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryAuthType=void 0,function(e){e.basic="Basic",e.bearer="Bearer"}(o||(t.WorkspaceNPMRegistryAuthType=o={}))},6644:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockRichTextPropertyStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.quote="Quote",e.callout="Callout",e.default="Default"}(o||(t.DocsBlockRichTextPropertyStyle=o={}))},6839:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyType=void 0,function(e){e.richText="RichText",e.multiRichText="MultiRichText",e.text="Text",e.richTextEditor="RichTextEditor",e.boolean="Boolean",e.number="Number",e.singleSelect="SingleSelect",e.multiSelect="MultiSelect",e.image="Image",e.token="Token",e.tokenType="TokenType",e.tokenProperty="TokenProperty",e.component="Component",e.componentProperty="ComponentProperty",e.asset="Asset",e.assetProperty="AssetProperty",e.embedURL="EmbedURL",e.url="URL",e.markdown="Markdown",e.code="Code",e.codeSandbox="CodeSandbox",e.table="Table",e.divider="Divider",e.storybook="Storybook",e.color="Color",e.figmaNode="FigmaNode",e.figmaComponent="FigmaComponent"}(o||(t.DocsBlockItemPropertyType=o={}))},7040:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoration=void 0,function(e){e.original="None",e.underline="Underline",e.strikethrough="Strikethrough"}(o||(t.TextDecoration=o={}))},7291:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutWidth=void 0,function(e){e.c1="1",e.c2="2",e.c3="3",e.c4="4",e.c5="5",e.c6="6",e.c7="7",e.c8="8",e.c9="9",e.c10="10",e.c11="11",e.c12="12"}(o||(t.DocsBlockItemVariantLayoutWidth=o={}))},7379:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyItemType=void 0,function(e){e.group="Group",e.page="Page"}(o||(t.DocumentationLegacyItemType=o={}))},7476:(e,t)=>{var o,r;Object.defineProperty(t,"__esModule",{value:!0}),t.TextAlignment=t.Alignment=void 0,function(e){e.left="Left",e.center="Center",e.stretch="Stretch"}(o||(t.Alignment=o={})),function(e){e.left="Left",e.center="Center",e.right="Right"}(r||(t.TextAlignment=r={}))},7479:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyTextStyle=void 0,function(e){e.small="Small",e.regular="Regular",e.bold="Bold"}(o||(t.DocsBlockItemPropertyTextStyle=o={}))},7737:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainState=void 0,function(e){e.initial="Initial",e.domainSetupInProgress="DomainSetupInProgress",e.domainSetupFailed="DomainSetupFailed",e.domainSetupsSucces="DomainSetupSuccess",e.sslSetupInProgress="SSLSetupInProgress",e.sslSetupFailed="SSLSetupFailed",e.sslSetupSuccess="SSLSetupSuccess"}(o||(t.CustomDomainState=o={}))},7968:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryType=void 0,function(e){e.npmJS="NPMJS",e.gitHub="GitHub",e.azureDevOps="AzureDevOps",e.artifactory="Artifactory",e.custom="Custom"}(o||(t.WorkspaceNPMRegistryType=o={}))},7971:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsSectionType=void 0,function(e){e.plain="Plain",e.tabs="Tabs"}(o||(t.DocsSectionType=o={}))},8042:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ImportWarningType=void 0,function(e){e.UnsupportedFill="UnsupportedFill",e.UnsupportedStroke="UnsupportedStroke",e.UnsupportedEffect="UnsupportedEffect",e.StyleNotApplied="StyleNotApplied",e.NoPublishedStyles="NoPublishedStyles",e.NoPublishedComponents="NoPublishedComponents",e.NoPublishedAssets="NoPublishedAssets",e.NoVersionFound="NoVersionFound",e.ComponentHasNoThumbnail="ComponentHasNoThumbnail",e.DuplicateImportedStyleId="DuplicateImportedStyleId",e.DuplicateImportedStylePath="DuplicateImportedStylePath",e.NoPublishedElements="NoPublishedElements",e.NoUnpublishedStyles="NoUnpublishedStyles"}(o||(t.ImportWarningType=o={}))},8061:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyRichTextStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.quote="Quote",e.callout="Callout",e.ol="OL",e.ul="UL"}(o||(t.DocsBlockItemPropertyRichTextStyle=o={}))},8095:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutType=void 0,function(e){e.column="Column",e.row="Row"}(o||(t.DocsBlockItemVariantLayoutType=o={}))},8607:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.MS_UNITS=t.PX_UNITS=t.RAW_UNITS=t.LINE_HEIGHT_UNITS=t.SIZE_UNITS=t.Unit=void 0,function(e){e.pixels="Pixels",e.percent="Percent",e.rem="Rem",e.ms="Ms",e.raw="Raw"}(o||(t.Unit=o={})),t.SIZE_UNITS=[o.pixels,o.percent,o.rem],t.LINE_HEIGHT_UNITS=[o.pixels,o.percent,o.rem,o.raw],t.RAW_UNITS=[o.raw],t.PX_UNITS=[o.pixels],t.MS_UNITS=[o.ms]},8738:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetFormat=void 0,function(e){e.png="png",e.pdf="pdf",e.svg="svg"}(o||(t.AssetFormat=o={}))},8890:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockImagePropertyAspectRatio=void 0,function(e){e.auto="Auto",e.square="Square",e.landscape="Landscape",e.portrait="Portrait",e.wide="Wide"}(o||(t.DocsBlockImagePropertyAspectRatio=o={}))},9125:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ShadowType=void 0,function(e){e.drop="Drop",e.inner="Inner"}(o||(t.ShadowType=o={}))},9133:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionColor=void 0,function(e){e.green="Green",e.red="Red",e.yellow="Yellow",e.blue="Blue",e.purple="Purple",e.orange="Orange",e.pink="Pink",e.teal="Teal",e.grey="Grey",e.lightGrey="LightGrey",e.cyan="Cyan",e.fuchsia="Fuchsia"}(o||(t.DocsBlockOptionColor=o={}))},9377:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemEntityType=void 0,function(e){e.token="Token",e.tokenGroup="TokenGroup",e.asset="Asset",e.assetGroup="AssetGroup",e.component="Component",e.componentGroup="ComponentGroup"}(o||(t.DocsBlockItemEntityType=o={}))},9478:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.convertRemoteToUserRole=t.UserRole=void 0;const r=o(4379);var n;!function(e){e.owner="Owner",e.admin="Admin",e.creator="Creator",e.contributor="Contributor",e.billing="Billing",e.viewer="Viewer"}(n||(t.UserRole=n={})),t.convertRemoteToUserRole=e=>{switch(e){case"Owner":return n.owner;case"Admin":return n.admin;case"Creator":return n.creator;case"Contributor":return n.contributor;case"Billing":return n.billing;case"Viewer":return n.viewer;default:throw r.SupernovaError.fromMessage(`Unknown role: ${e}`)}}},9896:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyHeadingType=void 0,function(e){e[e.h1=1]="h1",e[e.h2=2]="h2",e[e.h3=3]="h3"}(o||(t.DocumentationLegacyHeadingType=o={}))},9932:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.docsImageRefToUrl=t.DocsImageRefType=void 0,function(e){e.resource="Resource",e.figmaNode="FigmaNode"}(o||(t.DocsImageRefType=o={})),t.docsImageRefToUrl=function(e,t,r){var n;if(e)switch(e.type){case o.resource:return null===(n=e.resource)||void 0===n?void 0:n.url;case o.figmaNode:if(!e.figmaNode||!e.figmaNode.sourceId||!e.figmaNode.frameReferenceId)return;return t.resources.getFigmaFrameHostedUrl({designSystemId:r.dsId,versionId:r.versionId},e.figmaNode.frameReferenceId);default:return}}}},o={};function r(t){var n=o[t];if(void 0!==n)return n.exports;var i=o[t]={exports:{}};return e[t](i,i.exports,r),i.exports}var n={};(()=>{var e=n;Object.defineProperty(e,"__esModule",{value:!0}),e.TokenType=e.TextDecoration=e.TextCase=e.ShadowType=e.RichTextSpanAttributeType=e.GradientType=e.FrameLayout=e.FrameAlignment=e.IconSet=e.SourceType=e.DocsImageRefType=e.DocsLinkRefType=e.DocsSectionType=e.DocsEntityType=e.DocsEntityGroupBehavior=e.DocsBlockTextPropertyStyle=e.DocsBlockRichTextPropertyStyle=e.DocsBlockOptionColor=e.DocsBlockOptionRenderingStyle=e.DocsBlockItemVariantLayoutWidth=e.DocsBlockItemVariantLayoutType=e.DocsBlockItemPropertyType=e.DocsBlockItemPropertyTextStyle=e.DocsBlockItemPropertyRichTextStyle=e.DocsBlockItemPropertyOptionRenderingStyle=e.DocsBlockItemEntityType=e.DocsBlockImagePropertyAspectRatio=e.DocsBlockBehaviorSelectionType=e.DocsBlockBehaviorDataType=e.DocumentationLegacyPageBlockShortcutType=e.DocumentationLegacyPageBlockThemeType=e.DocumentationLegacyPageBlockType=e.DocumentationLegacyPageAssetType=e.DocumentationLegacyItemType=e.DocumentationLegacyHeadingType=e.DocumentationLegacyGroupBehavior=e.DocumentationLegacyCalloutType=e.BorderStyle=e.BorderPosition=e.BlurType=e.AssetScaleType=e.AssetScale=e.AssetFormat=e.Alignment=e.ALL_TOKEN_TYPES=e.ALL_BORDER_STYLES=e.ALL_BORDER_POSITIONS=e.OPTION_TOKEN_TYPES=e.STRING_TOKEN_TYPES=e.DIMENSION_TOKEN_TYPES=void 0,e.PulsarExecutor=e.OutputFileType=e.CustomDomainState=e.CustomDomainErrorCode=e.ImportWarningType=e.WorkspaceNPMRegistryType=e.WorkspaceNPMRegistryAuthType=e.WorkspaceSubscriptionStatus=e.WorkspaceSubscriptionProductCode=e.WorkspaceSubscriptionPlanInterval=e.VisibilityType=e.UserRole=e.Unit=void 0;var t=r(3788);Object.defineProperty(e,"DIMENSION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.DIMENSION_TOKEN_TYPES}}),Object.defineProperty(e,"STRING_TOKEN_TYPES",{enumerable:!0,get:function(){return t.STRING_TOKEN_TYPES}}),Object.defineProperty(e,"OPTION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.OPTION_TOKEN_TYPES}});var o=r(1160);Object.defineProperty(e,"ALL_BORDER_POSITIONS",{enumerable:!0,get:function(){return o.ALL_BORDER_POSITIONS}});var i=r(4546);Object.defineProperty(e,"ALL_BORDER_STYLES",{enumerable:!0,get:function(){return i.ALL_BORDER_STYLES}});var a=r(3788);Object.defineProperty(e,"ALL_TOKEN_TYPES",{enumerable:!0,get:function(){return a.ALL_TOKEN_TYPES}});var l=r(7476);Object.defineProperty(e,"Alignment",{enumerable:!0,get:function(){return l.Alignment}});var s=r(8738);Object.defineProperty(e,"AssetFormat",{enumerable:!0,get:function(){return s.AssetFormat}});var c=r(915);Object.defineProperty(e,"AssetScale",{enumerable:!0,get:function(){return c.AssetScale}});var u=r(899);Object.defineProperty(e,"AssetScaleType",{enumerable:!0,get:function(){return u.AssetScaleType}});var p=r(6192);Object.defineProperty(e,"BlurType",{enumerable:!0,get:function(){return p.BlurType}});var d=r(1160);Object.defineProperty(e,"BorderPosition",{enumerable:!0,get:function(){return d.BorderPosition}});var y=r(4546);Object.defineProperty(e,"BorderStyle",{enumerable:!0,get:function(){return y.BorderStyle}});var m=r(5102);Object.defineProperty(e,"DocumentationLegacyCalloutType",{enumerable:!0,get:function(){return m.DocumentationLegacyCalloutType}});var T=r(2123);Object.defineProperty(e,"DocumentationLegacyGroupBehavior",{enumerable:!0,get:function(){return T.DocumentationLegacyGroupBehavior}});var f=r(9896);Object.defineProperty(e,"DocumentationLegacyHeadingType",{enumerable:!0,get:function(){return f.DocumentationLegacyHeadingType}});var g=r(7379);Object.defineProperty(e,"DocumentationLegacyItemType",{enumerable:!0,get:function(){return g.DocumentationLegacyItemType}});var b=r(1423);Object.defineProperty(e,"DocumentationLegacyPageAssetType",{enumerable:!0,get:function(){return b.DocumentationLegacyPageAssetType}});var h=r(1846);Object.defineProperty(e,"DocumentationLegacyPageBlockType",{enumerable:!0,get:function(){return h.DocumentationLegacyPageBlockType}});var S=r(1601);Object.defineProperty(e,"DocumentationLegacyPageBlockThemeType",{enumerable:!0,get:function(){return S.DocumentationLegacyPageBlockThemeType}});var v=r(2657);Object.defineProperty(e,"DocumentationLegacyPageBlockShortcutType",{enumerable:!0,get:function(){return v.DocumentationLegacyPageBlockShortcutType}});var k=r(5651);Object.defineProperty(e,"DocsBlockBehaviorDataType",{enumerable:!0,get:function(){return k.DocsBlockBehaviorDataType}});var P=r(3733);Object.defineProperty(e,"DocsBlockBehaviorSelectionType",{enumerable:!0,get:function(){return P.DocsBlockBehaviorSelectionType}});var C=r(8890);Object.defineProperty(e,"DocsBlockImagePropertyAspectRatio",{enumerable:!0,get:function(){return C.DocsBlockImagePropertyAspectRatio}});var O=r(9377);Object.defineProperty(e,"DocsBlockItemEntityType",{enumerable:!0,get:function(){return O.DocsBlockItemEntityType}});var _=r(5883);Object.defineProperty(e,"DocsBlockItemPropertyOptionRenderingStyle",{enumerable:!0,get:function(){return _.DocsBlockItemPropertyOptionRenderingStyle}});var I=r(8061);Object.defineProperty(e,"DocsBlockItemPropertyRichTextStyle",{enumerable:!0,get:function(){return I.DocsBlockItemPropertyRichTextStyle}});var D=r(7479);Object.defineProperty(e,"DocsBlockItemPropertyTextStyle",{enumerable:!0,get:function(){return D.DocsBlockItemPropertyTextStyle}});var x=r(6839);Object.defineProperty(e,"DocsBlockItemPropertyType",{enumerable:!0,get:function(){return x.DocsBlockItemPropertyType}});var E=r(8095);Object.defineProperty(e,"DocsBlockItemVariantLayoutType",{enumerable:!0,get:function(){return E.DocsBlockItemVariantLayoutType}});var N=r(7291);Object.defineProperty(e,"DocsBlockItemVariantLayoutWidth",{enumerable:!0,get:function(){return N.DocsBlockItemVariantLayoutWidth}});var R=r(5963);Object.defineProperty(e,"DocsBlockOptionRenderingStyle",{enumerable:!0,get:function(){return R.DocsBlockOptionRenderingStyle}});var B=r(9133);Object.defineProperty(e,"DocsBlockOptionColor",{enumerable:!0,get:function(){return B.DocsBlockOptionColor}});var j=r(6644);Object.defineProperty(e,"DocsBlockRichTextPropertyStyle",{enumerable:!0,get:function(){return j.DocsBlockRichTextPropertyStyle}});var L=r(306);Object.defineProperty(e,"DocsBlockTextPropertyStyle",{enumerable:!0,get:function(){return L.DocsBlockTextPropertyStyle}});var M=r(4068);Object.defineProperty(e,"DocsEntityGroupBehavior",{enumerable:!0,get:function(){return M.DocsEntityGroupBehavior}});var F=r(1233);Object.defineProperty(e,"DocsEntityType",{enumerable:!0,get:function(){return F.DocsEntityType}});var w=r(7971);Object.defineProperty(e,"DocsSectionType",{enumerable:!0,get:function(){return w.DocsSectionType}});var A=r(5673);Object.defineProperty(e,"DocsLinkRefType",{enumerable:!0,get:function(){return A.DocsLinkRefType}});var $=r(9932);Object.defineProperty(e,"DocsImageRefType",{enumerable:!0,get:function(){return $.DocsImageRefType}});var H=r(4652);Object.defineProperty(e,"SourceType",{enumerable:!0,get:function(){return H.SourceType}});var U=r(934);Object.defineProperty(e,"IconSet",{enumerable:!0,get:function(){return U.IconSet}});var W=r(1255);Object.defineProperty(e,"FrameAlignment",{enumerable:!0,get:function(){return W.FrameAlignment}});var V=r(3718);Object.defineProperty(e,"FrameLayout",{enumerable:!0,get:function(){return V.FrameLayout}});var G=r(1);Object.defineProperty(e,"GradientType",{enumerable:!0,get:function(){return G.GradientType}});var Y=r(2674);Object.defineProperty(e,"RichTextSpanAttributeType",{enumerable:!0,get:function(){return Y.RichTextSpanAttributeType}});var K=r(9125);Object.defineProperty(e,"ShadowType",{enumerable:!0,get:function(){return K.ShadowType}});var z=r(922);Object.defineProperty(e,"TextCase",{enumerable:!0,get:function(){return z.TextCase}});var q=r(7040);Object.defineProperty(e,"TextDecoration",{enumerable:!0,get:function(){return q.TextDecoration}});var Z=r(3788);Object.defineProperty(e,"TokenType",{enumerable:!0,get:function(){return Z.TokenType}});var J=r(8607);Object.defineProperty(e,"Unit",{enumerable:!0,get:function(){return J.Unit}});var X=r(9478);Object.defineProperty(e,"UserRole",{enumerable:!0,get:function(){return X.UserRole}});var Q=r(6141);Object.defineProperty(e,"VisibilityType",{enumerable:!0,get:function(){return Q.VisibilityType}});var ee=r(5503);Object.defineProperty(e,"WorkspaceSubscriptionPlanInterval",{enumerable:!0,get:function(){return ee.WorkspaceSubscriptionPlanInterval}});var te=r(4290);Object.defineProperty(e,"WorkspaceSubscriptionProductCode",{enumerable:!0,get:function(){return te.WorkspaceSubscriptionProductCode}});var oe=r(3607);Object.defineProperty(e,"WorkspaceSubscriptionStatus",{enumerable:!0,get:function(){return oe.WorkspaceSubscriptionStatus}});var re=r(6298);Object.defineProperty(e,"WorkspaceNPMRegistryAuthType",{enumerable:!0,get:function(){return re.WorkspaceNPMRegistryAuthType}});var ne=r(7968);Object.defineProperty(e,"WorkspaceNPMRegistryType",{enumerable:!0,get:function(){return ne.WorkspaceNPMRegistryType}});var ie=r(8042);Object.defineProperty(e,"ImportWarningType",{enumerable:!0,get:function(){return ie.ImportWarningType}});var ae=r(5695);Object.defineProperty(e,"CustomDomainErrorCode",{enumerable:!0,get:function(){return ae.CustomDomainErrorCode}});var le=r(7737);Object.defineProperty(e,"CustomDomainState",{enumerable:!0,get:function(){return le.CustomDomainState}});var se=r(2802);Object.defineProperty(e,"OutputFileType",{enumerable:!0,get:function(){return se.OutputFileType}}),Object.defineProperty(e,"PulsarExecutor",{enumerable:!0,get:function(){return se.PulsarExecutor}})})();var i=t;for(var a in n)i[a]=n[a];n.__esModule&&Object.defineProperty(i,"__esModule",{value:!0})})()},"../../utils/node_modules/change-case/dist/index.js":
/*!**********************************************************!*\
  !*** ../../utils/node_modules/change-case/dist/index.js ***!
  \**********************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{camelCase:()=>d,capitalCase:()=>T,constantCase:()=>f,dotCase:()=>g,kebabCase:()=>b,noCase:()=>p,pascalCase:()=>y,pascalSnakeCase:()=>m,pathCase:()=>h,sentenceCase:()=>S,snakeCase:()=>v,split:()=>c,splitSeparateNumbers:()=>u,trainCase:()=>k});const r=/([\p{Ll}\d])(\p{Lu})/gu,n=/(\p{Lu})([\p{Lu}][\p{Ll}])/gu,i=/(\d)\p{Ll}|(\p{L})\d/u,a=/[^\p{L}\d]+/giu,l="$1\0$2",s="";function c(e){let t=e.trim();t=t.replace(r,l).replace(n,l),t=t.replace(a,"\0");let o=0,i=t.length;for(;"\0"===t.charAt(o);)o++;if(o===i)return[];for(;"\0"===t.charAt(i-1);)i--;return t.slice(o,i).split(/\0/g)}function u(e){const t=c(e);for(let e=0;e<t.length;e++){const o=t[e],r=i.exec(o);if(r){const n=r.index+(r[1]??r[2]).length;t.splice(e,1,o.slice(0,n),o.slice(n))}}return t}function p(e,t){const[o,r,n]=I(e,t);return o+r.map(P(t?.locale)).join(t?.delimiter??" ")+n}function d(e,t){const[o,r,n]=I(e,t),i=P(t?.locale),a=C(t?.locale),l=t?.mergeAmbiguousCharacters?O(i,a):_(i,a);return o+r.map(((e,t)=>0===t?i(e):l(e,t))).join(t?.delimiter??"")+n}function y(e,t){const[o,r,n]=I(e,t),i=P(t?.locale),a=C(t?.locale),l=t?.mergeAmbiguousCharacters?O(i,a):_(i,a);return o+r.map(l).join(t?.delimiter??"")+n}function m(e,t){return T(e,{delimiter:"_",...t})}function T(e,t){const[o,r,n]=I(e,t),i=P(t?.locale),a=C(t?.locale);return o+r.map(O(i,a)).join(t?.delimiter??" ")+n}function f(e,t){const[o,r,n]=I(e,t);return o+r.map(C(t?.locale)).join(t?.delimiter??"_")+n}function g(e,t){return p(e,{delimiter:".",...t})}function b(e,t){return p(e,{delimiter:"-",...t})}function h(e,t){return p(e,{delimiter:"/",...t})}function S(e,t){const[o,r,n]=I(e,t),i=P(t?.locale),a=C(t?.locale),l=O(i,a);return o+r.map(((e,t)=>0===t?l(e):i(e))).join(t?.delimiter??" ")+n}function v(e,t){return p(e,{delimiter:"_",...t})}function k(e,t){return T(e,{delimiter:"-",...t})}function P(e){return!1===e?e=>e.toLowerCase():t=>t.toLocaleLowerCase(e)}function C(e){return!1===e?e=>e.toUpperCase():t=>t.toLocaleUpperCase(e)}function O(e,t){return o=>`${t(o[0])}${e(o.slice(1))}`}function _(e,t){return(o,r)=>{const n=o[0];return(r>0&&n>="0"&&n<="9"?"_"+n:t(n))+e(o.slice(1))}}function I(e,t={}){const o=t.split??(t.separateNumbers?u:c),r=t.prefixCharacters??s,n=t.suffixCharacters??s;let i=0,a=e.length;for(;i<e.length;){const t=e.charAt(i);if(!r.includes(t))break;i++}for(;a>i;){const t=a-1,o=e.charAt(t);if(!n.includes(o))break;a=t}return[e.slice(0,i),o(e.slice(i,a)),e.slice(a)]}}},t={};function o(r){var n=t[r];if(void 0!==n)return n.exports;var i=t[r]={exports:{}};return e[r].call(i.exports,i,i.exports,o),i.exports}o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};o("./src/index.ts")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,