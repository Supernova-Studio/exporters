[
    {
        "key": "tokenNameStyle",
        "type": "enum",
        "default": "camelCase",
        "title": "Token name format",
        "description": "Export token names in the selected case.",
        "category": "Token names",
        "options": {
            "camelCase": {
                "label": "Camel case",
                "description": "Example: myVariableName"
            },
            "constantCase": {
                "label": "Constant case", 
                "description": "Example: MY_VARIABLE_NAME"
            },
            "flatCase": {
                "label": "Flat case",
                "description": "Example: myvariablename"
            },
            "pascalCase": {
                "label": "Pascal case",
                "description": "Example: MyVariableName"
            },
            "snakeCase": {
                "label": "Snake case",
                "description": "Example: my_variable_name"
            }
        }
    },
    {
        "key": "colorFormat",
        "type": "enum",
        "default": "smartHashHex",
        "title": "Color format",
        "description": "Export color token values in the selected color format.",
        "category": "Token values",
        "options": {
            "smartHashHex": {
                "label": "HEX (auto)",
                "description": "Automatically choose between #RRGGBB and #RRGGBBAA"
            },
            "smartRgba": {
                "label": "RGB (auto)",
                "description": "Automatically choose between rgb() and rgba()"
            },
            "smartHsla": {
                "label": "HSL (auto)",
                "description": "Automatically choose between hsl() and hsla()"
            },
            "smartOklch": {
                "label": "OKLCH (auto)",
                "description": "Automatically choose between oklch() and oklch() with alpha"
            },
            "hashHex6": {
                "label": "HEX (6 digits)",
                "description": "Example: #ff0000"
            },
            "hashHex8": {
                "label": "HEX (8 digits)",
                "description": "Example: #ff0000ff"
            },
            "rgb": {
                "label": "RGB",
                "description": "Example: rgb(255, 0, 0)"
            },
            "rgba": {
                "label": "RGBA",
                "description": "Example: rgba(255, 0, 0, 1)"
            },
            "hsl": {
                "label": "HSL",
                "description": "Example: hsl(0, 100%, 50%)"
            },
            "hsla": {
                "label": "HSLA",
                "description": "Example: hsla(0, 100%, 50%, 1)"
            },
            "oklch": {
                "label": "OKLCH",
                "description": "Example: oklch(0.6 0.15 30)"
            },
            "oklcha": {
                "label": "OKLCHA",
                "description": "Example: oklch(0.6 0.15 30 / 1)"
            }
        }
    },
    {
        "key": "forceRemUnit",
        "type": "boolean",
        "default": false,
        "title": "Force REM units",
        "description": "Convert all pixel values to REM units.",
        "category": "Token values"
    },
    {
        "key": "remBase",
        "type": "number",
        "default": 16,
        "title": "REM base value",
        "description": "Base pixel value for REM conversion.",
        "category": "Token values",
        "dependsOn": {
            "forceRemUnit": true
        }
    },
    {
        "key": "useReferences",
        "type": "boolean",
        "default": true,
        "title": "Use token references",
        "description": "Values will use references to other tokens (where applicable).",
        "category": "Token values"
    },
    {
        "key": "colorPrecision",
        "type": "number",
        "default": 3,
        "title": "Color precision",
        "description": "Maximum number of decimals in colors.",
        "category": "Token values"
    },
    {
        "key": "exportThemesAs",
        "type": "enum",
        "default": "separateFiles",
        "title": "Theme export format",
        "description": "Control how themes are exported in the generated files.",
        "category": "Themes",
        "options": {
            "separateFiles": {
                "label": "Separate files per theme",
                "description": "Generate a separate file for each selected theme"
            },
            "applyDirectly": {
                "label": "Apply themes directly",
                "description": "Apply selected themes directly to token values"
            },
            "mergedTheme": {
                "label": "Merged theme file",
                "description": "Generate theme object with all themes applied together"
            }
        }
    },
    {
        "key": "exportOnlyThemedTokens",
        "type": "boolean",
        "default": false,
        "title": "Export only themed tokens",
        "description": "Theme files will only include tokens that have different values from the base value.",
        "category": "Themes"
    },
    {
        "key": "exportBaseValues",
        "type": "boolean",
        "default": true,
        "title": "Export base values",
        "description": "Base token values will be exported along with themes.",
        "category": "Themes"
    },
    {
        "key": "generateIndexFile",
        "type": "boolean",
        "default": true,
        "title": "Generate index file",
        "description": "Generate a file with imports for all base and theme style files.",
        "category": "Index file"
    },
    {
        "key": "generateFolderIndexFiles",
        "type": "boolean",
        "default": true,
        "title": "Generate folder index files",
        "description": "Generate an index.ts in each theme/base folder.",
        "category": "Style files"
    },
    {
        "key": "indexFileName",
        "type": "string",
        "default": "index.ts",
        "title": "Index filename",
        "description": "The name of the index file that will be generated.",
        "category": "Index file",
        "dependsOn": {
            "generateIndexFile": true
        }
    },
    {
        "key": "baseIndexFilePath",
        "type": "string",
        "default": "./",
        "title": "Path to index file",
        "description": "Index file will be written to this directory relative to export root.",
        "category": "Index file",
        "dependsOn": {
            "generateIndexFile": true
        }
    },
    {
        "key": "generateEmptyFiles",
        "type": "boolean",
        "default": false,
        "title": "Generate empty style files",
        "description": "Generate empty style files instead of omitting them.",
        "category": "Style files"
    },
    {
        "key": "tokenSortOrder",
        "type": "enum",
        "default": "default", 
        "title": "Token name sorting",
        "description": "Control how token names (object keys) are sorted in the generated token files.",
        "category": "Style files",
        "options": {
            "default": {
                "label": "Default order",
                "description": "Keep token names in their original order"
            },
            "alphabetical": {
                "label": "Alphabetical",
                "description": "Sort token names alphabetically A-Z"
            }
        }
    },
    {
        "key": "baseStyleFilePath",
        "type": "string",
        "default": "./base",
        "title": "Path to base style files",
        "description": "All files will be written to this directory relative to export root.",
        "category": "Style files"
    },
    {
        "key": "customizeStyleFileNames",
        "type": "boolean",
        "default": false,
        "title": "Customize style file names",
        "description": "Customize the file names for each token type.",
        "category": "Style files"
    },
    {
        "key": "styleFileNames",
        "type": "object",
        "title": "Style file names",
        "description": "Name of each file that will be generated, grouped by token type.",
        "category": "Style files",
        "dependsOn": {
            "customizeStyleFileNames": true
        },
        "default": {
            "Blur": "blur.ts",
            "Border": "border.ts",
            "BorderRadius": "border-radius.ts",
            "BorderWidth": "border-width.ts",
            "Color": "color.ts",
            "Dimension": "dimension.ts",
            "Duration": "duration.ts",
            "FontFamily": "font-family.ts",
            "FontSize": "font-size.ts",
            "FontWeight": "font-weight.ts",
            "Gradient": "gradient.ts",
            "LetterSpacing": "letter-spacing.ts",
            "LineHeight": "line-height.ts",
            "Opacity": "opacity.ts",
            "ParagraphSpacing": "paragraph-spacing.ts",
            "ProductCopy": "product-copy.ts",
            "Shadow": "shadow.ts",
            "Size": "size.ts",
            "Space": "space.ts",
            "String": "string.ts",
            "TextCase": "text-case.ts",
            "TextDecoration": "text-decoration.ts",
            "Typography": "typography.ts",
            "Visibility": "visibility.ts",
            "ZIndex": "z-index.ts"
        },
        "allowedKeys": {
            "options": [
                "Color",
                "Typography",
                "Dimension",
                "Size",
                "Space",
                "Opacity",
                "FontSize",
                "LineHeight",
                "LetterSpacing",
                "ParagraphSpacing",
                "BorderWidth",
                "BorderRadius",
                "Duration",
                "ZIndex",
                "Shadow",
                "Border",
                "Gradient",
                "String",
                "ProductCopy",
                "FontFamily",
                "FontWeight",
                "TextCase",
                "TextDecoration",
                "Visibility",
                "Blur"
            ],
            "type": "string"
        },
        "allowedValues": {
            "type": "string"
        }
    },
    {
        "key": "globalNamePrefix",
        "type": "string",
        "default": "",
        "title": "Global prefix",
        "description": "Prefix all token names (e.g., 'ds_color_primary').",
        "category": "Token names"
    },
    {
        "key": "customizeTokenPrefixes",
        "type": "boolean",
        "default": false,
        "title": "Customize type prefixes",
        "description": "Customize the prefixes for each design token type.",
        "category": "Token names"
    },
    {
        "key": "tokenPrefixes",
        "type": "object",
        "title": "Token prefixes",
        "description": "Each token of a specific type is prefixed with the following identifier.",
        "category": "Token names",
        "dependsOn": {
            "customizeTokenPrefixes": true
        },
        "default": {
            "Blur": "blur",
            "Border": "border",
            "BorderRadius": "borderRadius",
            "BorderWidth": "borderWidth",
            "Color": "color",
            "Dimension": "dimension",
            "Duration": "duration",
            "FontFamily": "fontFamily",
            "FontSize": "fontSize",
            "FontWeight": "fontWeight",
            "Gradient": "gradient",
            "LetterSpacing": "letterSpacing",
            "LineHeight": "lineHeight",
            "Opacity": "opacity",
            "ParagraphSpacing": "paragraphSpacing",
            "ProductCopy": "productCopy",
            "Shadow": "shadow",
            "Size": "size",
            "Space": "space",
            "String": "string",
            "TextCase": "textCase",
            "TextDecoration": "textDecoration",
            "Typography": "typography",
            "Visibility": "visibility",
            "ZIndex": "zIndex"
        },
        "allowedKeys": {
            "options": [
                "Color",
                "Typography",
                "Dimension",
                "Size",
                "Space",
                "Opacity",
                "FontSize",
                "LineHeight",
                "LetterSpacing",
                "ParagraphSpacing",
                "BorderWidth",
                "BorderRadius",
                "Duration",
                "ZIndex",
                "Shadow",
                "Border",
                "Gradient",
                "String",
                "ProductCopy",
                "FontFamily",
                "FontWeight",
                "TextCase",
                "TextDecoration",
                "Visibility",
                "Blur"
            ],
            "type": "string"
        },
        "allowedValues": {
            "type": "string"
        }
    },
    {
        "key": "showDescriptions",
        "type": "boolean",
        "default": true,
        "title": "Show token descriptions",
        "description": "Show the token description as a code comment for every exported token.",
        "category": "Other"
    },
    {
        "key": "showGeneratedFileDisclaimer",
        "type": "boolean",
        "default": true,
        "title": "Show file disclaimer",
        "description": "A message explaining that the file was automatically generated will appear in all style files.",
        "category": "Other"
    },
    {
        "key": "disclaimer",
        "type": "string",
        "default": "This file was generated automatically by Supernova.io and should not be changed manually.\nTo modify the format or content of this file, please contact your design system team.",
        "title": "Disclaimer message",
        "description": "A message explaining that the file was automatically generated will appear in all style files.",
        "category": "Other",
        "dependsOn": {
            "showGeneratedFileDisclaimer": true
        }
    },
    {
        "key": "indent",
        "type": "number",
        "default": 2,
        "title": "Indentation",
        "description": "Number of spaces used for indentation in generated files.",
        "category": "Other"
    },
    {
        "key": "generateTypeDefinitions",
        "type": "boolean",
        "default": false,
        "title": "Generate type definitions",
        "description": "Generate TypeScript type definitions file (types.d.ts).",
        "category": "Other"
    }
]